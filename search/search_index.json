{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Mastering the Marketplace is a learning library for building transactable offers on the Microsoft commercial marketplace. This content helps you bring your solution to the marketplace faster and with more understanding. The library contains self-paced videos, hands-on labs, and sample code. Build Custom SaaS Offers # This comprehensive course takes you through all you need to get a SaaS offer up and running. From landing pages to webhooks, this course will help you get your custom SaaS offer up and running in days instead of weeks. Take me to it The SaaS Accelerator # Instead of building your own custom SaaS solution, consider using the SaaS Accelerator. The SaaS accelerator is a turnkey reference implementation of the technical requirements for a SaaS offer which can be installed in 20 minutes of less. The project is owned and maintained by an active community and this course will give you everything you need to know about the accelerator. Take me to it Virtual Machine Offers # Virtual machine offers enable you to install your proprietary software on a virtual machine and license it with the virtual machine itself. If you are considering using a virtual machine offer, this thorough course and hands-on labs will take you from start to finish in getting your offer up and running. Take me to it Azure Managed Applications Offers # With a powerful ARM based deployment model, Azure Managed Applications are popular among those who want to deploy resources into the customer's enviroment, but still maintain control of those resources. Learn the whole story in this course which covers Azure Managed Applications from beginning to end. Take me to it Mastering Partner Center # Partner Center is the web portal used to create and publish offers. Learn more about Partner Center in this ever-expanding multi-part course on how to use the portal to publish offers. Take me to it You may find that you need to clone this repository to perform the labs. Feel free to clone or fork and we are always happy to take PRs! View on GitHub","title":"Home"},{"location":"#build-custom-saas-offers","text":"This comprehensive course takes you through all you need to get a SaaS offer up and running. From landing pages to webhooks, this course will help you get your custom SaaS offer up and running in days instead of weeks. Take me to it","title":"Build Custom SaaS Offers"},{"location":"#the-saas-accelerator","text":"Instead of building your own custom SaaS solution, consider using the SaaS Accelerator. The SaaS accelerator is a turnkey reference implementation of the technical requirements for a SaaS offer which can be installed in 20 minutes of less. The project is owned and maintained by an active community and this course will give you everything you need to know about the accelerator. Take me to it","title":"The SaaS Accelerator"},{"location":"#virtual-machine-offers","text":"Virtual machine offers enable you to install your proprietary software on a virtual machine and license it with the virtual machine itself. If you are considering using a virtual machine offer, this thorough course and hands-on labs will take you from start to finish in getting your offer up and running. Take me to it","title":"Virtual Machine Offers"},{"location":"#azure-managed-applications-offers","text":"With a powerful ARM based deployment model, Azure Managed Applications are popular among those who want to deploy resources into the customer's enviroment, but still maintain control of those resources. Learn the whole story in this course which covers Azure Managed Applications from beginning to end. Take me to it","title":"Azure Managed Applications Offers"},{"location":"#mastering-partner-center","text":"Partner Center is the web portal used to create and publish offers. Learn more about Partner Center in this ever-expanding multi-part course on how to use the portal to publish offers. Take me to it You may find that you need to clone this repository to perform the labs. Feel free to clone or fork and we are always happy to take PRs! View on GitHub","title":"Mastering Partner Center"},{"location":"ama/","text":"This course is designed to help you decrease your onboarding when building an Azure Managed Application offer. The content is comprised of recordings of a virtual workshop and are divided into small digestible modules for easy consumption. Also included are several hands-on labs to turn your knowledge into skills. Let us know what you need in this content library. Get your hands dirty with the hands-on labs . The slides for this course, which are used in the following modules, are here . Course Introduction # Video This module sets the stage for all the others that follow by providing a quick introduction to the course. See what the course will offer in various modules. Managed Applications Overview # Video Solution Template offers and Azure Managed Application offers are very similar, but there is an important difference. Learn about the two types of managed applications in this module detailing the differences. Azure Managed Applications Overview # Video Azure Managed Applications are the transactable Managed App offer type. Get a walkthrough of Azure Managed Applications including their general architecture and usage. Partner Center with Azure Managed Applications Overview # Video Partner Center is the portal publishers use to create, configure, publish, and monitor their offers in the Microsoft Marketplace. This overview takes you through Partner Center for Azure Managed Applications. Configuring Partner Center for Azure Managed Applications - Demo # Video Understanding Partner Center, the publisher's portal, is key to creating great offers. This demo walks through setting up a Partner Center offer for an Azure Managed Application. Azure Managed Application Deployment Package Overview # Video The deployment package for Azure Managed Applications is the definition of the application itself. Learn about its components and their role in this quick overview. Working with a Azure Managed Application Deployment Package - Demo # Video This demo walks through working with Azure Managed Application deployment packages. Learn about the usage and components of the ARM template, mainTemplate.json , and how to work with createUiDefinition.json to create great install experiences. Integrating Virtual Machine Offers into Azure Managed Applications # Video Deploying a custom virtual machine is a common need when working with Managed Apps. Get an overview of how to integrate a custom Virtual Machine offer into an Azure Managed Application deployment package. Purchasing an Azure Managed Application \u2013 Demo # Video See the purchasing process of an Azure Managed Application from the customer\u2019s point of view. This module is often helpful for customers looking to familiarize themselves with the purchase process. Managing My Purchased Azure Managed Applications \u2013 Demo # Video Once a customer has purchased one or more Azure Managed Apps, they may need to manage those subscriptions. See the tools and techniques customers have through the Azure portal for managing their Azure Managed Application subscriptions. Managing My Customer\u2019s Azure Managed Applications Overview # Video Managing Azure Managed Application customer deployments is the responsibility of the publisher. See the tools techniques publishers use to do this easily and effectively through the Azure portal as well as getting a walkthrough of how to use them. Managing My Customer\u2019s Azure Managed Applications \u2013 Demo # Video Once deployed, Azure Managed Applications are managed and maintained by the publisher. This module shows the Azure portal-based tools and practices publishers use to manage their customer\u2019s environments. Metered Billing for Azure Managed Applications Overview # Video Billing for usage-based consumption is a requirement for many Azure Managed Applications. Get a walkthrough of metered billing and an architectural overview of how it works. Metered Billing for Azure Managed Applications \u2013 Demo # Video See metered billing in action at the REST API level. This module shows metered billing API interaction through Postman. Advanced Deployment Scenarios for Azure Managed Applications # Video This brief module covers a few advanced scenarios for Azure Managed Application deployments including containers and IoT integration. Hands-on labs # These hand on labs build on top of one another, so progress through them in order to get a fully functional Azure Managed Application published and working for a test environment. Prerequisites # Azure subscription that can create resources A Partner Center Account VS Code or other text editor Getting started # Clone this repository to your local machine. You will need some artifacts from the lab folders to complete the labs. Labs # Lab 1 - Publishing an Azure Managed Application Offer in Partner Center Lab 2 - The Managed Application Deployment Package Lab 3 - Purchasing an Azure Managed Application Lab 4 - Administering Your Purchased Managed Applications Lab 5 - Administering Your Customer\u2019s Managed Applications","title":"Mastering Azure Managed Application Offers"},{"location":"ama/#course-introduction","text":"Video This module sets the stage for all the others that follow by providing a quick introduction to the course. See what the course will offer in various modules.","title":"Course Introduction"},{"location":"ama/#managed-applications-overview","text":"Video Solution Template offers and Azure Managed Application offers are very similar, but there is an important difference. Learn about the two types of managed applications in this module detailing the differences.","title":"Managed Applications Overview"},{"location":"ama/#azure-managed-applications-overview","text":"Video Azure Managed Applications are the transactable Managed App offer type. Get a walkthrough of Azure Managed Applications including their general architecture and usage.","title":"Azure Managed Applications Overview"},{"location":"ama/#partner-center-with-azure-managed-applications-overview","text":"Video Partner Center is the portal publishers use to create, configure, publish, and monitor their offers in the Microsoft Marketplace. This overview takes you through Partner Center for Azure Managed Applications.","title":"Partner Center with Azure Managed Applications Overview"},{"location":"ama/#configuring-partner-center-for-azure-managed-applications-demo","text":"Video Understanding Partner Center, the publisher's portal, is key to creating great offers. This demo walks through setting up a Partner Center offer for an Azure Managed Application.","title":"Configuring Partner Center for Azure Managed Applications - Demo"},{"location":"ama/#azure-managed-application-deployment-package-overview","text":"Video The deployment package for Azure Managed Applications is the definition of the application itself. Learn about its components and their role in this quick overview.","title":"Azure Managed Application Deployment Package Overview"},{"location":"ama/#working-with-a-azure-managed-application-deployment-package-demo","text":"Video This demo walks through working with Azure Managed Application deployment packages. Learn about the usage and components of the ARM template, mainTemplate.json , and how to work with createUiDefinition.json to create great install experiences.","title":"Working with a Azure Managed Application Deployment Package - Demo"},{"location":"ama/#integrating-virtual-machine-offers-into-azure-managed-applications","text":"Video Deploying a custom virtual machine is a common need when working with Managed Apps. Get an overview of how to integrate a custom Virtual Machine offer into an Azure Managed Application deployment package.","title":"Integrating Virtual Machine Offers into Azure Managed Applications"},{"location":"ama/#purchasing-an-azure-managed-application-demo","text":"Video See the purchasing process of an Azure Managed Application from the customer\u2019s point of view. This module is often helpful for customers looking to familiarize themselves with the purchase process.","title":"Purchasing an Azure Managed Application \u2013 Demo"},{"location":"ama/#managing-my-purchased-azure-managed-applications-demo","text":"Video Once a customer has purchased one or more Azure Managed Apps, they may need to manage those subscriptions. See the tools and techniques customers have through the Azure portal for managing their Azure Managed Application subscriptions.","title":"Managing My Purchased Azure Managed Applications \u2013 Demo"},{"location":"ama/#managing-my-customers-azure-managed-applications-overview","text":"Video Managing Azure Managed Application customer deployments is the responsibility of the publisher. See the tools techniques publishers use to do this easily and effectively through the Azure portal as well as getting a walkthrough of how to use them.","title":"Managing My Customer\u2019s Azure Managed Applications Overview"},{"location":"ama/#managing-my-customers-azure-managed-applications-demo","text":"Video Once deployed, Azure Managed Applications are managed and maintained by the publisher. This module shows the Azure portal-based tools and practices publishers use to manage their customer\u2019s environments.","title":"Managing My Customer\u2019s Azure Managed Applications \u2013 Demo"},{"location":"ama/#metered-billing-for-azure-managed-applications-overview","text":"Video Billing for usage-based consumption is a requirement for many Azure Managed Applications. Get a walkthrough of metered billing and an architectural overview of how it works.","title":"Metered Billing for Azure Managed Applications Overview"},{"location":"ama/#metered-billing-for-azure-managed-applications-demo","text":"Video See metered billing in action at the REST API level. This module shows metered billing API interaction through Postman.","title":"Metered Billing for Azure Managed Applications \u2013 Demo"},{"location":"ama/#advanced-deployment-scenarios-for-azure-managed-applications","text":"Video This brief module covers a few advanced scenarios for Azure Managed Application deployments including containers and IoT integration.","title":"Advanced Deployment Scenarios for Azure Managed Applications"},{"location":"ama/#hands-on-labs","text":"These hand on labs build on top of one another, so progress through them in order to get a fully functional Azure Managed Application published and working for a test environment.","title":"Hands-on labs"},{"location":"ama/#prerequisites","text":"Azure subscription that can create resources A Partner Center Account VS Code or other text editor","title":"Prerequisites"},{"location":"ama/#getting-started","text":"Clone this repository to your local machine. You will need some artifacts from the lab folders to complete the labs.","title":"Getting started"},{"location":"ama/#labs","text":"Lab 1 - Publishing an Azure Managed Application Offer in Partner Center Lab 2 - The Managed Application Deployment Package Lab 3 - Purchasing an Azure Managed Application Lab 4 - Administering Your Purchased Managed Applications Lab 5 - Administering Your Customer\u2019s Managed Applications","title":"Labs"},{"location":"ama/labs/","text":"Mastering Azure Managed Applications Workshop - Labs # Part of the Mastering the Marketplace learning library # The Mastering the Marketplace learning library contains videos, hands-on labs, and sample code to help Microsoft marketplace solution publishers get their solutions on-boarded to the marketplace. The content is primarily technical and targets technologists building Azure Managed Applications for the Azure Marketplace. Hands-on Labs # Additional resources # Marketplace Samples and Resources Client libraries Sample projects and repositories Pointers to educational resources Mastering the Marketplace Learning Library Marketplace Webinars Business and technical Live sessions and recordings Marketplace on Microsoft Learn SaaS Accelerator Azure for Executives Podcast","title":"Mastering Azure Managed Applications Workshop - Labs"},{"location":"ama/labs/#mastering-azure-managed-applications-workshop-labs","text":"","title":"Mastering Azure Managed Applications Workshop - Labs"},{"location":"ama/labs/#part-of-the-mastering-the-marketplace-learning-library","text":"The Mastering the Marketplace learning library contains videos, hands-on labs, and sample code to help Microsoft marketplace solution publishers get their solutions on-boarded to the marketplace. The content is primarily technical and targets technologists building Azure Managed Applications for the Azure Marketplace.","title":"Part of the Mastering the Marketplace learning library"},{"location":"ama/labs/#hands-on-labs","text":"","title":"Hands-on Labs"},{"location":"ama/labs/#additional-resources","text":"Marketplace Samples and Resources Client libraries Sample projects and repositories Pointers to educational resources Mastering the Marketplace Learning Library Marketplace Webinars Business and technical Live sessions and recordings Marketplace on Microsoft Learn SaaS Accelerator Azure for Executives Podcast","title":"Additional resources"},{"location":"ama/labs/lab-1-partner-center/","text":"Lab 1 - Publishing an Azure Managed Application Offer in Partner Center # In this lab you will configure and publish an Azure Application offer in the Azure Marketplace. To do this, you must have an account in Partner Center, the portal for marketplace publishers. You must also have an Azure account where you can create resources. Exercise 1 - Create the offer # In this exercise you will create an Azure application offer. Log in to Partner Center . Go to the Marketplace offers page. Select the New offer dropdown and choose Azure application for the type of offer you will create. You will be prompted for an Offer ID and Offer alias . Use the following values. Offer ID: ama-workshop-01 Offer alias: AMA Workshop 1 Click the Create button. Your new offer is created and you are redirected to the Offer setup page. You now have an offer to work with. Proceed to the next exercise. Exercise 2 - Offer setup # In this exercise you will set up a leads management section and connect it to a CRM. Navigate the to Offer setup page via the left hand navigation. CRM leads - Part 1 # In this section you will fill our the Offer setup portion of your offer. You will connect your offer to a CRM so you collect leads of people using your solution, or interested in it. Navigate to the Offer setup page via the left hand navigation. Scroll down to the Customer leads section. Click the Connect link. Click the Lead destination dropdown and note you may integrate your lead collection with several types of CRMs. In this exercise you will connect to an Azure table , so select that option from the dropdown. Put in your email address. You must create the Azure table storage account in the Azure portal to connect to for lead management. Create the Data storage account in the Azure Portal # In this section you will create an Azure Data Storage account using the Azure portal. Log in to the Azure portal . Click + Create a resource in the left-most side menu. The Create a resource page appears. In the search box, type Storage account . Select Storage account from the resulting dropdown. On the Storage account page, click the Create button. You should now be on the Create a storage account page. Under the Project details section, select Create new for your resource group. Create a new Resource group named ama-workshop-leads . For storage account name, type in a string that will be unique across azure. Try something like amaworshopleads002 , where 002 is a random number between 001 and 999. For the Region select a region near you. Under Redundancy , select Locally-redundant storage (LRS) . This is the least expensive storage account type. Select the Review and create at the bottom of the page.You are taken to the final review page and a message should appear at the top of the page, Validation passed . Select the Create button. CRM leads - Part 2 # In this section you will finish configuring leads management by connecting it to the new Data Storage account you just created. In the Azure portal, navigate to the Data Storage account you just created. In the left hand menu under Security + networking select Access keys . Near the top of the Access keys screen, click the Show keys link. This makes the hidden keys visible. Under key 1 copy the Connection string into your clipboard. Return to the Partner Center browser tab and paste the connection string in the Storage account connection string text box. Click the Validate link. You should see a positive confirmation that the connection string worked. Click the Connect button. Click the Save draft button at the bottom of the page. You have completed the Offer setup screen. Proceed to the next exercise. Exercise 3 - Properties # In this exercise you will fill out the Properties section of your offer. Navigate the to Properties page via the left hand navigation. Categories # You must select a category for your Managed App. You want your app to show up in the Azure Marketplace, so you will select a category that will ensure it will appear there. Click the Categories link. Under the Primary category dropdown, select Developer tools . Under the Subcategory dropdown, select Developer Service . You have selected a category for your application. Note you could select one more, but that's not needed for this lab. Legal # In the Legal section select the checkbox next to \"Use the Standard Contract for Microsoft\u2019s commercial marketplace?\". A dialog box appears. Click the Accept button. Click the Save draft button at the bottom of the page. You have completed the Properties screen. Proceed to the next exercise. Exercise 4 - Offer listing # In this exercise, you fill out the Offer listing page. In the left-hand menu, select Offer listing . You are taken to the Offer listing page. In the Search results summary textbox, enter \" AMA Workshop 1 search results summary \". In the Short description text area, enter \" AMA Workshop 1 short description \". In the Description text area, enter \" AMA Workshop 1 description \". In the Search keywords section, you may enter up to 3 keywords. For the Privacy policy link textbox, you may use Microsoft's privacy policy for this workshop. Enter \"https://privacy.microsoft.com/en-us/privacystatement\". This is for lab purposes. Do not use Microsoft's privacy policy on real offers. Scroll down to the Support contact section and enter the required information. For the field Support website for Azure Global customers , enter the link \"https://partner.microsoft.com/en-US/support/v2/\". Again, this is for lab purposes only, not to be used in a live offer. This would be a link to a page on your own site. Scroll down to the Engineering contact information section. Enter the required information. Scroll down to the Marketplace media > Logos section. Here you will need to upload two logos that must be of the exact right size. Examples are provided for you in the ./lab-1-partner-center/assets folder. You can click to navigate to the images or you can drag and drop them. Upload the two images. For the screenshot, click the Add image caption link. Enter whatever you like for a caption. Click the OK button. Click the Save draft button at the bottom of the page. You have completed the Offer listing screen. Proceed to the next exercise. Exercise 5 - Preview audience # In this exercise, you will add your subscription id to the list of subscriptions that may access this offer before it is live. This is to provide access to your test team and anyone else who would like to preview the offer before it goes live. In this case, you will enter the subscription ID you are using in this workshop. In the Azure portal, find your subscription ID. If you aren't sure how to do this take the following steps. In the Azure portal, in the search box at the top of the screen, enter the word, \"Subscriptions.\" Select the Subscriptions icon in the dropdown. On the Subscriptions page, click the link to the subscription you are using. On the Subscription page, copy the Subscription ID into your clipboard. In the Partner Center portal, Preview audience page, enter your subscription ID. Provide a brief description for this subscription. You have completed the Preview audience screen. Proceed to the next exercise. Exercise 6 - Resell through CSPs # In this exercise, you will indicate that your solution will not be re-sold by Cloud Solution Providers. From the list of radio buttons, select No partners in the CSP program . Click the Save draft button at the bottom of the page. You have completed the Resell through CSPs screen. Proceed to the next exercise. Exercise 6 - Adding plans # Every offer must include at least one plan. In this exercise, you will add two plans to your offer. Creating a plan # In the left-hand menu, select Plan overview . At the top of the page, click Create new plan. Enter a Plan ID of \"silver-plan\". For Plan name enter \"Silver\". Click the Create button. Plan setup # On the Plan setup page, under the Plan type section, select the dropdown item, Managed application . Click the Save Draft button at the bottom of the screen. Plan listing # Click the Plan listing menu item on the left. For Plan summary , enter \"Silver plan summary\". For the Plan description , enter \"Silver plan description\". Click the Save Draft button at the bottom of the screen. Pricing and availability # Click the Pricing and availability menu item on the left. In the Markets section, click the Edit markets link. you must select at least one market in which your plan will be available for purchase. Most users will select \"United States.\" Select a market. Click the Save button. In the Pricing section you will enter prices of $0 because you don't want this workshop to cost you money when you buy your offer later. For Price , enter 0. In this section, we are going to have you do something that will be explained later in the day. It needs to be done upon plan creation, so you will do it now. Under the Marketplace Metering Service dimensions section, click Add a Custom Meter Dimension . The Enabled checkbox is selected. For ID , enter \"scan-1-page\". For Display name , enter \"Scan a page\". For Unit of measure , enter \"Scanned page\". For Price Per unit, enter 0.0 For Monthly included in price , enter 1000. Click Add another Dimension . The Enabled checkbox is selected. For ID , enter \"write-to-emr\". For Display name , enter \"EMR Write\". For Unit of measure , enter \"EMR Write\". For Price Per unit, enter 0.0 For Monthly included in price , enter 500. Your dimensions should look like this. Enabled ID Display Name Unit of Measure Price per unit in USD Monthly quantity included in base Checked scan-1-page Scan a page Scanned page 0.0 1000 Checked write-to-emr EMR Write EMR Write 0.0 500 Click the Save Draft button at the bottom of the screen. Technical configuration # In this section, you specify details about your plan needed to create the application at deployment time. Under Package details , enter \"0.0.1\" for version. For Package file (.zip) you will upload a ZIP file containing the deployment package needed. You may drag an drop or click to brose to the ZIP file. There is a file in the lab-1-partner-center\\assets assets folder named silver-plan-deployment-package.zip . Upload it. Navigate to the Public Azure section near the bottom of the screen. For the Azure Active Directory tenant ID section, enter your Tenant ID from the Azure portal. If you aren't sure how to find your Tenant ID, click here and then come back to this section when you are done. For the Authorizations section, under Principal ID , enter the ID of your own account from the Azure portal. If you aren't sure how to find your account ID, click here and come back to this section when you are done. For Role definition , select Owner . Click the Save draft button at the bottom of the screen. Check your offer # At the bottom of the screen, click the Review and publish button. All circles to the right should be green with a check box in them. If any are grey, fix that section and come back to Review and publish changes . DO NOT publish your offer yet. Conclusion # Congratulations, you have completed Lab 1, the longest lab in the workshop. Other labs will build upon what you have done here in this lab. In this lab you did the following. Appendix # Finding your Tenant ID # Open the Azure portal . In the search box at the top of the page, type Tenant . Select Tenant properties from the drop down menu. Find the Tenant ID field and copy it to your clipboard. Finding your user account ID # Open the Azure portal . In the search box at the top of the page, type Users . Select Users from the dropdown menu. Search for your user account and click on it. Find the Object ID and copy it to your clipboard.","title":"Lab 1 - Publishing an Azure Managed Application Offer in Partner Center"},{"location":"ama/labs/lab-1-partner-center/#lab-1-publishing-an-azure-managed-application-offer-in-partner-center","text":"In this lab you will configure and publish an Azure Application offer in the Azure Marketplace. To do this, you must have an account in Partner Center, the portal for marketplace publishers. You must also have an Azure account where you can create resources.","title":"Lab 1 - Publishing an Azure Managed Application Offer in Partner Center"},{"location":"ama/labs/lab-1-partner-center/#exercise-1-create-the-offer","text":"In this exercise you will create an Azure application offer. Log in to Partner Center . Go to the Marketplace offers page. Select the New offer dropdown and choose Azure application for the type of offer you will create. You will be prompted for an Offer ID and Offer alias . Use the following values. Offer ID: ama-workshop-01 Offer alias: AMA Workshop 1 Click the Create button. Your new offer is created and you are redirected to the Offer setup page. You now have an offer to work with. Proceed to the next exercise.","title":"Exercise 1 - Create the offer"},{"location":"ama/labs/lab-1-partner-center/#exercise-2-offer-setup","text":"In this exercise you will set up a leads management section and connect it to a CRM. Navigate the to Offer setup page via the left hand navigation.","title":"Exercise 2 - Offer setup"},{"location":"ama/labs/lab-1-partner-center/#crm-leads-part-1","text":"In this section you will fill our the Offer setup portion of your offer. You will connect your offer to a CRM so you collect leads of people using your solution, or interested in it. Navigate to the Offer setup page via the left hand navigation. Scroll down to the Customer leads section. Click the Connect link. Click the Lead destination dropdown and note you may integrate your lead collection with several types of CRMs. In this exercise you will connect to an Azure table , so select that option from the dropdown. Put in your email address. You must create the Azure table storage account in the Azure portal to connect to for lead management.","title":"CRM leads - Part 1"},{"location":"ama/labs/lab-1-partner-center/#create-the-data-storage-account-in-the-azure-portal","text":"In this section you will create an Azure Data Storage account using the Azure portal. Log in to the Azure portal . Click + Create a resource in the left-most side menu. The Create a resource page appears. In the search box, type Storage account . Select Storage account from the resulting dropdown. On the Storage account page, click the Create button. You should now be on the Create a storage account page. Under the Project details section, select Create new for your resource group. Create a new Resource group named ama-workshop-leads . For storage account name, type in a string that will be unique across azure. Try something like amaworshopleads002 , where 002 is a random number between 001 and 999. For the Region select a region near you. Under Redundancy , select Locally-redundant storage (LRS) . This is the least expensive storage account type. Select the Review and create at the bottom of the page.You are taken to the final review page and a message should appear at the top of the page, Validation passed . Select the Create button.","title":"Create the Data storage account in the Azure Portal"},{"location":"ama/labs/lab-1-partner-center/#crm-leads-part-2","text":"In this section you will finish configuring leads management by connecting it to the new Data Storage account you just created. In the Azure portal, navigate to the Data Storage account you just created. In the left hand menu under Security + networking select Access keys . Near the top of the Access keys screen, click the Show keys link. This makes the hidden keys visible. Under key 1 copy the Connection string into your clipboard. Return to the Partner Center browser tab and paste the connection string in the Storage account connection string text box. Click the Validate link. You should see a positive confirmation that the connection string worked. Click the Connect button. Click the Save draft button at the bottom of the page. You have completed the Offer setup screen. Proceed to the next exercise.","title":"CRM leads - Part 2"},{"location":"ama/labs/lab-1-partner-center/#exercise-3-properties","text":"In this exercise you will fill out the Properties section of your offer. Navigate the to Properties page via the left hand navigation.","title":"Exercise 3 - Properties"},{"location":"ama/labs/lab-1-partner-center/#categories","text":"You must select a category for your Managed App. You want your app to show up in the Azure Marketplace, so you will select a category that will ensure it will appear there. Click the Categories link. Under the Primary category dropdown, select Developer tools . Under the Subcategory dropdown, select Developer Service . You have selected a category for your application. Note you could select one more, but that's not needed for this lab.","title":"Categories"},{"location":"ama/labs/lab-1-partner-center/#legal","text":"In the Legal section select the checkbox next to \"Use the Standard Contract for Microsoft\u2019s commercial marketplace?\". A dialog box appears. Click the Accept button. Click the Save draft button at the bottom of the page. You have completed the Properties screen. Proceed to the next exercise.","title":"Legal"},{"location":"ama/labs/lab-1-partner-center/#exercise-4-offer-listing","text":"In this exercise, you fill out the Offer listing page. In the left-hand menu, select Offer listing . You are taken to the Offer listing page. In the Search results summary textbox, enter \" AMA Workshop 1 search results summary \". In the Short description text area, enter \" AMA Workshop 1 short description \". In the Description text area, enter \" AMA Workshop 1 description \". In the Search keywords section, you may enter up to 3 keywords. For the Privacy policy link textbox, you may use Microsoft's privacy policy for this workshop. Enter \"https://privacy.microsoft.com/en-us/privacystatement\". This is for lab purposes. Do not use Microsoft's privacy policy on real offers. Scroll down to the Support contact section and enter the required information. For the field Support website for Azure Global customers , enter the link \"https://partner.microsoft.com/en-US/support/v2/\". Again, this is for lab purposes only, not to be used in a live offer. This would be a link to a page on your own site. Scroll down to the Engineering contact information section. Enter the required information. Scroll down to the Marketplace media > Logos section. Here you will need to upload two logos that must be of the exact right size. Examples are provided for you in the ./lab-1-partner-center/assets folder. You can click to navigate to the images or you can drag and drop them. Upload the two images. For the screenshot, click the Add image caption link. Enter whatever you like for a caption. Click the OK button. Click the Save draft button at the bottom of the page. You have completed the Offer listing screen. Proceed to the next exercise.","title":"Exercise 4 - Offer listing"},{"location":"ama/labs/lab-1-partner-center/#exercise-5-preview-audience","text":"In this exercise, you will add your subscription id to the list of subscriptions that may access this offer before it is live. This is to provide access to your test team and anyone else who would like to preview the offer before it goes live. In this case, you will enter the subscription ID you are using in this workshop. In the Azure portal, find your subscription ID. If you aren't sure how to do this take the following steps. In the Azure portal, in the search box at the top of the screen, enter the word, \"Subscriptions.\" Select the Subscriptions icon in the dropdown. On the Subscriptions page, click the link to the subscription you are using. On the Subscription page, copy the Subscription ID into your clipboard. In the Partner Center portal, Preview audience page, enter your subscription ID. Provide a brief description for this subscription. You have completed the Preview audience screen. Proceed to the next exercise.","title":"Exercise 5 - Preview audience"},{"location":"ama/labs/lab-1-partner-center/#exercise-6-resell-through-csps","text":"In this exercise, you will indicate that your solution will not be re-sold by Cloud Solution Providers. From the list of radio buttons, select No partners in the CSP program . Click the Save draft button at the bottom of the page. You have completed the Resell through CSPs screen. Proceed to the next exercise.","title":"Exercise 6 - Resell through CSPs"},{"location":"ama/labs/lab-1-partner-center/#exercise-6-adding-plans","text":"Every offer must include at least one plan. In this exercise, you will add two plans to your offer.","title":"Exercise 6 - Adding plans"},{"location":"ama/labs/lab-1-partner-center/#creating-a-plan","text":"In the left-hand menu, select Plan overview . At the top of the page, click Create new plan. Enter a Plan ID of \"silver-plan\". For Plan name enter \"Silver\". Click the Create button.","title":"Creating a plan"},{"location":"ama/labs/lab-1-partner-center/#plan-setup","text":"On the Plan setup page, under the Plan type section, select the dropdown item, Managed application . Click the Save Draft button at the bottom of the screen.","title":"Plan setup"},{"location":"ama/labs/lab-1-partner-center/#plan-listing","text":"Click the Plan listing menu item on the left. For Plan summary , enter \"Silver plan summary\". For the Plan description , enter \"Silver plan description\". Click the Save Draft button at the bottom of the screen.","title":"Plan listing"},{"location":"ama/labs/lab-1-partner-center/#pricing-and-availability","text":"Click the Pricing and availability menu item on the left. In the Markets section, click the Edit markets link. you must select at least one market in which your plan will be available for purchase. Most users will select \"United States.\" Select a market. Click the Save button. In the Pricing section you will enter prices of $0 because you don't want this workshop to cost you money when you buy your offer later. For Price , enter 0. In this section, we are going to have you do something that will be explained later in the day. It needs to be done upon plan creation, so you will do it now. Under the Marketplace Metering Service dimensions section, click Add a Custom Meter Dimension . The Enabled checkbox is selected. For ID , enter \"scan-1-page\". For Display name , enter \"Scan a page\". For Unit of measure , enter \"Scanned page\". For Price Per unit, enter 0.0 For Monthly included in price , enter 1000. Click Add another Dimension . The Enabled checkbox is selected. For ID , enter \"write-to-emr\". For Display name , enter \"EMR Write\". For Unit of measure , enter \"EMR Write\". For Price Per unit, enter 0.0 For Monthly included in price , enter 500. Your dimensions should look like this. Enabled ID Display Name Unit of Measure Price per unit in USD Monthly quantity included in base Checked scan-1-page Scan a page Scanned page 0.0 1000 Checked write-to-emr EMR Write EMR Write 0.0 500 Click the Save Draft button at the bottom of the screen.","title":"Pricing and availability"},{"location":"ama/labs/lab-1-partner-center/#technical-configuration","text":"In this section, you specify details about your plan needed to create the application at deployment time. Under Package details , enter \"0.0.1\" for version. For Package file (.zip) you will upload a ZIP file containing the deployment package needed. You may drag an drop or click to brose to the ZIP file. There is a file in the lab-1-partner-center\\assets assets folder named silver-plan-deployment-package.zip . Upload it. Navigate to the Public Azure section near the bottom of the screen. For the Azure Active Directory tenant ID section, enter your Tenant ID from the Azure portal. If you aren't sure how to find your Tenant ID, click here and then come back to this section when you are done. For the Authorizations section, under Principal ID , enter the ID of your own account from the Azure portal. If you aren't sure how to find your account ID, click here and come back to this section when you are done. For Role definition , select Owner . Click the Save draft button at the bottom of the screen.","title":"Technical configuration"},{"location":"ama/labs/lab-1-partner-center/#check-your-offer","text":"At the bottom of the screen, click the Review and publish button. All circles to the right should be green with a check box in them. If any are grey, fix that section and come back to Review and publish changes . DO NOT publish your offer yet.","title":"Check your offer"},{"location":"ama/labs/lab-1-partner-center/#conclusion","text":"Congratulations, you have completed Lab 1, the longest lab in the workshop. Other labs will build upon what you have done here in this lab. In this lab you did the following.","title":"Conclusion"},{"location":"ama/labs/lab-1-partner-center/#appendix","text":"","title":"Appendix"},{"location":"ama/labs/lab-1-partner-center/#finding-your-tenant-id","text":"Open the Azure portal . In the search box at the top of the page, type Tenant . Select Tenant properties from the drop down menu. Find the Tenant ID field and copy it to your clipboard.","title":"Finding your Tenant ID"},{"location":"ama/labs/lab-1-partner-center/#finding-your-user-account-id","text":"Open the Azure portal . In the search box at the top of the page, type Users . Select Users from the dropdown menu. Search for your user account and click on it. Find the Object ID and copy it to your clipboard.","title":"Finding your user account ID"},{"location":"ama/labs/lab-2-deployment-package/","text":"Lab 2 - The Managed Application Deployment Package # In this lab, you will edit the artifacts that go into a an Azure Managed Application deployment package. You will run your artifacts through a validation process and package them for use in deployment. Finally, you will create a new plan for your existing offer from Lab 1 and publish your offer. Exercise 1 - ARM TTK # This exercise introduces Azure Resource Manager Template Toolkit (ARM TTK), a tool that runs in PowerShell and validates the artifacts in your deployment package. The ARM TTK tool runs tests that ensure valid mainTemplate.json and createUiDefinition files. You will clone the ARM TTK repository and bring the code to your local machine where it can be executed using PowerShell. If you are not on Windows, you may download PowerShell for your platform. Linux macOS Clone the ARM TTK repository from GitHub. Set up ARM TTK to run on your machine by executing the following commands in a PowerShell terminal. ```powershell cd \" \\arm-ttk\\arm-ttk\" Import-Module .\\arm-ttk.psd1 ``` From the same directory you may execute the ARM TTK tool as shown below. Note the path is looking at the end folder, which contains the solution to this lab. $AMAPackage = \"<PATH TO AMA-WORKSHOP>\\ama-workshop\\lab-2-deployment-package\\assets\\end\\\" Test-AzTemplate -TemplatePath $AMAPackage See that test pass. The output from ARM TTK should look something like this. Validating end\\createUiDefinition.json AllFiles [+] JSONFiles Should Be Valid (61 ms) CreateUIDefinition [+] Allowed Values Should Actually Be Allowed (190 ms) ... Validating end\\mainTemplate.json deploymentTemplate [+] adminUsername Should Not Be A Literal (90 ms) [+] apiVersions Should Be Recent In Reference Functions (171 ms) ... You will use the ARM TTK tool to check the status of your own package files several times during this lab. Because of this, do not close the terminal window between steps. Set up ARM TTK to point at the begin directory for validation as shown below. ```powershell $AMAPackage = \" \\ama-workshop\\lab-2-deployment-package\\assets\\begin\\\" 6. Run the tests as shown below. They should all pass although the `mainTemplate.json` file in the `begin` directory is basically a skeleton you will build on. ```powershell Test-AzTemplate -TemplatePath $AMAPackage Exercise 2 - mainTemplate.json # Here you will build out a ARM template that deploys a virtual machine along with some other Azure services. The basic outline of a mainTemplate.json ARM template looks like this. { \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\", \"contentVersion\": \"1.0.0.0\", \"parameters\": {}, \"variables\": {}, \"resources\": [], \"outputs\": {} } There are several parameters the ARM template expects. You will fill them in and take note of the different types of parameters. Open the mainTemplate.json file in a text editor like VS Code. Add the following JSON inside the parameters section of the ARM template. \"adminUsername\": { \"type\": \"string\", \"metadata\": { \"description\": \"Username for the Virtual Machine.\" } }, \"adminPassword\": { \"type\": \"securestring\", \"metadata\": { \"description\": \"Password for the Virtual Machine.\" } }, \"storageAccountName\": { \"type\": \"string\" }, \"storageAccountType\": { \"type\": \"string\" }, \"windowsOSVersion\": { \"type\": \"string\", \"defaultValue\": \"2019-datacenter-gensecond\", \"allowedValues\": [ \"2019-datacenter-gensecond\", \"2016-datacenter-gensecond\" ], \"metadata\": { \"description\": \"The Windows version for the VM. This will pick a fully patched image of this given Windows version.\" } }, \"vmSize\": { \"type\": \"string\", \"defaultValue\": \"Standard_D2s_V3\", \"metadata\": { \"description\": \"Size of the virtual machine.\" } }, \"vmName\": { \"type\": \"string\", \"defaultValue\": \"amaSimpleVM\", \"metadata\": { \"description\": \"Name of the virtual machine.\" } }, \"location\": { \"type\": \"string\", \"defaultValue\": \"[resourceGroup().location]\", \"metadata\": { \"description\": \"Location for all resources.\" } } Take a moment to review the type attribute of each parameter. See that you can pass in multiple data types. Run ARM TTK. The following test fails. cmd Parameters Must Be Referenced Make the variables section look like the following JSON. \"variables\": { \"itemPrefix\": \"[concat('ama', uniqueString(resourceGroup().id))]\", \"addressPrefix\": \"10.0.0.0/16\", \"domainNameLabel\": \"[concat(variables('itemPrefix'), '-dnl')]\", \"networkSecurityGroupName\": \"[concat(variables('itemPrefix'), '-nsg')]\", \"nicName\": \"[concat(variables('itemPrefix'), '-nic')]\", \"publicIPAddressName\": \"[concat(variables('itemPrefix'), '-ip')]\", \"storageAccountName\": \"[concat(parameters('storageAccountName'), uniqueString('storage'))]\", \"subnetName\": \"Subnet\", \"subnetPrefix\": \"10.0.0.0/24\", \"subnetRef\": \"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]\", \"virtualNetworkName\": \"[concat(variables('itemPrefix'), '-vnet')]\" } Run ARM TTK. Now there are parameters and variables that are not being referenced. This means they are not being referenced in the resources section which defines the actual resources to be created by the ARM template. Note the itemPrefix parameter is not reported as an unreferenced parameter since it being used by several other variables. Add the following resource definitions to the resources[] section. { \"type\": \"Microsoft.Storage/storageAccounts\", \"apiVersion\": \"2018-02-01\", \"name\": \"[variables('storageAccountName')]\", \"location\": \"[parameters('location')]\", \"sku\": { \"name\": \"[parameters('storageAccountType')]\" }, \"kind\": \"Storage\", \"properties\": {} }, { \"type\": \"Microsoft.Network/publicIPAddresses\", \"apiVersion\": \"2020-06-01\", \"name\": \"[variables('publicIPAddressName')]\", \"location\": \"[parameters('location')]\", \"properties\": { \"publicIPAllocationMethod\": \"Dynamic\", \"dnsSettings\": { \"domainNameLabel\": \"[variables('domainNameLabel')]\" } } }, { \"comments\": \"Default Network Security Group for template\", \"type\": \"Microsoft.Network/networkSecurityGroups\", \"apiVersion\": \"2021-08-01\", \"name\": \"[variables('networkSecurityGroupName')]\", \"location\": \"[parameters('location')]\", \"properties\": { \"securityRules\": [ { \"name\": \"default-allow-3389\", \"properties\": { \"priority\": 1000, \"access\": \"Allow\", \"direction\": \"Inbound\", \"destinationPortRange\": \"3389\", \"protocol\": \"Tcp\", \"sourcePortRange\": \"*\", \"sourceAddressPrefix\": \"*\", \"destinationAddressPrefix\": \"*\" } } ] } }, { \"type\": \"Microsoft.Network/virtualNetworks\", \"apiVersion\": \"2020-06-01\", \"name\": \"[variables('virtualNetworkName')]\", \"location\": \"[parameters('location')]\", \"dependsOn\": [ \"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]\" ], \"properties\": { \"addressSpace\": { \"addressPrefixes\": [ \"[variables('addressPrefix')]\" ] }, \"subnets\": [ { \"name\": \"[variables('subnetName')]\", \"properties\": { \"addressPrefix\": \"[variables('subnetPrefix')]\", \"networkSecurityGroup\": { \"id\": \"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]\" } } } ] } }, { \"type\": \"Microsoft.Network/networkInterfaces\", \"apiVersion\": \"2020-06-01\", \"name\": \"[variables('nicName')]\", \"location\": \"[parameters('location')]\", \"dependsOn\": [ \"[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]\", \"[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]\" ], \"properties\": { \"ipConfigurations\": [ { \"name\": \"ipconfig1\", \"properties\": { \"privateIPAllocationMethod\": \"Dynamic\", \"publicIPAddress\": { \"id\": \"[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]\" }, \"subnet\": { \"id\": \"[variables('subnetRef')]\" } } } ] } }, { \"type\": \"Microsoft.Compute/virtualMachines\", \"apiVersion\": \"2020-06-01\", \"name\": \"[parameters('vmName')]\", \"location\": \"[parameters('location')]\", \"identity\": { \"type\": \"systemAssigned\" }, \"dependsOn\": [ \"[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]\", \"[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]\" ], \"properties\": { \"hardwareProfile\": { \"vmSize\": \"[parameters('vmSize')]\" }, \"osProfile\": { \"computerName\": \"[parameters('vmName')]\", \"adminUsername\": \"[parameters('adminUsername')]\", \"adminPassword\": \"[parameters('adminPassword')]\" }, \"storageProfile\": { \"imageReference\": { \"publisher\": \"MicrosoftWindowsServer\", \"offer\": \"WindowsServer\", \"sku\": \"[parameters('windowsOSVersion')]\", \"version\": \"latest\" }, \"osDisk\": { \"createOption\": \"FromImage\" }, \"dataDisks\": [ { \"diskSizeGB\": 1023, \"lun\": 0, \"createOption\": \"Empty\" } ] }, \"networkProfile\": { \"networkInterfaces\": [ { \"id\": \"[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]\" } ] }, \"diagnosticsProfile\": { \"bootDiagnostics\": { \"enabled\": true, \"storageUri\": \"[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]\" } } } } Take moment to examine the different resources that will be created by this ARM template. Run ARM TTK. One test should fail. terminal apiVersions Should Be Recent The resource type of Microsoft.Storage/storageAccounts has an old API version. Fix this problem as recommended by ARM TTK. Ensure ARM TTK passes with no errors. Your ARM template is complete. Exercise 4 - createUiDefinition.json # This exercise will take you through creating the file that defines the user experience for installing your solution via the mainTemplate.json created in Exercise 3. The role of the createUiDefinition.json file is to do the following. 1. Provide parameters to the mainTemplate.json ARM template. 2. Provide an installation user experience for the customer. The main components of a createUiDefinition.json file looks like this. { \"$schema\": \"https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#\", \"handler\": \"Microsoft.Azure.CreateUIDef\", \"version\": \"0.1.2-preview\", \"parameters\": { \"basics\": [], \"steps\": [], \"outputs\": {} } } Create the file # Create the file createUiDefinition.json in your begin folder. Paste the above JSON into the new file. Run ARM TTK. You get several errors on the createUiDefinition.json file because the sections of the file are yet filled in yet. The Create UI Definition Sandbox # The Create UI Definition Sandbox is a tool for testing createUiDefinition.json files. Open the Create UI Definition Sandbox in the Azure portal. Delete the JSON in the JSON area of the sandbox blade. Paste the JSON from your createUiDefinition.json file into the sandbox JSON area. Click the Preview button at the bottom of the page. The sandbox renders the content from your createUiDefinition.json . The Basics section displays the default fields that are rendered when the basics section of the JSON is empty. The steps[] section # Go back to your createUiDefinition.json file. Add the following JSON into the steps[] array. This will add a new tab, or blade, to the experience the customer will see during installation. { \"name\": \"prefixBlade\", \"bladeTitle\": \"Item Prefix\", \"label\": \"Item Prefix\", \"elements\": [] } Paste the JSON from your file in the Create UI Definition Sandbox . You should see a new Item Prefix tab. Click the Item Prefix tab. > The blade is blank and has no controls on it. On the left side of the sandbox, note there is a list of controls. Copy the TextBox control into your clipboard. In your createUiDefinition file, paste the control into the elements array of the JSON blade. Check your JSON in the sandbox. Remove the blade definition from the steps[] array in the createUiDefinition.json file so that the array is empty. Fill in the steps[] array with the JSON below. { \"name\": \"storageConfigBlade\", \"label\": \"Storage account settings\", \"bladeTitle\": \"Storage account settings\", \"elements\": [ { \"name\": \"storageAccount\", \"type\": \"Microsoft.Storage.MultiStorageAccountCombo\", \"label\": { \"prefix\": \"Storage account prefix\", \"type\": \"Storage account type\" }, \"toolTip\": { \"prefix\": \"The prefix of the storage account\", \"type\": \"The type of storage account\" }, \"defaultValue\": { \"type\": \"Standard_LRS\" }, \"constraints\": { \"allowedTypes\": [ \"Premium_LRS\", \"Standard_LRS\", \"Standard_GRS\" ] }, \"count\": 2 } ] }, { \"name\": \"vmBlade\", \"bladeTitle\": \"Virtual Machine\", \"label\": \"Virtual Machine\", \"elements\": [ { \"name\": \"vmName\", \"type\": \"Microsoft.Common.TextBox\", \"label\": \"Machine name\", \"placeholder\": \"Virtual machine name\", \"defaultValue\": \"\", \"toolTip\": \"Use only allowed characters\", \"constraints\": { \"required\": true, \"regex\": \"^[a-z0-9A-Z]{5,15}$\", \"validationMessage\": \"Only alphanumeric characters are allowed, and the value must be 5-15 characters long.\" }, \"visible\": true }, { \"name\": \"adminUsername\", \"type\": \"Microsoft.Compute.UserNameTextBox\", \"label\": \"Admin Username\", \"toolTip\": \"The username of the admin user for the VM\", \"constraints\": { \"required\": true, \"regex\": \"^[a-z0-9A-Z]{1,30}$\", \"validationMessage\": \"Only alphanumeric characters are allowed, and the value must be 1-30 characters long.\" }, \"osPlatform\": \"Windows\", \"visible\": true }, { \"name\": \"adminPassword\", \"type\": \"Microsoft.Common.PasswordBox\", \"label\": { \"password\": \"Password\", \"confirmPassword\": \"Confirm password\" }, \"toolTip\": \"Password for the VM\", \"constraints\": { \"required\": true, \"regex\": \"^[a-zA-Z0-9]{12}$\", \"validationMessage\": \"Password must be at least 12 characters long, contain only numbers and letters\" }, \"options\": { \"hideConfirmation\": false }, \"visible\": true }, { \"name\": \"operatingSystem\", \"type\": \"Microsoft.Common.DropDown\", \"label\": \"Windows operating system\", \"defaultValue\": \"2022-Datacenter\", \"toolTip\": \"Choose an operating system to deploy\", \"constraints\": { \"allowedValues\": [ { \"label\": \"2019 Datacenter 2nd Gen\", \"value\": \"2019-datacenter-gensecond\" }, { \"label\": \"2016 Datacenter 2nd Gen\", \"value\": \"2016-datacenter-gensecond\" } ], \"required\": true }, \"visible\": true }, { \"name\": \"vmSize\", \"type\": \"Microsoft.Compute.SizeSelector\", \"label\": \"Virtual machine size\", \"toolTip\": \"Choose the size of virtual machine to create\", \"recommendedSizes\": [ \"Standard_D2s_v3\" ], \"options\": { \"hideDiskTypeFilter\": false }, \"osPlatform\": \"Windows\", \"visible\": true } ] }, { \"name\": \"tags\", \"label\": \"Tags\", \"elements\": [ { \"name\": \"tagsByResource\", \"type\": \"Microsoft.Common.TagsByResource\", \"toolTip\": \"Tags for resources being created\", \"resources\": [ \"Microsoft.Storage/storageAccounts\", \"Microsoft.Compute/virtualMachines\" ] } ] } Check your JSON in the sandbox to ensure it is valid. The outputs section # Now that you have all of the steps defined in your createUiDefinition.json file, you can focus on the outputs section, which passes the control values to the ARM template during installation. Fill in the outputs section of your createUiDefinition.json file with the JSON below. \"adminPassword\": \"[steps('vmBlade').adminPassword]\", \"adminUsername\": \"[steps('vmBlade').adminUsername]\", \"windowsOSVersion\": \"[steps('vmBlade').operatingSystem]\", \"vmSize\": \"[steps('vmBlade').vmSize]\", \"location\": \"[location()]\", \"storageAccountName\": \"[steps('storageConfigBlade').storageAccount.prefix]\", \"storageAccountType\": \"[steps('storageConfigBlade').storageAccount.type]\", \"vmName\": \"[steps('vmBlade').vmName]\" Note how the output keys match the input parameter names in the mainTemplate.json ARM template. Also note how the values reference blade values, except for the location() function, which is a required output value. Check your files with ARM TTK . Check your JSON in the sandbox. Your createUiDefinition.json is now complete. Exercise 5 - Deploying your deployment package files # In this exercise, you will create a second plan in the offer you created in Lab 1 . In the begin folder, create a ZIP file with two deployment package files at the root. Name the file gold-plan-deployment-package.zip . Go back to Partner Center . Navigate to the offer you created in Lab 1. Click Plan overview in the left hand menu. Create a new plan named Gold in your offer. Use the same techniques you used in Lab 1 to create your Silver plan. When you get to the Pricing and availability section of your new offer, remember to check the boxes and fill in the units on the metered billing dimensions. Exercise 6 - Publish your offer # Now that you have two plans in your offer, it's time to publish your offer. In Partner Center click the Review and publish button at the top right of the page, which takes you to the Review publish changes page. Once all indicators are green, click the Publish button at the bottom of the page. You will be taken to the Offer overview page where you can monitor the status of your offer as it progresses to the Publisher signoff stage. (This requires refreshing the page periodically). The publishing process can take some time to complete, but should be done in time for the next lab. DO NOT go past the Publisher signoff stage by clicking the Go live button once it appears. Conclusion # Great job, you've finished lab 2! In this lab you accomplished the following. Used ARM TTK to validate your deployment files. Fleshed out an ARM template in mainTemplate.json . Created the user experience for installing the solution via the ARM template using createUiDefinition,json . Created a deployment package from the artifacts in this lab. Created a new plan in Partner Center and used your new deployment package in that plan. Published your offer with its new plan.","title":"Lab 2 - The Managed Application Deployment Package"},{"location":"ama/labs/lab-2-deployment-package/#lab-2-the-managed-application-deployment-package","text":"In this lab, you will edit the artifacts that go into a an Azure Managed Application deployment package. You will run your artifacts through a validation process and package them for use in deployment. Finally, you will create a new plan for your existing offer from Lab 1 and publish your offer.","title":"Lab 2 - The Managed Application Deployment Package"},{"location":"ama/labs/lab-2-deployment-package/#exercise-1-arm-ttk","text":"This exercise introduces Azure Resource Manager Template Toolkit (ARM TTK), a tool that runs in PowerShell and validates the artifacts in your deployment package. The ARM TTK tool runs tests that ensure valid mainTemplate.json and createUiDefinition files. You will clone the ARM TTK repository and bring the code to your local machine where it can be executed using PowerShell. If you are not on Windows, you may download PowerShell for your platform. Linux macOS Clone the ARM TTK repository from GitHub. Set up ARM TTK to run on your machine by executing the following commands in a PowerShell terminal. ```powershell cd \" \\arm-ttk\\arm-ttk\" Import-Module .\\arm-ttk.psd1 ``` From the same directory you may execute the ARM TTK tool as shown below. Note the path is looking at the end folder, which contains the solution to this lab. $AMAPackage = \"<PATH TO AMA-WORKSHOP>\\ama-workshop\\lab-2-deployment-package\\assets\\end\\\" Test-AzTemplate -TemplatePath $AMAPackage See that test pass. The output from ARM TTK should look something like this. Validating end\\createUiDefinition.json AllFiles [+] JSONFiles Should Be Valid (61 ms) CreateUIDefinition [+] Allowed Values Should Actually Be Allowed (190 ms) ... Validating end\\mainTemplate.json deploymentTemplate [+] adminUsername Should Not Be A Literal (90 ms) [+] apiVersions Should Be Recent In Reference Functions (171 ms) ... You will use the ARM TTK tool to check the status of your own package files several times during this lab. Because of this, do not close the terminal window between steps. Set up ARM TTK to point at the begin directory for validation as shown below. ```powershell $AMAPackage = \" \\ama-workshop\\lab-2-deployment-package\\assets\\begin\\\" 6. Run the tests as shown below. They should all pass although the `mainTemplate.json` file in the `begin` directory is basically a skeleton you will build on. ```powershell Test-AzTemplate -TemplatePath $AMAPackage","title":"Exercise 1 - ARM TTK"},{"location":"ama/labs/lab-2-deployment-package/#exercise-2-maintemplatejson","text":"Here you will build out a ARM template that deploys a virtual machine along with some other Azure services. The basic outline of a mainTemplate.json ARM template looks like this. { \"$schema\": \"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\", \"contentVersion\": \"1.0.0.0\", \"parameters\": {}, \"variables\": {}, \"resources\": [], \"outputs\": {} } There are several parameters the ARM template expects. You will fill them in and take note of the different types of parameters. Open the mainTemplate.json file in a text editor like VS Code. Add the following JSON inside the parameters section of the ARM template. \"adminUsername\": { \"type\": \"string\", \"metadata\": { \"description\": \"Username for the Virtual Machine.\" } }, \"adminPassword\": { \"type\": \"securestring\", \"metadata\": { \"description\": \"Password for the Virtual Machine.\" } }, \"storageAccountName\": { \"type\": \"string\" }, \"storageAccountType\": { \"type\": \"string\" }, \"windowsOSVersion\": { \"type\": \"string\", \"defaultValue\": \"2019-datacenter-gensecond\", \"allowedValues\": [ \"2019-datacenter-gensecond\", \"2016-datacenter-gensecond\" ], \"metadata\": { \"description\": \"The Windows version for the VM. This will pick a fully patched image of this given Windows version.\" } }, \"vmSize\": { \"type\": \"string\", \"defaultValue\": \"Standard_D2s_V3\", \"metadata\": { \"description\": \"Size of the virtual machine.\" } }, \"vmName\": { \"type\": \"string\", \"defaultValue\": \"amaSimpleVM\", \"metadata\": { \"description\": \"Name of the virtual machine.\" } }, \"location\": { \"type\": \"string\", \"defaultValue\": \"[resourceGroup().location]\", \"metadata\": { \"description\": \"Location for all resources.\" } } Take a moment to review the type attribute of each parameter. See that you can pass in multiple data types. Run ARM TTK. The following test fails. cmd Parameters Must Be Referenced Make the variables section look like the following JSON. \"variables\": { \"itemPrefix\": \"[concat('ama', uniqueString(resourceGroup().id))]\", \"addressPrefix\": \"10.0.0.0/16\", \"domainNameLabel\": \"[concat(variables('itemPrefix'), '-dnl')]\", \"networkSecurityGroupName\": \"[concat(variables('itemPrefix'), '-nsg')]\", \"nicName\": \"[concat(variables('itemPrefix'), '-nic')]\", \"publicIPAddressName\": \"[concat(variables('itemPrefix'), '-ip')]\", \"storageAccountName\": \"[concat(parameters('storageAccountName'), uniqueString('storage'))]\", \"subnetName\": \"Subnet\", \"subnetPrefix\": \"10.0.0.0/24\", \"subnetRef\": \"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]\", \"virtualNetworkName\": \"[concat(variables('itemPrefix'), '-vnet')]\" } Run ARM TTK. Now there are parameters and variables that are not being referenced. This means they are not being referenced in the resources section which defines the actual resources to be created by the ARM template. Note the itemPrefix parameter is not reported as an unreferenced parameter since it being used by several other variables. Add the following resource definitions to the resources[] section. { \"type\": \"Microsoft.Storage/storageAccounts\", \"apiVersion\": \"2018-02-01\", \"name\": \"[variables('storageAccountName')]\", \"location\": \"[parameters('location')]\", \"sku\": { \"name\": \"[parameters('storageAccountType')]\" }, \"kind\": \"Storage\", \"properties\": {} }, { \"type\": \"Microsoft.Network/publicIPAddresses\", \"apiVersion\": \"2020-06-01\", \"name\": \"[variables('publicIPAddressName')]\", \"location\": \"[parameters('location')]\", \"properties\": { \"publicIPAllocationMethod\": \"Dynamic\", \"dnsSettings\": { \"domainNameLabel\": \"[variables('domainNameLabel')]\" } } }, { \"comments\": \"Default Network Security Group for template\", \"type\": \"Microsoft.Network/networkSecurityGroups\", \"apiVersion\": \"2021-08-01\", \"name\": \"[variables('networkSecurityGroupName')]\", \"location\": \"[parameters('location')]\", \"properties\": { \"securityRules\": [ { \"name\": \"default-allow-3389\", \"properties\": { \"priority\": 1000, \"access\": \"Allow\", \"direction\": \"Inbound\", \"destinationPortRange\": \"3389\", \"protocol\": \"Tcp\", \"sourcePortRange\": \"*\", \"sourceAddressPrefix\": \"*\", \"destinationAddressPrefix\": \"*\" } } ] } }, { \"type\": \"Microsoft.Network/virtualNetworks\", \"apiVersion\": \"2020-06-01\", \"name\": \"[variables('virtualNetworkName')]\", \"location\": \"[parameters('location')]\", \"dependsOn\": [ \"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]\" ], \"properties\": { \"addressSpace\": { \"addressPrefixes\": [ \"[variables('addressPrefix')]\" ] }, \"subnets\": [ { \"name\": \"[variables('subnetName')]\", \"properties\": { \"addressPrefix\": \"[variables('subnetPrefix')]\", \"networkSecurityGroup\": { \"id\": \"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]\" } } } ] } }, { \"type\": \"Microsoft.Network/networkInterfaces\", \"apiVersion\": \"2020-06-01\", \"name\": \"[variables('nicName')]\", \"location\": \"[parameters('location')]\", \"dependsOn\": [ \"[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]\", \"[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]\" ], \"properties\": { \"ipConfigurations\": [ { \"name\": \"ipconfig1\", \"properties\": { \"privateIPAllocationMethod\": \"Dynamic\", \"publicIPAddress\": { \"id\": \"[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]\" }, \"subnet\": { \"id\": \"[variables('subnetRef')]\" } } } ] } }, { \"type\": \"Microsoft.Compute/virtualMachines\", \"apiVersion\": \"2020-06-01\", \"name\": \"[parameters('vmName')]\", \"location\": \"[parameters('location')]\", \"identity\": { \"type\": \"systemAssigned\" }, \"dependsOn\": [ \"[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]\", \"[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]\" ], \"properties\": { \"hardwareProfile\": { \"vmSize\": \"[parameters('vmSize')]\" }, \"osProfile\": { \"computerName\": \"[parameters('vmName')]\", \"adminUsername\": \"[parameters('adminUsername')]\", \"adminPassword\": \"[parameters('adminPassword')]\" }, \"storageProfile\": { \"imageReference\": { \"publisher\": \"MicrosoftWindowsServer\", \"offer\": \"WindowsServer\", \"sku\": \"[parameters('windowsOSVersion')]\", \"version\": \"latest\" }, \"osDisk\": { \"createOption\": \"FromImage\" }, \"dataDisks\": [ { \"diskSizeGB\": 1023, \"lun\": 0, \"createOption\": \"Empty\" } ] }, \"networkProfile\": { \"networkInterfaces\": [ { \"id\": \"[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]\" } ] }, \"diagnosticsProfile\": { \"bootDiagnostics\": { \"enabled\": true, \"storageUri\": \"[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]\" } } } } Take moment to examine the different resources that will be created by this ARM template. Run ARM TTK. One test should fail. terminal apiVersions Should Be Recent The resource type of Microsoft.Storage/storageAccounts has an old API version. Fix this problem as recommended by ARM TTK. Ensure ARM TTK passes with no errors. Your ARM template is complete.","title":"Exercise 2 - mainTemplate.json"},{"location":"ama/labs/lab-2-deployment-package/#exercise-4-createuidefinitionjson","text":"This exercise will take you through creating the file that defines the user experience for installing your solution via the mainTemplate.json created in Exercise 3. The role of the createUiDefinition.json file is to do the following. 1. Provide parameters to the mainTemplate.json ARM template. 2. Provide an installation user experience for the customer. The main components of a createUiDefinition.json file looks like this. { \"$schema\": \"https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#\", \"handler\": \"Microsoft.Azure.CreateUIDef\", \"version\": \"0.1.2-preview\", \"parameters\": { \"basics\": [], \"steps\": [], \"outputs\": {} } }","title":"Exercise 4 - createUiDefinition.json"},{"location":"ama/labs/lab-2-deployment-package/#create-the-file","text":"Create the file createUiDefinition.json in your begin folder. Paste the above JSON into the new file. Run ARM TTK. You get several errors on the createUiDefinition.json file because the sections of the file are yet filled in yet.","title":"Create the file"},{"location":"ama/labs/lab-2-deployment-package/#the-create-ui-definition-sandbox","text":"The Create UI Definition Sandbox is a tool for testing createUiDefinition.json files. Open the Create UI Definition Sandbox in the Azure portal. Delete the JSON in the JSON area of the sandbox blade. Paste the JSON from your createUiDefinition.json file into the sandbox JSON area. Click the Preview button at the bottom of the page. The sandbox renders the content from your createUiDefinition.json . The Basics section displays the default fields that are rendered when the basics section of the JSON is empty.","title":"The Create UI Definition Sandbox"},{"location":"ama/labs/lab-2-deployment-package/#the-steps-section","text":"Go back to your createUiDefinition.json file. Add the following JSON into the steps[] array. This will add a new tab, or blade, to the experience the customer will see during installation. { \"name\": \"prefixBlade\", \"bladeTitle\": \"Item Prefix\", \"label\": \"Item Prefix\", \"elements\": [] } Paste the JSON from your file in the Create UI Definition Sandbox . You should see a new Item Prefix tab. Click the Item Prefix tab. > The blade is blank and has no controls on it. On the left side of the sandbox, note there is a list of controls. Copy the TextBox control into your clipboard. In your createUiDefinition file, paste the control into the elements array of the JSON blade. Check your JSON in the sandbox. Remove the blade definition from the steps[] array in the createUiDefinition.json file so that the array is empty. Fill in the steps[] array with the JSON below. { \"name\": \"storageConfigBlade\", \"label\": \"Storage account settings\", \"bladeTitle\": \"Storage account settings\", \"elements\": [ { \"name\": \"storageAccount\", \"type\": \"Microsoft.Storage.MultiStorageAccountCombo\", \"label\": { \"prefix\": \"Storage account prefix\", \"type\": \"Storage account type\" }, \"toolTip\": { \"prefix\": \"The prefix of the storage account\", \"type\": \"The type of storage account\" }, \"defaultValue\": { \"type\": \"Standard_LRS\" }, \"constraints\": { \"allowedTypes\": [ \"Premium_LRS\", \"Standard_LRS\", \"Standard_GRS\" ] }, \"count\": 2 } ] }, { \"name\": \"vmBlade\", \"bladeTitle\": \"Virtual Machine\", \"label\": \"Virtual Machine\", \"elements\": [ { \"name\": \"vmName\", \"type\": \"Microsoft.Common.TextBox\", \"label\": \"Machine name\", \"placeholder\": \"Virtual machine name\", \"defaultValue\": \"\", \"toolTip\": \"Use only allowed characters\", \"constraints\": { \"required\": true, \"regex\": \"^[a-z0-9A-Z]{5,15}$\", \"validationMessage\": \"Only alphanumeric characters are allowed, and the value must be 5-15 characters long.\" }, \"visible\": true }, { \"name\": \"adminUsername\", \"type\": \"Microsoft.Compute.UserNameTextBox\", \"label\": \"Admin Username\", \"toolTip\": \"The username of the admin user for the VM\", \"constraints\": { \"required\": true, \"regex\": \"^[a-z0-9A-Z]{1,30}$\", \"validationMessage\": \"Only alphanumeric characters are allowed, and the value must be 1-30 characters long.\" }, \"osPlatform\": \"Windows\", \"visible\": true }, { \"name\": \"adminPassword\", \"type\": \"Microsoft.Common.PasswordBox\", \"label\": { \"password\": \"Password\", \"confirmPassword\": \"Confirm password\" }, \"toolTip\": \"Password for the VM\", \"constraints\": { \"required\": true, \"regex\": \"^[a-zA-Z0-9]{12}$\", \"validationMessage\": \"Password must be at least 12 characters long, contain only numbers and letters\" }, \"options\": { \"hideConfirmation\": false }, \"visible\": true }, { \"name\": \"operatingSystem\", \"type\": \"Microsoft.Common.DropDown\", \"label\": \"Windows operating system\", \"defaultValue\": \"2022-Datacenter\", \"toolTip\": \"Choose an operating system to deploy\", \"constraints\": { \"allowedValues\": [ { \"label\": \"2019 Datacenter 2nd Gen\", \"value\": \"2019-datacenter-gensecond\" }, { \"label\": \"2016 Datacenter 2nd Gen\", \"value\": \"2016-datacenter-gensecond\" } ], \"required\": true }, \"visible\": true }, { \"name\": \"vmSize\", \"type\": \"Microsoft.Compute.SizeSelector\", \"label\": \"Virtual machine size\", \"toolTip\": \"Choose the size of virtual machine to create\", \"recommendedSizes\": [ \"Standard_D2s_v3\" ], \"options\": { \"hideDiskTypeFilter\": false }, \"osPlatform\": \"Windows\", \"visible\": true } ] }, { \"name\": \"tags\", \"label\": \"Tags\", \"elements\": [ { \"name\": \"tagsByResource\", \"type\": \"Microsoft.Common.TagsByResource\", \"toolTip\": \"Tags for resources being created\", \"resources\": [ \"Microsoft.Storage/storageAccounts\", \"Microsoft.Compute/virtualMachines\" ] } ] } Check your JSON in the sandbox to ensure it is valid.","title":"The steps[] section"},{"location":"ama/labs/lab-2-deployment-package/#the-outputs-section","text":"Now that you have all of the steps defined in your createUiDefinition.json file, you can focus on the outputs section, which passes the control values to the ARM template during installation. Fill in the outputs section of your createUiDefinition.json file with the JSON below. \"adminPassword\": \"[steps('vmBlade').adminPassword]\", \"adminUsername\": \"[steps('vmBlade').adminUsername]\", \"windowsOSVersion\": \"[steps('vmBlade').operatingSystem]\", \"vmSize\": \"[steps('vmBlade').vmSize]\", \"location\": \"[location()]\", \"storageAccountName\": \"[steps('storageConfigBlade').storageAccount.prefix]\", \"storageAccountType\": \"[steps('storageConfigBlade').storageAccount.type]\", \"vmName\": \"[steps('vmBlade').vmName]\" Note how the output keys match the input parameter names in the mainTemplate.json ARM template. Also note how the values reference blade values, except for the location() function, which is a required output value. Check your files with ARM TTK . Check your JSON in the sandbox. Your createUiDefinition.json is now complete.","title":"The outputs section"},{"location":"ama/labs/lab-2-deployment-package/#exercise-5-deploying-your-deployment-package-files","text":"In this exercise, you will create a second plan in the offer you created in Lab 1 . In the begin folder, create a ZIP file with two deployment package files at the root. Name the file gold-plan-deployment-package.zip . Go back to Partner Center . Navigate to the offer you created in Lab 1. Click Plan overview in the left hand menu. Create a new plan named Gold in your offer. Use the same techniques you used in Lab 1 to create your Silver plan. When you get to the Pricing and availability section of your new offer, remember to check the boxes and fill in the units on the metered billing dimensions.","title":"Exercise 5 - Deploying your deployment package files"},{"location":"ama/labs/lab-2-deployment-package/#exercise-6-publish-your-offer","text":"Now that you have two plans in your offer, it's time to publish your offer. In Partner Center click the Review and publish button at the top right of the page, which takes you to the Review publish changes page. Once all indicators are green, click the Publish button at the bottom of the page. You will be taken to the Offer overview page where you can monitor the status of your offer as it progresses to the Publisher signoff stage. (This requires refreshing the page periodically). The publishing process can take some time to complete, but should be done in time for the next lab. DO NOT go past the Publisher signoff stage by clicking the Go live button once it appears.","title":"Exercise 6 - Publish your offer"},{"location":"ama/labs/lab-2-deployment-package/#conclusion","text":"Great job, you've finished lab 2! In this lab you accomplished the following. Used ARM TTK to validate your deployment files. Fleshed out an ARM template in mainTemplate.json . Created the user experience for installing the solution via the ARM template using createUiDefinition,json . Created a deployment package from the artifacts in this lab. Created a new plan in Partner Center and used your new deployment package in that plan. Published your offer with its new plan.","title":"Conclusion"},{"location":"ama/labs/lab-3-purchasing-ama/","text":"Lab 3 - Purchasing an Azure Managed Application # This lab focuses on purchasing the offer and plans you created in Lab 1 and Lab 2 . First, check Partner Center. This lab will only work if your offer in is published and visible in the Publisher signoff stage of publication as seen on the Offer overview . page in Partner Center . There should be a Go live button on the Offer overview page. Do NOT click this button at any point today as doing so will submit your offer to the certification team to make it live. Exercise 1 - The Silver plan # This exercise takes you through the process of buying your Silver plan, created in Lab 1 . You'll also have a look at your resulting Managed Application. Finding the private plan # Open the Azure portal and log in. At the top of the screen click the Create a resource button. You are taken to the public Azure marketplace. > In Lab 1, you configured your offer to be available to your subscription while in the Publisher signoff stage. This makes your offer a private one and you need to navigate to the private offers part of the marketplace to purchase it. Under the search box, click the link that reads See more in the Marketplace . On this page you see a pink bar at the top of the screen telling you that you have private offers available. Click the link that reads View private products . Locate your offer named AMA Workshop 1 (preview) and click on that tile. You are taken to the offer's purchase page, which is in Preview mode. Purchasing the Silver plan # Basics tab # In the plan dropdown, ensure Silver is selected. This plan will create a simple Data storage service in your subscription. Click the Create button. You are taken to the offer creation page, which needs your input. On the Basics tab, you should see your current subscription selected. If not, select it from the dropdown. For Resource group click the Create new link under the dropdown. Name your new resource group ama_workshop_purchases . Select a region near you. In the Managed Application Details section, enter the following. Application name: workshopapp1 Managed Resource Group : workshopapp1-mrg At the bottom of the screen, click the Next: Storage setting button. Storage settings tab # Enter the following values. Storage account name prefix: amaws01 Storage account type: Standard_LRS Click the Review + create button at the bottom of the screen. Review + create tab # Scroll down to the Co-Admin Access Permission section. Click the checkbox I agree to the terms and conditions above . Click the Create button at the bottom of the screen. You are taken to the Deployment page. Deploying your application may take a couple of minutes. Deployment screen # When deployment is complete, you are met with a message that reads, Your deployment is complete . At the bottom of the screen click the Go to resource button. You are taken to the managed application instance. Exercise 2 - The deployed application # In this exercise you will tour the workshopapp1 managed application you've just purchased. The managed application # On the Essentials screen, note the following. The support link you entered in Partner Center is shown here. The link to the Resource group you created, ama_workshop_purchases is present. This is the resource group containing the instance of a the managed application you are looking at right now. There is a link to the Managed resource group you created, workshopapp1-mrg . This is the resource group that contains the services deployed by the ARM template in your deployment package. In the left hand menu, click Parameters and outputs . The arm template, mainTemplate.json that created the storage account that was deployed, took only three parameters and they are shown here. There are no outputs on this page because none were specified by the ARM template. In the left hand menu, click Authorizations . Note the role that the publisher has on this application is Owner . This corresponds to the role you selected in the Technical configuration tab of the plan in Partner Center. The Managed resource group # In the left hand menu, click on Overview . In the Essentials section of the page, click the link to the Managed resource group you created, workshopapp1-mrg . You are taken to the Resource group that contains the storage account deployed by the ARM template. Exercise 3 - The Gold plan # In this exercise you will go through the process of buying your Gold plan, created in Lab 2 . After deployment, you'll use the virtual machine deployed by the application. Purchasing the Gold plan # Click the link to Home in the top left corner of the screen. Under Azure services , click Create a resource . Go back to the Private offers section of the marketplace and find the AMA Workshop 1 offer. Purchase the Gold plan. Using the values as follows in the setup screens. Basics tab Resource group: ama_workshop_purchases Region: Any one near you Application name: amaworksopgold01 Managed Resource Group : amaworksopgold01-mrg Storage account settings Storage account prefix: Any 3-5 alphanumeric value that is accepted Storage account type: Standard_LRS Virtual Machine Machine name: amavm01 Admin username: Any accepted value of your choice Password : Any accepted value of your choice Windows operating system: Your choice Virtual machine size: Note you can Change the size of the virtual machine to be deployed, but larger sizes cost more money to your subscription. Consider taking the recommended value of 1x Standard D2s v3 . Click the Review + create button at the bottom of the screen. Check the box for I agree to the terms and conditions above . Click the Create button at the bottom of the screen and the plan is deployed. Exploring the Gold plan # This will be a simple peek into the resources created during deployment of your application. Wait for deployment to complete. Click the Go to resource button near the bottom of the screen. Near the top right of the Essentials section of the page, click the link to the Managed Resource Group you created, workshopapp2-mrg . Note all of the resources deployed by your ARM template. If you have any questions about how a particular resource was created, review your mainTemplate.json file for the resource definition. Remote into the virtual machine # Here you will actually log in into the virtual machine deployed by your Managed Application. Click the virtual machine in the set of resources listed in the Managed Resource Group . In the top left of the screen, click the Connect dropdown. Windows users # Select RDP from the dropdown. Click the button Download RDP file. When prompted, click the Open button on the Downloads dialog. This will launch your remote desktop client. Enter the username and password you entered when purchasing the Managed Application. Connect to the remote machine. > Note you are currently in the role of a customer, and you have remoted into a virtual machine inside the Managed Resource Group . Disconnect from the virtual machine. Mac and Linux users # Select SSH from the dropdown. Follow the instruction on the page, under Connect via SSH with client . Use the username and password you entered while purchasing the Managed Application to log in to the virtual machine. > Note you are currently in the role of a customer, and you have remoted into a virtual machine inside the Managed Resource Group . Disconnect from the virtual machine. Conclusion # Congratulations, you have completed Lab 3. In this lab you accomplished the following. Purchased two plans you created using an offer from Lab 1. Examined the artifacts deployed by each plan. Logged into the virtual machine deployed by the Gold plan.","title":"Lab 3 - Purchasing an Azure Managed Application"},{"location":"ama/labs/lab-3-purchasing-ama/#lab-3-purchasing-an-azure-managed-application","text":"This lab focuses on purchasing the offer and plans you created in Lab 1 and Lab 2 . First, check Partner Center. This lab will only work if your offer in is published and visible in the Publisher signoff stage of publication as seen on the Offer overview . page in Partner Center . There should be a Go live button on the Offer overview page. Do NOT click this button at any point today as doing so will submit your offer to the certification team to make it live.","title":"Lab 3 - Purchasing an Azure Managed Application"},{"location":"ama/labs/lab-3-purchasing-ama/#exercise-1-the-silver-plan","text":"This exercise takes you through the process of buying your Silver plan, created in Lab 1 . You'll also have a look at your resulting Managed Application.","title":"Exercise 1 - The Silver plan"},{"location":"ama/labs/lab-3-purchasing-ama/#finding-the-private-plan","text":"Open the Azure portal and log in. At the top of the screen click the Create a resource button. You are taken to the public Azure marketplace. > In Lab 1, you configured your offer to be available to your subscription while in the Publisher signoff stage. This makes your offer a private one and you need to navigate to the private offers part of the marketplace to purchase it. Under the search box, click the link that reads See more in the Marketplace . On this page you see a pink bar at the top of the screen telling you that you have private offers available. Click the link that reads View private products . Locate your offer named AMA Workshop 1 (preview) and click on that tile. You are taken to the offer's purchase page, which is in Preview mode.","title":"Finding the private plan"},{"location":"ama/labs/lab-3-purchasing-ama/#purchasing-the-silver-plan","text":"","title":"Purchasing the Silver plan"},{"location":"ama/labs/lab-3-purchasing-ama/#basics-tab","text":"In the plan dropdown, ensure Silver is selected. This plan will create a simple Data storage service in your subscription. Click the Create button. You are taken to the offer creation page, which needs your input. On the Basics tab, you should see your current subscription selected. If not, select it from the dropdown. For Resource group click the Create new link under the dropdown. Name your new resource group ama_workshop_purchases . Select a region near you. In the Managed Application Details section, enter the following. Application name: workshopapp1 Managed Resource Group : workshopapp1-mrg At the bottom of the screen, click the Next: Storage setting button.","title":"Basics tab"},{"location":"ama/labs/lab-3-purchasing-ama/#storage-settings-tab","text":"Enter the following values. Storage account name prefix: amaws01 Storage account type: Standard_LRS Click the Review + create button at the bottom of the screen.","title":"Storage settings tab"},{"location":"ama/labs/lab-3-purchasing-ama/#review-create-tab","text":"Scroll down to the Co-Admin Access Permission section. Click the checkbox I agree to the terms and conditions above . Click the Create button at the bottom of the screen. You are taken to the Deployment page. Deploying your application may take a couple of minutes.","title":"Review + create tab"},{"location":"ama/labs/lab-3-purchasing-ama/#deployment-screen","text":"When deployment is complete, you are met with a message that reads, Your deployment is complete . At the bottom of the screen click the Go to resource button. You are taken to the managed application instance.","title":"Deployment screen"},{"location":"ama/labs/lab-3-purchasing-ama/#exercise-2-the-deployed-application","text":"In this exercise you will tour the workshopapp1 managed application you've just purchased.","title":"Exercise 2 - The deployed application"},{"location":"ama/labs/lab-3-purchasing-ama/#the-managed-application","text":"On the Essentials screen, note the following. The support link you entered in Partner Center is shown here. The link to the Resource group you created, ama_workshop_purchases is present. This is the resource group containing the instance of a the managed application you are looking at right now. There is a link to the Managed resource group you created, workshopapp1-mrg . This is the resource group that contains the services deployed by the ARM template in your deployment package. In the left hand menu, click Parameters and outputs . The arm template, mainTemplate.json that created the storage account that was deployed, took only three parameters and they are shown here. There are no outputs on this page because none were specified by the ARM template. In the left hand menu, click Authorizations . Note the role that the publisher has on this application is Owner . This corresponds to the role you selected in the Technical configuration tab of the plan in Partner Center.","title":"The managed application"},{"location":"ama/labs/lab-3-purchasing-ama/#the-managed-resource-group","text":"In the left hand menu, click on Overview . In the Essentials section of the page, click the link to the Managed resource group you created, workshopapp1-mrg . You are taken to the Resource group that contains the storage account deployed by the ARM template.","title":"The Managed resource group"},{"location":"ama/labs/lab-3-purchasing-ama/#exercise-3-the-gold-plan","text":"In this exercise you will go through the process of buying your Gold plan, created in Lab 2 . After deployment, you'll use the virtual machine deployed by the application.","title":"Exercise 3 - The Gold plan"},{"location":"ama/labs/lab-3-purchasing-ama/#purchasing-the-gold-plan","text":"Click the link to Home in the top left corner of the screen. Under Azure services , click Create a resource . Go back to the Private offers section of the marketplace and find the AMA Workshop 1 offer. Purchase the Gold plan. Using the values as follows in the setup screens. Basics tab Resource group: ama_workshop_purchases Region: Any one near you Application name: amaworksopgold01 Managed Resource Group : amaworksopgold01-mrg Storage account settings Storage account prefix: Any 3-5 alphanumeric value that is accepted Storage account type: Standard_LRS Virtual Machine Machine name: amavm01 Admin username: Any accepted value of your choice Password : Any accepted value of your choice Windows operating system: Your choice Virtual machine size: Note you can Change the size of the virtual machine to be deployed, but larger sizes cost more money to your subscription. Consider taking the recommended value of 1x Standard D2s v3 . Click the Review + create button at the bottom of the screen. Check the box for I agree to the terms and conditions above . Click the Create button at the bottom of the screen and the plan is deployed.","title":"Purchasing the Gold plan"},{"location":"ama/labs/lab-3-purchasing-ama/#exploring-the-gold-plan","text":"This will be a simple peek into the resources created during deployment of your application. Wait for deployment to complete. Click the Go to resource button near the bottom of the screen. Near the top right of the Essentials section of the page, click the link to the Managed Resource Group you created, workshopapp2-mrg . Note all of the resources deployed by your ARM template. If you have any questions about how a particular resource was created, review your mainTemplate.json file for the resource definition.","title":"Exploring the Gold plan"},{"location":"ama/labs/lab-3-purchasing-ama/#remote-into-the-virtual-machine","text":"Here you will actually log in into the virtual machine deployed by your Managed Application. Click the virtual machine in the set of resources listed in the Managed Resource Group . In the top left of the screen, click the Connect dropdown.","title":"Remote into the virtual machine"},{"location":"ama/labs/lab-3-purchasing-ama/#windows-users","text":"Select RDP from the dropdown. Click the button Download RDP file. When prompted, click the Open button on the Downloads dialog. This will launch your remote desktop client. Enter the username and password you entered when purchasing the Managed Application. Connect to the remote machine. > Note you are currently in the role of a customer, and you have remoted into a virtual machine inside the Managed Resource Group . Disconnect from the virtual machine.","title":"Windows users"},{"location":"ama/labs/lab-3-purchasing-ama/#mac-and-linux-users","text":"Select SSH from the dropdown. Follow the instruction on the page, under Connect via SSH with client . Use the username and password you entered while purchasing the Managed Application to log in to the virtual machine. > Note you are currently in the role of a customer, and you have remoted into a virtual machine inside the Managed Resource Group . Disconnect from the virtual machine.","title":"Mac and Linux users"},{"location":"ama/labs/lab-3-purchasing-ama/#conclusion","text":"Congratulations, you have completed Lab 3. In this lab you accomplished the following. Purchased two plans you created using an offer from Lab 1. Examined the artifacts deployed by each plan. Logged into the virtual machine deployed by the Gold plan.","title":"Conclusion"},{"location":"ama/labs/lab-4-administer-my-amas/","text":"Lab 4 - Administering Your Purchased Managed Applications # In this lab you will act as the customer. You will explore what it means to manage the Azure managed applications that you purchased. In Lab 3 , you purchased your Gold plan and then remoted into the virtual machine, where you could use the VM as a customer. Now we'll see what else it means to manage your purchases. Exercise 1 - The Managed Applications dashboard # Open the Azure portal . At the top of the screen in the search box, enter Managed Applications . Select Managed Applications from the dropdown box. Note: Do not select Managed Applications Center . You are seeing the Managed Applications dashboard and seeing all of the Managed Applications you have purchased. Exercise 2 - amaworksopsilver01 # Click on amaworksopsilver01 . You saw this view of this Managed Application in the previous lab. Note the name of the Managed Resource Group, which should be amaworksopsilver01-mrg . At the top left of the page, click the Delete button. Click Yes to confirm the deletion of the Managed Application. > It will take some time, approximately 2 minutes or so, but the Managed Application and its corresponding Managed Resource Group will be deleted. Go to the Managed Applications dashboard as explained in Exercise 1. Confirm that amaworksopsilver01 application does not exist. You can refresh this page for a few minutes until the application is no longer visible. Go to the list of Resource Groups in the Azure Portal and ensure the amaworksopsilver01-mrg Resource Group is no longer there. Now that the Managed Resouce Group is gone, the subscription to this solution is cancelled and no more billing will take place. Conclusion # Congratulations, you have complete Lab 3! In this lab you did the following. Got familiar with the Managed Application dashboard. Deleted a managed application and showed that it deleted the corresponding resources associated with it.","title":"Lab 4 - Administering Your Purchased Managed Applications"},{"location":"ama/labs/lab-4-administer-my-amas/#lab-4-administering-your-purchased-managed-applications","text":"In this lab you will act as the customer. You will explore what it means to manage the Azure managed applications that you purchased. In Lab 3 , you purchased your Gold plan and then remoted into the virtual machine, where you could use the VM as a customer. Now we'll see what else it means to manage your purchases.","title":"Lab 4 - Administering Your Purchased Managed Applications"},{"location":"ama/labs/lab-4-administer-my-amas/#exercise-1-the-managed-applications-dashboard","text":"Open the Azure portal . At the top of the screen in the search box, enter Managed Applications . Select Managed Applications from the dropdown box. Note: Do not select Managed Applications Center . You are seeing the Managed Applications dashboard and seeing all of the Managed Applications you have purchased.","title":"Exercise 1 - The Managed Applications dashboard"},{"location":"ama/labs/lab-4-administer-my-amas/#exercise-2-amaworksopsilver01","text":"Click on amaworksopsilver01 . You saw this view of this Managed Application in the previous lab. Note the name of the Managed Resource Group, which should be amaworksopsilver01-mrg . At the top left of the page, click the Delete button. Click Yes to confirm the deletion of the Managed Application. > It will take some time, approximately 2 minutes or so, but the Managed Application and its corresponding Managed Resource Group will be deleted. Go to the Managed Applications dashboard as explained in Exercise 1. Confirm that amaworksopsilver01 application does not exist. You can refresh this page for a few minutes until the application is no longer visible. Go to the list of Resource Groups in the Azure Portal and ensure the amaworksopsilver01-mrg Resource Group is no longer there. Now that the Managed Resouce Group is gone, the subscription to this solution is cancelled and no more billing will take place.","title":"Exercise 2 - amaworksopsilver01"},{"location":"ama/labs/lab-4-administer-my-amas/#conclusion","text":"Congratulations, you have complete Lab 3! In this lab you did the following. Got familiar with the Managed Application dashboard. Deleted a managed application and showed that it deleted the corresponding resources associated with it.","title":"Conclusion"},{"location":"ama/labs/lab-5-administer-customer-amas/","text":"Lab 5 - Administering Your Customer\u2019s Managed Applications # This lab will take you through the process of administering Managed Applications your customer has purchased from you. When you are done you will have a feel for what it means to work with your customer's installed applications as a publisher. Exercise 1 - Introducing Managed Application Center # This exercise introduces the primary tool you will use for administering your customer's installations of your solution, Managed Application Center . In the Azure portal, in the search box at the top of the page, enter Managed Application Center and select it from the dropdown. Note this page allows access to tools to manage both Service Catalog-based applications and Marketplace applications . In the left hand menu, select Browse > Marketplace applications . You see a list of all the offers that have been purchased by yur customers. Click the link AMA Workshop 01 . Here you see a list of all customer purchases of your marketplace Managed Applications. Exercise 2 - Working in your customer's Managed Resource Group # Now you will perform some \"maintenance\" of your customer's solution in their Managed Resource Group. Next to the workshopapp2 Application name, click the link workshopapp2-mrg to the Managed Resource Group. Viewing the managed resource group contents, you see all the resources that were created by the ARM template. Because your user ID was set to the Owner of the Managed Application, you can perform operations inside this Managed Resource Group. Managing a Virtual Machine # Click the link to the virtual machine. On the top menu, click the Stop button. Click the Yes button to confirm Stop. Because you are the owner of the Managed Application, the virtual machine stops. Removing Resources # Go back to the workshopapp2-mrg Resource Group. Find the Storage account and select the checkbox next to it. In the top menu, click the Delete button. Type yes to confirm and then the Delete button at the bottom of the page. Because you are the owner of the Managed Application, the storage account is deleted. Adding Resources # Go back to the workshopapp2-mrg Resource Group. Click the Create button on the top of the page. Click the Storage account > create link on the first page. On the Create Storage account page, enter the following. Under Project details Subscription: Your current subscription Resource group: workshopapp2-mrg Under Instance Details Storage account name: anything you choose Region: A Region near you Performance: Standard Redundancy: Locally Redundant Storage (LRS) Click the Review + create at the bottom of the page. Click the Create button at the bottom of the screen. After deployment, confirm the new storage account is in the Managed Resource Group. Exercise 3 - Deleting a Managed Application as a publisher # Here you will learn how easy it is to delete a customer's subscription, should you choose to for some reason, such as lack of payment. Open the Managed Application Center . Go to Manage applications . Click the product that was purchased, AMA Workshop 1 . Click the Application name, workshopapp2 . In the top menu, click the Delete button. Click Yes to confirm the deletion. > Although it may take a couple of minutes, the Managed Application and its corresponding Managed Resource Group are deleted. Conclusion # Congratulations, you have completed Lab 5. In this lab, you did the following. Learned about the Managed Application Center inside the Azure portal. Deleted and created a resource within the customer's Managed Resource Group. Deleted a customer's Azure Managed Application.","title":"Lab 5 - Administering Your Customer\u2019s Managed Applications"},{"location":"ama/labs/lab-5-administer-customer-amas/#lab-5-administering-your-customers-managed-applications","text":"This lab will take you through the process of administering Managed Applications your customer has purchased from you. When you are done you will have a feel for what it means to work with your customer's installed applications as a publisher.","title":"Lab 5 - Administering Your Customer\u2019s Managed Applications"},{"location":"ama/labs/lab-5-administer-customer-amas/#exercise-1-introducing-managed-application-center","text":"This exercise introduces the primary tool you will use for administering your customer's installations of your solution, Managed Application Center . In the Azure portal, in the search box at the top of the page, enter Managed Application Center and select it from the dropdown. Note this page allows access to tools to manage both Service Catalog-based applications and Marketplace applications . In the left hand menu, select Browse > Marketplace applications . You see a list of all the offers that have been purchased by yur customers. Click the link AMA Workshop 01 . Here you see a list of all customer purchases of your marketplace Managed Applications.","title":"Exercise 1 - Introducing Managed Application Center"},{"location":"ama/labs/lab-5-administer-customer-amas/#exercise-2-working-in-your-customers-managed-resource-group","text":"Now you will perform some \"maintenance\" of your customer's solution in their Managed Resource Group. Next to the workshopapp2 Application name, click the link workshopapp2-mrg to the Managed Resource Group. Viewing the managed resource group contents, you see all the resources that were created by the ARM template. Because your user ID was set to the Owner of the Managed Application, you can perform operations inside this Managed Resource Group.","title":"Exercise 2 - Working in your customer's Managed Resource Group"},{"location":"ama/labs/lab-5-administer-customer-amas/#managing-a-virtual-machine","text":"Click the link to the virtual machine. On the top menu, click the Stop button. Click the Yes button to confirm Stop. Because you are the owner of the Managed Application, the virtual machine stops.","title":"Managing a Virtual Machine"},{"location":"ama/labs/lab-5-administer-customer-amas/#removing-resources","text":"Go back to the workshopapp2-mrg Resource Group. Find the Storage account and select the checkbox next to it. In the top menu, click the Delete button. Type yes to confirm and then the Delete button at the bottom of the page. Because you are the owner of the Managed Application, the storage account is deleted.","title":"Removing Resources"},{"location":"ama/labs/lab-5-administer-customer-amas/#adding-resources","text":"Go back to the workshopapp2-mrg Resource Group. Click the Create button on the top of the page. Click the Storage account > create link on the first page. On the Create Storage account page, enter the following. Under Project details Subscription: Your current subscription Resource group: workshopapp2-mrg Under Instance Details Storage account name: anything you choose Region: A Region near you Performance: Standard Redundancy: Locally Redundant Storage (LRS) Click the Review + create at the bottom of the page. Click the Create button at the bottom of the screen. After deployment, confirm the new storage account is in the Managed Resource Group.","title":"Adding Resources"},{"location":"ama/labs/lab-5-administer-customer-amas/#exercise-3-deleting-a-managed-application-as-a-publisher","text":"Here you will learn how easy it is to delete a customer's subscription, should you choose to for some reason, such as lack of payment. Open the Managed Application Center . Go to Manage applications . Click the product that was purchased, AMA Workshop 1 . Click the Application name, workshopapp2 . In the top menu, click the Delete button. Click Yes to confirm the deletion. > Although it may take a couple of minutes, the Managed Application and its corresponding Managed Resource Group are deleted.","title":"Exercise 3 - Deleting a Managed Application as a publisher"},{"location":"ama/labs/lab-5-administer-customer-amas/#conclusion","text":"Congratulations, you have completed Lab 5. In this lab, you did the following. Learned about the Managed Application Center inside the Azure portal. Deleted and created a resource within the customer's Managed Resource Group. Deleted a customer's Azure Managed Application.","title":"Conclusion"},{"location":"metered-billing-accelerator/","text":"This series of video modules and hands-on labs is designed to help you understand, install, use, and customize the Metered Billing Accelerator project. The Metered Billing Accelerator provides a fully functional community-led Metered Billing reference implementation for those interested in publishing transactable offer with Metered Billing support in Microsoft's marketplace in hours instead of days. Let us know what you need in this content library. This series is designed to help you speed your time to publish SaaS or Managed app offer with metered billing support to the Microsoft commercial marketplace using the Metered Billing Solution . Video Learning Modules # A Metered Billing Accelerator Hands-on Tour - The Basics # Video This introduction to the accelerator demonstrates the Metered Billing Accelerator's core capabilities showing why it may be a good choice for your marketplace offers with Metered Billing capabilities. In three short demos, this video shows its fundamental capabilities. Metered Billing Accelerator Architecture # Video This quick video covers the overall architecture of the Metered Billing Accelerator. The architecture is straightforward and is explained in plain language appropriate for those with any level of experience with Azure. Installing the Metered Billing Accelerator # Video Installing the Metered Billing Accelerator is simple. This video walks you through from beginning to end the steps necessary to get the Metered Billing Accelerator up and running. This video will get you up and running with the Metered Billing Accelerator in no time at all! Invoking Metered Billing with the Metered Billing Accelerator # Video We look at the metered billing capabilities of the Metered Billing Accelerator for the Azure Marketplace. This video shows how to manually invoke metered billing events from the Metered Billing Accelerator. Configure SaaS offer with the Metered Billing Accelerator # Video In this video will show how it is easy to configure your SaaS Offer with Metered Billing Accelerator to trigger metered billing events automatically. Configure Managed Application offer with the Metered Billing Accelerator # Video In this video will show how it is easy to configure your managed application Offer with Metered Billing Accelerator to trigger metered billing events automatically. Hands-on labs # These hand on labs build on top of one another, so progress through them in order to get a fully functional Metered Billing Accelerator offer published and working for a test environment. Prerequisites # Azure subscription that can create resources A Partner Center Account Hands-on labs # Installing the Metered Billing Accelerator Configure SaaS Offer the Metered Billing Accelerator Configure Managed ApplicationOffer the Metered Billing Accelerator","title":"Mastering the Metered Billing Solution"},{"location":"metered-billing-accelerator/#video-learning-modules","text":"","title":"Video Learning Modules"},{"location":"metered-billing-accelerator/#a-metered-billing-accelerator-hands-on-tour-the-basics","text":"Video This introduction to the accelerator demonstrates the Metered Billing Accelerator's core capabilities showing why it may be a good choice for your marketplace offers with Metered Billing capabilities. In three short demos, this video shows its fundamental capabilities.","title":"A Metered Billing Accelerator Hands-on Tour - The Basics"},{"location":"metered-billing-accelerator/#metered-billing-accelerator-architecture","text":"Video This quick video covers the overall architecture of the Metered Billing Accelerator. The architecture is straightforward and is explained in plain language appropriate for those with any level of experience with Azure.","title":"Metered Billing Accelerator Architecture"},{"location":"metered-billing-accelerator/#installing-the-metered-billing-accelerator","text":"Video Installing the Metered Billing Accelerator is simple. This video walks you through from beginning to end the steps necessary to get the Metered Billing Accelerator up and running. This video will get you up and running with the Metered Billing Accelerator in no time at all!","title":"Installing the Metered Billing Accelerator"},{"location":"metered-billing-accelerator/#invoking-metered-billing-with-the-metered-billing-accelerator","text":"Video We look at the metered billing capabilities of the Metered Billing Accelerator for the Azure Marketplace. This video shows how to manually invoke metered billing events from the Metered Billing Accelerator.","title":"Invoking Metered Billing with the Metered Billing Accelerator"},{"location":"metered-billing-accelerator/#configure-saas-offer-with-the-metered-billing-accelerator","text":"Video In this video will show how it is easy to configure your SaaS Offer with Metered Billing Accelerator to trigger metered billing events automatically.","title":"Configure SaaS offer with the Metered Billing Accelerator"},{"location":"metered-billing-accelerator/#configure-managed-application-offer-with-the-metered-billing-accelerator","text":"Video In this video will show how it is easy to configure your managed application Offer with Metered Billing Accelerator to trigger metered billing events automatically.","title":"Configure Managed Application offer with the Metered Billing Accelerator"},{"location":"metered-billing-accelerator/#hands-on-labs","text":"These hand on labs build on top of one another, so progress through them in order to get a fully functional Metered Billing Accelerator offer published and working for a test environment.","title":"Hands-on labs"},{"location":"metered-billing-accelerator/#prerequisites","text":"Azure subscription that can create resources A Partner Center Account","title":"Prerequisites"},{"location":"metered-billing-accelerator/#hands-on-labs_1","text":"Installing the Metered Billing Accelerator Configure SaaS Offer the Metered Billing Accelerator Configure Managed ApplicationOffer the Metered Billing Accelerator","title":"Hands-on labs"},{"location":"metered-billing-accelerator/labs/lab1-install/","text":"TBD #","title":"TBD"},{"location":"metered-billing-accelerator/labs/lab1-install/#tbd","text":"","title":"TBD"},{"location":"metered-billing-accelerator/labs/lab2-saas/","text":"TBD #","title":"TBD"},{"location":"metered-billing-accelerator/labs/lab2-saas/#tbd","text":"","title":"TBD"},{"location":"metered-billing-accelerator/labs/lab3-ama/","text":"TBD #","title":"TBD"},{"location":"metered-billing-accelerator/labs/lab3-ama/#tbd","text":"","title":"TBD"},{"location":"partner-center/","text":"These modules help you understand and use the Partner Center portal to publish your commercial marketplace offer. Let us know what you need in this content library. Using Partner Center to create and maintain your marketplace offers is a very large topic. We are just getting started with the content we'll publish about Partner Center , so please check back often as this library grows. Private Offers # Private Offer Overview ISV to Customer Offers # Video Learn how private offers work for marketplace publishers offering them directly to customers. This module provides an overview of private offers and explores some deeper details about how they work. ISV to Customer Private Offer Creation # Video This demo takes you through the process of an ISV creating a private offer for sale to a customer. ISV to Customer Private Offer Acceptance # Video In this walk through video, see the customer experience for accepting an ISV to Customer private offer. ISV to Customer Private Offer Purchase Experience # Video In this walk through video, see the customer experience for viewing details of their private offer in the Azure portal and deploying the product. Private Offers for CSP Partners Overview # Video | PDF Learn about private offers for Cloud Solution Providers in this overview of the capability in Partner Center. Private Offer Creation by ISVs for CSP Partners # Video This demo takes you through the process of an ISV creating a private offer for sale to a Cloud Solution Provider. The CSP Partner Private Offer Purchase Process # Video In this walkthrough video, see the purchase process partners in the Cloud Solution Provider (CSP) program go through to purchase private offers created by ISVs. Configuring and Publishing Offers # Publishing a SaaS Offer # Video | PDF This detailed video presents the concepts of publishing a SaaS offer and then walks through the steps of doing so in Partner Center. This module goes all the way from creating an offer, to adding and plan, and finally publishing the offer live. It also speaks to the need of developers to have a sandbox environment in which they can test and development the landing page and webhook. Publishing a Private SaaS Plan # Video | PDF This brief video builds upon what you learned in, \u201c Publishing a SaaS Offer .\u201d It presents the concepts of using private plans and then shows how to do so inside Partner Center. Migrating Listings to SaaS Offers # Video You may have started your online presence in the commercial marketplace with a simple listing to advertise your services. This does not, however, create a transactable offer that can be sold through the marketplace. This video shows how to convert your existing listing into a fully transactable SaaS Offer. Configuring a Virtual Machine Offer in Partner Center \u2013 Demo # Video Learn how to set up technical configurations for Azure Marketplace virtual machine offers within Partner Center. You\u2019ll look at machine generations, disk versions, share image gallery vs. SAS URI, and more. Partner Center with Azure Managed Applications Overview # Video Partner Center is the portal publishers use to create, configure, publish, and monitor their offers in the Microsoft Marketplace. This overview takes you through Partner Center for Azure Managed Applications. Configuring Partner Center for Azure Managed Applications - Demo # Video Understanding Partner Center, the publisher's portal, is key to creating great offers. This demo walks through setting up a Partner Center offer for an Azure Managed Application.","title":"Mastering Partner Center"},{"location":"partner-center/#private-offers","text":"","title":"Private Offers"},{"location":"partner-center/#private-offer-overview-isv-to-customer-offers","text":"Video Learn how private offers work for marketplace publishers offering them directly to customers. This module provides an overview of private offers and explores some deeper details about how they work.","title":"Private Offer Overview ISV to Customer Offers"},{"location":"partner-center/#isv-to-customer-private-offer-creation","text":"Video This demo takes you through the process of an ISV creating a private offer for sale to a customer.","title":"ISV to Customer Private Offer Creation"},{"location":"partner-center/#isv-to-customer-private-offer-acceptance","text":"Video In this walk through video, see the customer experience for accepting an ISV to Customer private offer.","title":"ISV to Customer Private Offer Acceptance"},{"location":"partner-center/#isv-to-customer-private-offer-purchase-experience","text":"Video In this walk through video, see the customer experience for viewing details of their private offer in the Azure portal and deploying the product.","title":"ISV to Customer Private Offer Purchase Experience"},{"location":"partner-center/#private-offers-for-csp-partners-overview","text":"Video | PDF Learn about private offers for Cloud Solution Providers in this overview of the capability in Partner Center.","title":"Private Offers for CSP Partners Overview"},{"location":"partner-center/#private-offer-creation-by-isvs-for-csp-partners","text":"Video This demo takes you through the process of an ISV creating a private offer for sale to a Cloud Solution Provider.","title":"Private Offer Creation by ISVs for CSP Partners"},{"location":"partner-center/#the-csp-partner-private-offer-purchase-process","text":"Video In this walkthrough video, see the purchase process partners in the Cloud Solution Provider (CSP) program go through to purchase private offers created by ISVs.","title":"The CSP Partner Private Offer Purchase Process"},{"location":"partner-center/#configuring-and-publishing-offers","text":"","title":"Configuring and Publishing Offers"},{"location":"partner-center/#publishing-a-saas-offer","text":"Video | PDF This detailed video presents the concepts of publishing a SaaS offer and then walks through the steps of doing so in Partner Center. This module goes all the way from creating an offer, to adding and plan, and finally publishing the offer live. It also speaks to the need of developers to have a sandbox environment in which they can test and development the landing page and webhook.","title":"Publishing a SaaS Offer"},{"location":"partner-center/#publishing-a-private-saas-plan","text":"Video | PDF This brief video builds upon what you learned in, \u201c Publishing a SaaS Offer .\u201d It presents the concepts of using private plans and then shows how to do so inside Partner Center.","title":"Publishing a Private SaaS Plan"},{"location":"partner-center/#migrating-listings-to-saas-offers","text":"Video You may have started your online presence in the commercial marketplace with a simple listing to advertise your services. This does not, however, create a transactable offer that can be sold through the marketplace. This video shows how to convert your existing listing into a fully transactable SaaS Offer.","title":"Migrating Listings to SaaS Offers"},{"location":"partner-center/#configuring-a-virtual-machine-offer-in-partner-center-demo","text":"Video Learn how to set up technical configurations for Azure Marketplace virtual machine offers within Partner Center. You\u2019ll look at machine generations, disk versions, share image gallery vs. SAS URI, and more.","title":"Configuring a Virtual Machine Offer in Partner Center \u2013 Demo"},{"location":"partner-center/#partner-center-with-azure-managed-applications-overview","text":"Video Partner Center is the portal publishers use to create, configure, publish, and monitor their offers in the Microsoft Marketplace. This overview takes you through Partner Center for Azure Managed Applications.","title":"Partner Center with Azure Managed Applications Overview"},{"location":"partner-center/#configuring-partner-center-for-azure-managed-applications-demo","text":"Video Understanding Partner Center, the publisher's portal, is key to creating great offers. This demo walks through setting up a Partner Center offer for an Azure Managed Application.","title":"Configuring Partner Center for Azure Managed Applications - Demo"},{"location":"saas/","text":"This online learning series includes videos, sample code, and hands-on labs meant to speed your time to publishing your custom SaaS offer on the Microsoft marketplace. If you are building a SaaS offer for the marketplace this learning series is for you. Let us know what you need in this content library. Get your hands dirty with the hands-on labs . General SaaS Knowledge # SaaS Offer Overview # Video | PDF This module offers a technical overview of Microsoft Azure Marketplace SaaS Offers, including the following topics. The Microsoft Commercial Marketplace Ecosystem\u200b SaaS Offer Creation Process\u200b \u200bPricing Models for SaaS Offers\u200b SaaS Solution Architectures Purchasing a SaaS Offer # Video | PDF This video offers a guided step-by-step process to purchasing SaaS applications in the #Microsoft Azure Marketplace from the customers point of view, including the following topics. SaaS Offer Subscription Flow Subscribing From the Azure Marketplace Subscribing From the Azure Portal The SaaS Management Service Purchasing a Private SaaS Plan # Video | PDF This video shows how to subscribe to private SaaS plans in the Microsoft Azure Marketplace. Topics include the following. About Private Plans Purchasing a SaaS Private Offer demo Publishing a SaaS Offer # Video | PDF This detailed video presents the concepts of publishing a SaaS offer and then walks through the steps of doing so in Partner Center. This module goes all the way from creating an offer, to adding and plan, and finally publishing the offer live. It also speaks to the need of developers to have a sandbox environment in which they can test and development the landing page and webhook. SaaS Technical Knowledge # Video | PDF This brief video builds upon what you learned in, \u201c Publishing a SaaS Offer .\u201d It presents the concepts of using private plans and then shows how to do so inside Partner Center. SaaS Offer Technical Overview # Video | PDF Watch a deep technical overview of how SaaS offers work in the Microsoft Azure Marketplace. Learn how the API flows and interactions should work and how to build your landing page. Topics include the following. The Landing Page\u200b authentication workflows SaaS Offer Purchase Flow in Depth\u200b SaaS Offer Fulfillment API\u200b Metered Fulfillment Overview\u200b SaaS Offer Webhook Azure AD Application Registrations # Video | PDF In this module we look at a generic topic, application registrations for Azure Active Directory because we\u2019ll need to use them in our upcoming modules. They give us a mechanism to authenticate to Azure AD, which is a requirement of the landing page, if you recall. This video should help you get a jump start on configuring application registrations for the apps we\u2019ll be building in the next few modules. NOTE: The secrets that you set in an Application Registration have time limits. You may select up to 2 years for the secret to remain valid. In production, track when your secrets need to be changed and do so to avoid service outages. This module introduces just enough on this topic to help us build our landing page and webhooks later in the course. For those interested in more reading, please see Create and Azure AD app registration and Quick start: Register an application with the Microsoft identity platform from the official Microsoft documentation. Using the SaaS Offer REST Fulfillment API # Video | PDF See the SaaS Fulfillment REST API in action as we send it through its paces using Postman. You\u2019ll learn how to authenticate with Azure Active Directory, resolve and activate subscriptions just like your Landing Page does, and see many other features of the API. This module prepares you for working with the language-specific client libraries. You will need knowledge of Application Registrations in AAD . An Application Registration is used in the examples when making the first request to retrieve an authentication token from Azure Active Directory. You should be familiar with creating an Application Registration and finding the following information in the Azure Portal. The Tenant ID and App ID A Client Secret on the Application Registration The SaaS Client Library for .NET # Video | PDF | Code This module introduces the SaaS Client Library for .NET developers who want to work with the SaaS APIs at a level of abstraction above the REST level. The client library is a fully functional .NET package that you can install from NuGet and use in your applications. This video shows a sample command line application that can talk to the client library API and the code is available in this repository via the link above. Building a Simple SaaS Landing Page in .NET # Video | PDF | Code In this module we examine the elements of building a simple landing page and looking at how it works.We examine the following topics. The purpose of a landing page A humble landing page in action The code Available data to display The technology stack used is C#, ASP.NET MVC, and Razor views, just to keep it simple. We use the SaaS Client Library for .NET to build out our landing page functionality. Building a Simple SaaS Publisher Portal in .NET # Video | PDF | Code In this module we examine the elements of building a publisher portal and at how it works.We examine the following topics. The purpose of a publisher portal A simple publisher portal in action The code The technology stack used is C#, ASP.NET MVC, and Razor views, just to keep it simple. We use the SaaS Client Library for .NET to build out our portal functionality. SaaS Webhook Overview # Video | PDF This technical overview of the SaaS webhook explains the following concepts of the SaaS offer webhook. Why to have this specialized HTTPS endpoint POST events one may receive on the webhook Flow models of how to handle requests Potential fully implemented solution architectures And more! Consider watching this video before moving on to the code-based modules for implementing and securing a SaaS offer webhook. Implementing a Simple SaaS Webhook in .NET # Video | Code This code-heavy module focuses on the fundamentals of implementing a SaaS offer webhook as an Azure function using .NET. Concepts are presented in such a way as to be architecture and technology stack agnostic. Securing a Simple SaaS Webhook in .NET # Video | PDF | Code This security-focused module introduces several techniques for securing a SaaS offer webhook and then dives into code looking at implementations of the techniques presented. This module builds on the concepts and code presented in the module, \u201c Implementing a Simple SaaS Webhook in .NET \u201d. Although utilizing an Azure function built in .NET, topics are presented in such a way as to be architecture and technology stack agnostic. SaaS Metered Billing Overview # Video | PDF This module presents the fundamentals of billing through the marketplace based on usage, or metered billing. IT covers several areas of metered billing including the following. How to configure Partner Center The flow of API operations needed to use the SaaS billing API Resources to save you time in building your SaaS application The SaaS Metered Billing API with REST # Video We exercise the SaaS Billing REST API using Postman to illustrate how the API works. You\u2019ll learn how the inputs to each API event and how to use the results, and finally how to invoke usage events in the metering API itself. This module is primarily demo. Hands-on labs # The following hands-on labs build upon each other. Perform them in sequential order to get a fully functional SaaS Offer published and working for your test environment. Clone this repository to your local machine. You will need some artifacts from the lab folders to complete the labs. Prerequisites # Azure subscription that can create resources A Partner Center Account Visual Studio 2022, any version Labs # Creating a SaaS Offer in Partner Center Creating a Landing Page Installing a Publisher Portal Deploying and Monitoring a Webhook Implementing Meter billing","title":"Mastering SaaS Offers"},{"location":"saas/#general-saas-knowledge","text":"","title":"General SaaS Knowledge"},{"location":"saas/#saas-offer-overview","text":"Video | PDF This module offers a technical overview of Microsoft Azure Marketplace SaaS Offers, including the following topics. The Microsoft Commercial Marketplace Ecosystem\u200b SaaS Offer Creation Process\u200b \u200bPricing Models for SaaS Offers\u200b SaaS Solution Architectures","title":"SaaS Offer Overview"},{"location":"saas/#purchasing-a-saas-offer","text":"Video | PDF This video offers a guided step-by-step process to purchasing SaaS applications in the #Microsoft Azure Marketplace from the customers point of view, including the following topics. SaaS Offer Subscription Flow Subscribing From the Azure Marketplace Subscribing From the Azure Portal The SaaS Management Service","title":"Purchasing a SaaS Offer"},{"location":"saas/#purchasing-a-private-saas-plan","text":"Video | PDF This video shows how to subscribe to private SaaS plans in the Microsoft Azure Marketplace. Topics include the following. About Private Plans Purchasing a SaaS Private Offer demo","title":"Purchasing a Private SaaS Plan"},{"location":"saas/#publishing-a-saas-offer","text":"Video | PDF This detailed video presents the concepts of publishing a SaaS offer and then walks through the steps of doing so in Partner Center. This module goes all the way from creating an offer, to adding and plan, and finally publishing the offer live. It also speaks to the need of developers to have a sandbox environment in which they can test and development the landing page and webhook.","title":"Publishing a SaaS Offer"},{"location":"saas/#saas-technical-knowledge","text":"Video | PDF This brief video builds upon what you learned in, \u201c Publishing a SaaS Offer .\u201d It presents the concepts of using private plans and then shows how to do so inside Partner Center.","title":"SaaS Technical Knowledge"},{"location":"saas/#saas-offer-technical-overview","text":"Video | PDF Watch a deep technical overview of how SaaS offers work in the Microsoft Azure Marketplace. Learn how the API flows and interactions should work and how to build your landing page. Topics include the following. The Landing Page\u200b authentication workflows SaaS Offer Purchase Flow in Depth\u200b SaaS Offer Fulfillment API\u200b Metered Fulfillment Overview\u200b SaaS Offer Webhook","title":"SaaS Offer Technical Overview"},{"location":"saas/#azure-ad-application-registrations","text":"Video | PDF In this module we look at a generic topic, application registrations for Azure Active Directory because we\u2019ll need to use them in our upcoming modules. They give us a mechanism to authenticate to Azure AD, which is a requirement of the landing page, if you recall. This video should help you get a jump start on configuring application registrations for the apps we\u2019ll be building in the next few modules. NOTE: The secrets that you set in an Application Registration have time limits. You may select up to 2 years for the secret to remain valid. In production, track when your secrets need to be changed and do so to avoid service outages. This module introduces just enough on this topic to help us build our landing page and webhooks later in the course. For those interested in more reading, please see Create and Azure AD app registration and Quick start: Register an application with the Microsoft identity platform from the official Microsoft documentation.","title":"Azure AD Application Registrations"},{"location":"saas/#using-the-saas-offer-rest-fulfillment-api","text":"Video | PDF See the SaaS Fulfillment REST API in action as we send it through its paces using Postman. You\u2019ll learn how to authenticate with Azure Active Directory, resolve and activate subscriptions just like your Landing Page does, and see many other features of the API. This module prepares you for working with the language-specific client libraries. You will need knowledge of Application Registrations in AAD . An Application Registration is used in the examples when making the first request to retrieve an authentication token from Azure Active Directory. You should be familiar with creating an Application Registration and finding the following information in the Azure Portal. The Tenant ID and App ID A Client Secret on the Application Registration","title":"Using the SaaS Offer REST Fulfillment API"},{"location":"saas/#the-saas-client-library-for-net","text":"Video | PDF | Code This module introduces the SaaS Client Library for .NET developers who want to work with the SaaS APIs at a level of abstraction above the REST level. The client library is a fully functional .NET package that you can install from NuGet and use in your applications. This video shows a sample command line application that can talk to the client library API and the code is available in this repository via the link above.","title":"The SaaS Client Library for .NET"},{"location":"saas/#building-a-simple-saas-landing-page-in-net","text":"Video | PDF | Code In this module we examine the elements of building a simple landing page and looking at how it works.We examine the following topics. The purpose of a landing page A humble landing page in action The code Available data to display The technology stack used is C#, ASP.NET MVC, and Razor views, just to keep it simple. We use the SaaS Client Library for .NET to build out our landing page functionality.","title":"Building a Simple SaaS Landing Page in .NET"},{"location":"saas/#building-a-simple-saas-publisher-portal-in-net","text":"Video | PDF | Code In this module we examine the elements of building a publisher portal and at how it works.We examine the following topics. The purpose of a publisher portal A simple publisher portal in action The code The technology stack used is C#, ASP.NET MVC, and Razor views, just to keep it simple. We use the SaaS Client Library for .NET to build out our portal functionality.","title":"Building a Simple SaaS Publisher Portal in .NET"},{"location":"saas/#saas-webhook-overview","text":"Video | PDF This technical overview of the SaaS webhook explains the following concepts of the SaaS offer webhook. Why to have this specialized HTTPS endpoint POST events one may receive on the webhook Flow models of how to handle requests Potential fully implemented solution architectures And more! Consider watching this video before moving on to the code-based modules for implementing and securing a SaaS offer webhook.","title":"SaaS Webhook Overview"},{"location":"saas/#implementing-a-simple-saas-webhook-in-net","text":"Video | Code This code-heavy module focuses on the fundamentals of implementing a SaaS offer webhook as an Azure function using .NET. Concepts are presented in such a way as to be architecture and technology stack agnostic.","title":"Implementing a Simple SaaS Webhook in .NET"},{"location":"saas/#securing-a-simple-saas-webhook-in-net","text":"Video | PDF | Code This security-focused module introduces several techniques for securing a SaaS offer webhook and then dives into code looking at implementations of the techniques presented. This module builds on the concepts and code presented in the module, \u201c Implementing a Simple SaaS Webhook in .NET \u201d. Although utilizing an Azure function built in .NET, topics are presented in such a way as to be architecture and technology stack agnostic.","title":"Securing a Simple SaaS Webhook in .NET"},{"location":"saas/#saas-metered-billing-overview","text":"Video | PDF This module presents the fundamentals of billing through the marketplace based on usage, or metered billing. IT covers several areas of metered billing including the following. How to configure Partner Center The flow of API operations needed to use the SaaS billing API Resources to save you time in building your SaaS application","title":"SaaS Metered Billing Overview"},{"location":"saas/#the-saas-metered-billing-api-with-rest","text":"Video We exercise the SaaS Billing REST API using Postman to illustrate how the API works. You\u2019ll learn how the inputs to each API event and how to use the results, and finally how to invoke usage events in the metering API itself. This module is primarily demo.","title":"The SaaS Metered Billing API with REST"},{"location":"saas/#hands-on-labs","text":"The following hands-on labs build upon each other. Perform them in sequential order to get a fully functional SaaS Offer published and working for your test environment. Clone this repository to your local machine. You will need some artifacts from the lab folders to complete the labs.","title":"Hands-on labs"},{"location":"saas/#prerequisites","text":"Azure subscription that can create resources A Partner Center Account Visual Studio 2022, any version","title":"Prerequisites"},{"location":"saas/#labs","text":"Creating a SaaS Offer in Partner Center Creating a Landing Page Installing a Publisher Portal Deploying and Monitoring a Webhook Implementing Meter billing","title":"Labs"},{"location":"saas/demo-code/saas-simple-landing-page/LandingPage/wwwroot/lib/jquery-validation/LICENSE/","text":"The MIT License (MIT) # Copyright J\u00f6rn Zaefferer Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"saas/demo-code/saas-simple-landing-page/LandingPage/wwwroot/lib/jquery-validation/LICENSE/#the-mit-license-mit","text":"Copyright J\u00f6rn Zaefferer Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"The MIT License (MIT)"},{"location":"saas/demo-code/saas-simple-publisher-portal/PublisherPortal/wwwroot/lib/jquery-validation/LICENSE/","text":"The MIT License (MIT) # Copyright J\u00f6rn Zaefferer Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"saas/demo-code/saas-simple-publisher-portal/PublisherPortal/wwwroot/lib/jquery-validation/LICENSE/#the-mit-license-mit","text":"Copyright J\u00f6rn Zaefferer Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"The MIT License (MIT)"},{"location":"saas/labs/lab-code/begin/LandingPage/wwwroot/lib/jquery-validation/LICENSE/","text":"The MIT License (MIT) # Copyright J\u00f6rn Zaefferer Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"saas/labs/lab-code/begin/LandingPage/wwwroot/lib/jquery-validation/LICENSE/#the-mit-license-mit","text":"Copyright J\u00f6rn Zaefferer Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"The MIT License (MIT)"},{"location":"saas/labs/lab-code/begin/PublisherPortal/wwwroot/lib/jquery-validation/LICENSE/","text":"The MIT License (MIT) # Copyright J\u00f6rn Zaefferer Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"saas/labs/lab-code/begin/PublisherPortal/wwwroot/lib/jquery-validation/LICENSE/#the-mit-license-mit","text":"Copyright J\u00f6rn Zaefferer Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"The MIT License (MIT)"},{"location":"saas/labs/lab-code/end/LandingPage/wwwroot/lib/jquery-validation/LICENSE/","text":"The MIT License (MIT) # Copyright J\u00f6rn Zaefferer Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"saas/labs/lab-code/end/LandingPage/wwwroot/lib/jquery-validation/LICENSE/#the-mit-license-mit","text":"Copyright J\u00f6rn Zaefferer Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"The MIT License (MIT)"},{"location":"saas/labs/lab-code/end/PublisherPortal/wwwroot/lib/jquery-validation/LICENSE/","text":"The MIT License (MIT) # Copyright J\u00f6rn Zaefferer Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"saas/labs/lab-code/end/PublisherPortal/wwwroot/lib/jquery-validation/LICENSE/#the-mit-license-mit","text":"Copyright J\u00f6rn Zaefferer Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"The MIT License (MIT)"},{"location":"saas/labs/lab1-create-pc-offer/","text":"Lab 1: Creating a SaaS Offer in Partner Center # In this lab you will use your Partner Center account to create a test SaaS offer with a single plan. This offer will be used for development and testing purposes. Completion of this lab is required for the following labs in the series to work properly. You will need the following to complete this lab. A Partner Center account An Azure account and access to the Azure portal Exercise: Create a New SaaS Offer # In this exercise, you will create a new SaaS offer in Partner Center and fill in the information needed to publish it. Create a new SaaS offer # From the Home page of Partner Center click the Commercial Marketplace button. Click the + New offer button and at the dropdown and select Software as a Service . Give your new offer an Offer ID and Offer alias . Although you are free to use whatever values you like, we will be using the following in this lab for reference. Offer ID: saas-workshop Offer alias SaaS Workshop Offer setup # Leave all information at the top of this page as is and scroll down to the Customer leads section of the page. Customer leads # Here, you will attach your offer to an Azure Data Storage table which will act as a connected Customer Relationship Management system (CRM) for your offer. Create the Azure Storage account # This is the first time you're using the Azure portal for this class. It is recommended that you install all the resources you'll create in this class into the same Resource Group, just to keep things tidy within your Azure subscription. Open a new tab for the Azure portal and log in. Create a Resource Group named saas-workshop . Although you may use a different name, all labs will refer to the Resource Group with this name. In the saas-workshop Resource Group, create a standard Azure Storage account. This will be your CRM database, so name it accordingly to distinguish it from future storage accounts that will be created in this Resource Group. Once the storage account is created, browse to the storage account's overview page. In the left-hand menu, find the Security + networking section. In that section, find and click on the Access keys link. At the top of the page, click the Show keys link, and you see the connection strings for the database. Copy a connection string to your copy/paste buffer. Configure Customer Leads in Partner Center # Go back to the Partner Center tab in your browser. Select the Connect link. From the Lead destination dropdown, select Azure Table . Enter your Contact email and paste in your Storage account connection string . Click the Validate link to ensure your connection string is valid. Click Connect . For each page, you must click the Save draft at the bottom of the page to move on. Click Save draft at the bottom of the page. Properties # Navigate to the Properties section. Categories # You must select at least one category for your offer. Click the + Categories link. In the left dropdown, select Developer Tools . In the right dropdown, select Developer Service . Legal # Scroll down to the Legal section. Select Use the Standard Contract for Microsoft\u2019s commercial marketplace? checkbox Click Accept . Click the Save draft button. Offer listing # In the the Offer listing section, for Search results summary enter SaaS Workshop summary . For Description , here is some text you may choose to copy and paste into the text box. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat cupiditat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. In Getting started instructions paste the following text. Click the configure account button after the subscription is created. In the Privacy policy link , enter the public link to the privacy policy for your company if you know it. If not, follow this link to Microsoft's privacy policy and use that URL. In the Support contact section, enter your contact information. For the Support link field enter the support or homepage of your website. For the Engineering contact section, enter your contact information. for the Supporting documents section, upload the PDF document provided in the items directory of lab1 . This document is named \" Well-Architected-Framework.pdf .\" You must give the document a name. For the Marketplace media section you'll upload 2 images. For the 216X216 logo image, upload the PNG provided in the items directory of lab1 . This PNG is named \" Contoso-Logo-216x216.png .\" For the 1280X720 screenshot image, upload the PNG provided in the items directory of lab1 . This PNG is named \" Screenshots-1280x720.png .\" Add a title to the screenshot image. Click the Save draft button and correct any errors that be shown before moving on. Availability # In the Availability - Preview audience section, enter the email address you use for your Azure subscription. This is the email address you will use to purchase your offer later. Enter a Description . Click Save draft . Technical configuration # Skip this section for this first lab. Plan overview # In this section, you will create a single plan that costs $0. This plan will be used for testing purposes. The creation of this plan is covered in the next exercise. Exercise: Create a Plan # In this exercise, you will create a plan that costs $0 to purchase. This plan will be used to test the offer in later labs. Create the plan # Navigate to the Plan overview page. At the top of the page click the + Create new plan button. Give the new plan a Plan ID and Plan name . These values can be whatever you like, but we will refer to them a follows throughout these labs. Plan ID: gold-plan-id Plan name: Gold Plan Click the Create button and your new plan is created. Fill out the plan # The Plan has several components to it, all of which must be completed. Plan Listing # The Plan name should read \"Gold Plan.\" The summary requires text to describe the plan. In this case, you may use the following placeholder text if you would like. Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur. 1. Click Save draft . Plan setup # For Markets: Select the Edit markets link. Choose at least one market within which to sell your plan. This will likely be the same country that hosts your Azure region. Click Save . For pricing mode: Keep it Flat rate . Leave Billing term as Monthly . Enter 0 for the cost per month. For Marketplace Metering Service dimensions: Click the Add a Custom Meter Dimension (Max 30) link. This will create a new row. Enter the below values. Enter \"persmsId\" for \"ID\". Enter \"SMS\" for the \"Display Name\". Enter \"per sms sent\" for the \"Unit of Measure\". Enter \"0\" for the \"Price per unit in USD\" column. Enter \"0\" for the \"Monthly quantity included in base\" column. Leave the rest of the plan as is and click Save draft . Exercise: Resell through CSPs # Open the lef-hand menu item. Select \"No partners in the CSP program.\" Click the Save draft button at the bottom of the screen. Exercise: Review and Publish # In this short exercise, you will check your work by performing the first action of the publication process. You will submit your offer for review to see if it is ready to be published. Open your offer's overview page. In the upper right corner of the page, click the link for Review and publish . Looking to the right side of the page, notice that some sections have a green circle and at least one is gray. The gray sections are not yet complete, preventing you from taking the next step of publishing your offer. The Technical configuration section of the offer will not pass review. This is okay for now as we need to fill out the Technical configuration tab and you can't do that until we have a landing page. All other sections should be green. Go back to all sections that appear with a gray circle and complete those sections. Ensure all sections pass except Technical configuration , which will be addressed in the next lab. Congratulation! You have finished this lab. If you are in a live class setting, please raise your hand in Microsoft Teams to indicate you are done with the lab.","title":"Lab 1: Creating a SaaS Offer in Partner Center"},{"location":"saas/labs/lab1-create-pc-offer/#lab-1-creating-a-saas-offer-in-partner-center","text":"In this lab you will use your Partner Center account to create a test SaaS offer with a single plan. This offer will be used for development and testing purposes. Completion of this lab is required for the following labs in the series to work properly. You will need the following to complete this lab. A Partner Center account An Azure account and access to the Azure portal","title":"Lab 1: Creating a SaaS Offer in Partner Center"},{"location":"saas/labs/lab1-create-pc-offer/#exercise-create-a-new-saas-offer","text":"In this exercise, you will create a new SaaS offer in Partner Center and fill in the information needed to publish it.","title":"Exercise: Create a New SaaS Offer"},{"location":"saas/labs/lab1-create-pc-offer/#create-a-new-saas-offer","text":"From the Home page of Partner Center click the Commercial Marketplace button. Click the + New offer button and at the dropdown and select Software as a Service . Give your new offer an Offer ID and Offer alias . Although you are free to use whatever values you like, we will be using the following in this lab for reference. Offer ID: saas-workshop Offer alias SaaS Workshop","title":"Create a new SaaS offer"},{"location":"saas/labs/lab1-create-pc-offer/#offer-setup","text":"Leave all information at the top of this page as is and scroll down to the Customer leads section of the page.","title":"Offer setup"},{"location":"saas/labs/lab1-create-pc-offer/#customer-leads","text":"Here, you will attach your offer to an Azure Data Storage table which will act as a connected Customer Relationship Management system (CRM) for your offer.","title":"Customer leads"},{"location":"saas/labs/lab1-create-pc-offer/#create-the-azure-storage-account","text":"This is the first time you're using the Azure portal for this class. It is recommended that you install all the resources you'll create in this class into the same Resource Group, just to keep things tidy within your Azure subscription. Open a new tab for the Azure portal and log in. Create a Resource Group named saas-workshop . Although you may use a different name, all labs will refer to the Resource Group with this name. In the saas-workshop Resource Group, create a standard Azure Storage account. This will be your CRM database, so name it accordingly to distinguish it from future storage accounts that will be created in this Resource Group. Once the storage account is created, browse to the storage account's overview page. In the left-hand menu, find the Security + networking section. In that section, find and click on the Access keys link. At the top of the page, click the Show keys link, and you see the connection strings for the database. Copy a connection string to your copy/paste buffer.","title":"Create the Azure Storage account"},{"location":"saas/labs/lab1-create-pc-offer/#configure-customer-leads-in-partner-center","text":"Go back to the Partner Center tab in your browser. Select the Connect link. From the Lead destination dropdown, select Azure Table . Enter your Contact email and paste in your Storage account connection string . Click the Validate link to ensure your connection string is valid. Click Connect . For each page, you must click the Save draft at the bottom of the page to move on. Click Save draft at the bottom of the page.","title":"Configure Customer Leads in Partner Center"},{"location":"saas/labs/lab1-create-pc-offer/#properties","text":"Navigate to the Properties section.","title":"Properties"},{"location":"saas/labs/lab1-create-pc-offer/#categories","text":"You must select at least one category for your offer. Click the + Categories link. In the left dropdown, select Developer Tools . In the right dropdown, select Developer Service .","title":"Categories"},{"location":"saas/labs/lab1-create-pc-offer/#legal","text":"Scroll down to the Legal section. Select Use the Standard Contract for Microsoft\u2019s commercial marketplace? checkbox Click Accept . Click the Save draft button.","title":"Legal"},{"location":"saas/labs/lab1-create-pc-offer/#offer-listing","text":"In the the Offer listing section, for Search results summary enter SaaS Workshop summary . For Description , here is some text you may choose to copy and paste into the text box. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat cupiditat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. In Getting started instructions paste the following text. Click the configure account button after the subscription is created. In the Privacy policy link , enter the public link to the privacy policy for your company if you know it. If not, follow this link to Microsoft's privacy policy and use that URL. In the Support contact section, enter your contact information. For the Support link field enter the support or homepage of your website. For the Engineering contact section, enter your contact information. for the Supporting documents section, upload the PDF document provided in the items directory of lab1 . This document is named \" Well-Architected-Framework.pdf .\" You must give the document a name. For the Marketplace media section you'll upload 2 images. For the 216X216 logo image, upload the PNG provided in the items directory of lab1 . This PNG is named \" Contoso-Logo-216x216.png .\" For the 1280X720 screenshot image, upload the PNG provided in the items directory of lab1 . This PNG is named \" Screenshots-1280x720.png .\" Add a title to the screenshot image. Click the Save draft button and correct any errors that be shown before moving on.","title":"Offer listing"},{"location":"saas/labs/lab1-create-pc-offer/#availability","text":"In the Availability - Preview audience section, enter the email address you use for your Azure subscription. This is the email address you will use to purchase your offer later. Enter a Description . Click Save draft .","title":"Availability"},{"location":"saas/labs/lab1-create-pc-offer/#technical-configuration","text":"Skip this section for this first lab.","title":"Technical configuration"},{"location":"saas/labs/lab1-create-pc-offer/#plan-overview","text":"In this section, you will create a single plan that costs $0. This plan will be used for testing purposes. The creation of this plan is covered in the next exercise.","title":"Plan overview"},{"location":"saas/labs/lab1-create-pc-offer/#exercise-create-a-plan","text":"In this exercise, you will create a plan that costs $0 to purchase. This plan will be used to test the offer in later labs.","title":"Exercise: Create a Plan"},{"location":"saas/labs/lab1-create-pc-offer/#create-the-plan","text":"Navigate to the Plan overview page. At the top of the page click the + Create new plan button. Give the new plan a Plan ID and Plan name . These values can be whatever you like, but we will refer to them a follows throughout these labs. Plan ID: gold-plan-id Plan name: Gold Plan Click the Create button and your new plan is created.","title":"Create the plan"},{"location":"saas/labs/lab1-create-pc-offer/#fill-out-the-plan","text":"The Plan has several components to it, all of which must be completed.","title":"Fill out the plan"},{"location":"saas/labs/lab1-create-pc-offer/#plan-listing","text":"The Plan name should read \"Gold Plan.\" The summary requires text to describe the plan. In this case, you may use the following placeholder text if you would like. Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur. 1. Click Save draft .","title":"Plan Listing"},{"location":"saas/labs/lab1-create-pc-offer/#plan-setup","text":"For Markets: Select the Edit markets link. Choose at least one market within which to sell your plan. This will likely be the same country that hosts your Azure region. Click Save . For pricing mode: Keep it Flat rate . Leave Billing term as Monthly . Enter 0 for the cost per month. For Marketplace Metering Service dimensions: Click the Add a Custom Meter Dimension (Max 30) link. This will create a new row. Enter the below values. Enter \"persmsId\" for \"ID\". Enter \"SMS\" for the \"Display Name\". Enter \"per sms sent\" for the \"Unit of Measure\". Enter \"0\" for the \"Price per unit in USD\" column. Enter \"0\" for the \"Monthly quantity included in base\" column. Leave the rest of the plan as is and click Save draft .","title":"Plan setup"},{"location":"saas/labs/lab1-create-pc-offer/#exercise-resell-through-csps","text":"Open the lef-hand menu item. Select \"No partners in the CSP program.\" Click the Save draft button at the bottom of the screen.","title":"Exercise: Resell through CSPs"},{"location":"saas/labs/lab1-create-pc-offer/#exercise-review-and-publish","text":"In this short exercise, you will check your work by performing the first action of the publication process. You will submit your offer for review to see if it is ready to be published. Open your offer's overview page. In the upper right corner of the page, click the link for Review and publish . Looking to the right side of the page, notice that some sections have a green circle and at least one is gray. The gray sections are not yet complete, preventing you from taking the next step of publishing your offer. The Technical configuration section of the offer will not pass review. This is okay for now as we need to fill out the Technical configuration tab and you can't do that until we have a landing page. All other sections should be green. Go back to all sections that appear with a gray circle and complete those sections. Ensure all sections pass except Technical configuration , which will be addressed in the next lab. Congratulation! You have finished this lab. If you are in a live class setting, please raise your hand in Microsoft Teams to indicate you are done with the lab.","title":"Exercise: Review and Publish"},{"location":"saas/labs/lab2-create-landing-page/","text":"Lab 2: Creating a Landing Page # In this lab, you will build on what you accomplished in Lab 1: Creating a SaaS Offer in Partner Center . You will deploy a landing page and integrate it with your Partner Center SaaS Offer, enabling publishing of the offer and purchasing the offer in the Preview stage of the publication pipeline. Completion of this lab is required for the following labs in the series to work properly. For this lab, you will need the following. An offer configured in Partner Center as per Lab 1 An Azure account and access to the Azure portal Visual Studio 2022 (any version) Git (optional) Note: It is possible to complete this using Visual Studio Code, but the instructions will be tailored for using Visual Studio 2022. Exercise: Compile the Visual Studio Solution # There are three projects in the solution you'll be working with. You will deal with them one at a time over the course of the labs. In this lab, we will start with the landing page project. Clone this repository or download a ZIP file of its contents and UNZIP them on your machine. https://github.com/microsoft/Mastering-the-Marketplace Using Visual Studio 2022, open the following solution file on your machine. Take care to choose the begin folder. **\\Mastering-the-Marketplace\\saas\\labs\\lab-code\\begin\\SaaSLabsBegin.sln Build the solution. You should get no build errors. Exercise: Creating a Single-Tenant Application Registrations # In this exercise, you will create an app registration in the Azure portal. It will be single-tenant and used to connect to the SaaS API. Create a single-tenant App Registration # Log in to the Azure portal. In the top-of-center command window in the portal, type \"app reg\" and select the item \"App registrations\" that appears. You will see a list of current application registrations. At the top of the page, click the + New registration link. You are taken to the Register an application page . For the purposes of this lab, use saas-workshop-single-tenant as the name of this app registration. At the bottom of the page, click the Register button. Add a secret # Now you will add a secret to the app registration. Make sure to copy and paste the secret value somewhere you can access it later. Click into the saas-workshop-single-tenant application registration. In the left-hand menu, find the Manage menu and click the Certificates and secrets link. Create a new client secret. Give it a description. Choose an expiration date. The 6-month default should be fine. Copy the Value of the secret and paste it somewhere you can easily access it later. Exercise: Creating a multi-tenant App Registration # In this exercise, you will create a multi-tenant app registration in the Azure portal to authenticate users coming to your landing page. Create an app registration. For the purposes of this lab, use saas-workshop-multi-tenant as the name of this app registration. Under Supported account types , select the option: Accounts in any organizational directory (Any Azure AD directory - Multitenant) . At the bottom of the page, click the Register button. Add a platform to the multi-tenant app registration # In the left-hand menu under the Overview menu item, click the Quickstart link. Find the Web application section and click the Start button. Click ASP.NET Core . On the resulting Quickstart page, click the Make this change for me button. Under the Configuring your application registration , click the Make updates button. In the left-hand menu under the Manage section, click the Authentication link. Here you can see that two URLS have been added to the Redirect URIs section for you. These allow running your code in debug mode using the default debugger ports. You will add your actual landing page URLs here later. Create a client secret # Create a client secret for this app registration. Copy the Value of the secret and paste it somewhere you can easily access it later. Exercise: appsettings.json # The appsettings.json file in the LandingPage project must be filled out before publishing the application. That's what you'll do in this section. Values from the saas-workshop-multi-tenant app registration # All changes in this section occur under the AzureAD section of the appsettings.json file. In the Landing Page project, open the appsettings.json file. In the Azure portal, click the Azure Active Directory button in the left-hand menu. On the overview page in the Basic information section, find the the Primary domain and use it to replace DOMAIN_NAME in appsettings.json . In the left-hand menu under the Manage menu, click the App registrations link. Click the saas-workshop-multi-tenant app registration. In the appsetting.json file, replace CLIENT_ID with the Application (client) ID from this screen. Replace CLIENT_SECRET with the client secret you noted earlier for the saas-workshop-multi-tenant app registration. Values from the saas-workshop-single-tenant app registration # All changes in this section occur under the MarketplaceAPI section of the appsettings.json file. Go back to the list of App registrations. Click the saas-workshop-single-tenant app registration. In the appsetting.json file, replace CLIENT_ID with the Application (client) ID from this screen. In the appsetting.json file, replace TENANT_ID with the Directory (tenant) ID from this screen. In the appsetting.json file, replace CLIENT_SECRET with the client secret value you stored earlier. Congratulations, your LandingPage project is ready to publish! Publishing your landing page # First you must create a publish profile file that will hold the information about your project to publish. Also, you must create an App Service Plan to host your website. Creating your publish profile # In the Solution Explorer of Visual Studio, right click the LandingPage project and select Publish . The Publish dialog appears. Select Azure as your publish target and click the Next button. Select Azure App Service (Windows) and click the Next button. You are now on the App Service tab. You may now need to sign in to Visual Studio with your Azure credentials. Choose the correct subscription from the list of subscriptions. To the far right of the words App Service Instances , click the green + (plus) button to create an App Service. The App Service dialog opens. Name the App Service SaaSWorkshopLandingPage with a number on the end to make it unique. Choose saas-workshop for the resource group. Create a new Hosting Plan and name it SaaSWorkshopAppServicePlan . Click the Create button at the bottom of the screen. After clicking the Create button at the bottom of the page it may take a moment for the Hosting Plan and App Service to be created. After the App Service is created, you will be back at the Publish dialog. Select your new App Service instance and click the Next button. For Publish type, select Publish (generate pubxmlfile) . Click the Finish button at the bottom of the dialog. You now have a publish profile that can be used to publish your application. Publishing the landing page # Near the top-right of the Publish dialog click the Publish button. This deploys your application. You can watch the publish process in the Output window at the bottom of the screen. The page will launch, but shows an error message. You aren't quite done configuring your landing page application. Registering your landing page # In the command bar at the top of the Azure portal, search for and select App Services . Click on the App Service you just created, SaaSWorkshopLandingPage . On the overview screen in Visual Studio, the URL for the site should be in the Hosting section. Copy it into your paste buffer. In the command bar at the top of the Azure portal, search for and select App registrations . Click on the saas-workshop-multi-tenant app registration. In the left-hand menu click the Authentication link. In the Web > Redirect URIs section, click Add URI and paste in your Landing Page URL. Paste it in again on another line, this time adding a suffix of /signin-oidc so that your URI looks something like this. https://*.azurewebsites.net/signin-oidc Click the Save button at the top of the screen. Exercise: Browse to your landing page # Using the App Service URL to you created, https://<prefix>.azurewebsites.net , browse to that web page. Authenticate when prompted. You should see a message that reads, \" Token URL parameter cannot be empty .\" This is good! You are seeing this message because you aren't coming to the landing page through the Azure portal and no marketplace purchase token is being passed. To finish your configuration, we need to configure Partner Center to be aware of the landing page. Exercise: Update Your Offer in Partner Center and Publish It # Now that you have deployed your application, you can configure the Technical configuration section of Partner Center. Open your offer in Partner Center. Navigate to the Technical configuration tab. Technical configuration # For Landing page URL , enter the URL of your new landing page. For Connection webhook , enter the URL of your new landing page. This is not the correct value for the webhook, but we haven't published a webhook yet and this will act as a placeholder for now. Enter the Azure Active Directory tenant ID you've deployed your landing page to. For Azure Active Directory application ID , enter the Application (client) ID of the saas-workshop-single-tenant App registration. Click the Save draft button. Click the Review and publish button. The Status of all sections in your offer should be green. Click the Publish button at the bottom of the screen. You will be directed to the top of the Offer overview, where you may watch the publication process as it occurs. You must refresh the page to see status updates. You only want to publish as far as the Publisher signoff section. When the test links appear under that section, DO NOT press the Go Live button. You will need to hit refresh for awhile as your offer goes through the publish stages. Publishing Time # This section exists to let you know that it will take some time before your offer is finished publishing. This is the end of the lab for now as it will take some time for the offer to complete publishing to the Publisher signoff stage. To check your offers' publication status, go to the offer's Overview page. Look for links under the Publisher signoff section as shown below. Refresh the Overview page to get updates on your offer during the publication process. Note: If you are in a live workshop event, please raise your hand in Microsoft Teams to indicate you are done with the lab to this point. You will be coming back to finish the rest of Lab 2 later in the workshop. Exercise: Buy Your Offer and Check Your Landing Page # In Partner Center, after the offer is in Publisher preview stage, you may subscribe to it. After the initial purchase, you will then be routed to the landing page for the offer. Subscribing to your offer # Once the Publisher signoff section has links under it, still DO NOT press the Go live button. Instead, this state is where you will test the purchase and functionality of your SaaS application. Under the Publisher signoff section of the Offer overview page, click the Azure portal preview link. If you receive the message, \"Could not create the marketplace item\" or a \"404\" message, wait another several minutes and try again. The offer is simply still being created. Preview creation can take up to 45 minutes in some cases. Purchasing the SaaS offer # Once you can click the Azure portal preview link in Partner Center, do so. You will see a form to fill out to purchase your SaaS Offer. Move on to the next section. You are now acting in the role of the customer. Click Get it Now . On the next screen you can fill it out and subscribe to the subscription you are making. For the resource group, create a new one named saas-workshop-purchases . Give your SaaS offer a name. Consider SaaSWorkshop01 . Click the Review + subscribe button at the bottom of the page. Click the Subscribe button at the bottom of the page. Your subscription is being provisioned. Once it is complete, you will see a Configure account now button on the screen. Click the Configure account now button. You are taken to the landing page where you can see details about the subscription you are buying. Note the marketplace purchase token in the query string. Congratulations! You have finished this lab. If you are in a live class setting, please raise your hand in Microsoft Teams to indicate you are done with the lab.","title":"Lab 2: Creating a Landing Page"},{"location":"saas/labs/lab2-create-landing-page/#lab-2-creating-a-landing-page","text":"In this lab, you will build on what you accomplished in Lab 1: Creating a SaaS Offer in Partner Center . You will deploy a landing page and integrate it with your Partner Center SaaS Offer, enabling publishing of the offer and purchasing the offer in the Preview stage of the publication pipeline. Completion of this lab is required for the following labs in the series to work properly. For this lab, you will need the following. An offer configured in Partner Center as per Lab 1 An Azure account and access to the Azure portal Visual Studio 2022 (any version) Git (optional) Note: It is possible to complete this using Visual Studio Code, but the instructions will be tailored for using Visual Studio 2022.","title":"Lab 2: Creating a Landing Page"},{"location":"saas/labs/lab2-create-landing-page/#exercise-compile-the-visual-studio-solution","text":"There are three projects in the solution you'll be working with. You will deal with them one at a time over the course of the labs. In this lab, we will start with the landing page project. Clone this repository or download a ZIP file of its contents and UNZIP them on your machine. https://github.com/microsoft/Mastering-the-Marketplace Using Visual Studio 2022, open the following solution file on your machine. Take care to choose the begin folder. **\\Mastering-the-Marketplace\\saas\\labs\\lab-code\\begin\\SaaSLabsBegin.sln Build the solution. You should get no build errors.","title":"Exercise: Compile the Visual Studio Solution"},{"location":"saas/labs/lab2-create-landing-page/#exercise-creating-a-single-tenant-application-registrations","text":"In this exercise, you will create an app registration in the Azure portal. It will be single-tenant and used to connect to the SaaS API.","title":"Exercise: Creating a Single-Tenant Application Registrations"},{"location":"saas/labs/lab2-create-landing-page/#create-a-single-tenant-app-registration","text":"Log in to the Azure portal. In the top-of-center command window in the portal, type \"app reg\" and select the item \"App registrations\" that appears. You will see a list of current application registrations. At the top of the page, click the + New registration link. You are taken to the Register an application page . For the purposes of this lab, use saas-workshop-single-tenant as the name of this app registration. At the bottom of the page, click the Register button.","title":"Create a single-tenant App Registration"},{"location":"saas/labs/lab2-create-landing-page/#add-a-secret","text":"Now you will add a secret to the app registration. Make sure to copy and paste the secret value somewhere you can access it later. Click into the saas-workshop-single-tenant application registration. In the left-hand menu, find the Manage menu and click the Certificates and secrets link. Create a new client secret. Give it a description. Choose an expiration date. The 6-month default should be fine. Copy the Value of the secret and paste it somewhere you can easily access it later.","title":"Add a secret"},{"location":"saas/labs/lab2-create-landing-page/#exercise-creating-a-multi-tenant-app-registration","text":"In this exercise, you will create a multi-tenant app registration in the Azure portal to authenticate users coming to your landing page. Create an app registration. For the purposes of this lab, use saas-workshop-multi-tenant as the name of this app registration. Under Supported account types , select the option: Accounts in any organizational directory (Any Azure AD directory - Multitenant) . At the bottom of the page, click the Register button.","title":"Exercise: Creating a multi-tenant App Registration"},{"location":"saas/labs/lab2-create-landing-page/#add-a-platform-to-the-multi-tenant-app-registration","text":"In the left-hand menu under the Overview menu item, click the Quickstart link. Find the Web application section and click the Start button. Click ASP.NET Core . On the resulting Quickstart page, click the Make this change for me button. Under the Configuring your application registration , click the Make updates button. In the left-hand menu under the Manage section, click the Authentication link. Here you can see that two URLS have been added to the Redirect URIs section for you. These allow running your code in debug mode using the default debugger ports. You will add your actual landing page URLs here later.","title":"Add a platform to the multi-tenant app registration"},{"location":"saas/labs/lab2-create-landing-page/#create-a-client-secret","text":"Create a client secret for this app registration. Copy the Value of the secret and paste it somewhere you can easily access it later.","title":"Create a client secret"},{"location":"saas/labs/lab2-create-landing-page/#exercise-appsettingsjson","text":"The appsettings.json file in the LandingPage project must be filled out before publishing the application. That's what you'll do in this section.","title":"Exercise: appsettings.json"},{"location":"saas/labs/lab2-create-landing-page/#values-from-the-saas-workshop-multi-tenant-app-registration","text":"All changes in this section occur under the AzureAD section of the appsettings.json file. In the Landing Page project, open the appsettings.json file. In the Azure portal, click the Azure Active Directory button in the left-hand menu. On the overview page in the Basic information section, find the the Primary domain and use it to replace DOMAIN_NAME in appsettings.json . In the left-hand menu under the Manage menu, click the App registrations link. Click the saas-workshop-multi-tenant app registration. In the appsetting.json file, replace CLIENT_ID with the Application (client) ID from this screen. Replace CLIENT_SECRET with the client secret you noted earlier for the saas-workshop-multi-tenant app registration.","title":"Values from the saas-workshop-multi-tenant app registration"},{"location":"saas/labs/lab2-create-landing-page/#values-from-the-saas-workshop-single-tenant-app-registration","text":"All changes in this section occur under the MarketplaceAPI section of the appsettings.json file. Go back to the list of App registrations. Click the saas-workshop-single-tenant app registration. In the appsetting.json file, replace CLIENT_ID with the Application (client) ID from this screen. In the appsetting.json file, replace TENANT_ID with the Directory (tenant) ID from this screen. In the appsetting.json file, replace CLIENT_SECRET with the client secret value you stored earlier. Congratulations, your LandingPage project is ready to publish!","title":"Values from the saas-workshop-single-tenant app registration"},{"location":"saas/labs/lab2-create-landing-page/#publishing-your-landing-page","text":"First you must create a publish profile file that will hold the information about your project to publish. Also, you must create an App Service Plan to host your website.","title":"Publishing your landing page"},{"location":"saas/labs/lab2-create-landing-page/#creating-your-publish-profile","text":"In the Solution Explorer of Visual Studio, right click the LandingPage project and select Publish . The Publish dialog appears. Select Azure as your publish target and click the Next button. Select Azure App Service (Windows) and click the Next button. You are now on the App Service tab. You may now need to sign in to Visual Studio with your Azure credentials. Choose the correct subscription from the list of subscriptions. To the far right of the words App Service Instances , click the green + (plus) button to create an App Service. The App Service dialog opens. Name the App Service SaaSWorkshopLandingPage with a number on the end to make it unique. Choose saas-workshop for the resource group. Create a new Hosting Plan and name it SaaSWorkshopAppServicePlan . Click the Create button at the bottom of the screen. After clicking the Create button at the bottom of the page it may take a moment for the Hosting Plan and App Service to be created. After the App Service is created, you will be back at the Publish dialog. Select your new App Service instance and click the Next button. For Publish type, select Publish (generate pubxmlfile) . Click the Finish button at the bottom of the dialog. You now have a publish profile that can be used to publish your application.","title":"Creating your publish profile"},{"location":"saas/labs/lab2-create-landing-page/#publishing-the-landing-page","text":"Near the top-right of the Publish dialog click the Publish button. This deploys your application. You can watch the publish process in the Output window at the bottom of the screen. The page will launch, but shows an error message. You aren't quite done configuring your landing page application.","title":"Publishing the landing page"},{"location":"saas/labs/lab2-create-landing-page/#registering-your-landing-page","text":"In the command bar at the top of the Azure portal, search for and select App Services . Click on the App Service you just created, SaaSWorkshopLandingPage . On the overview screen in Visual Studio, the URL for the site should be in the Hosting section. Copy it into your paste buffer. In the command bar at the top of the Azure portal, search for and select App registrations . Click on the saas-workshop-multi-tenant app registration. In the left-hand menu click the Authentication link. In the Web > Redirect URIs section, click Add URI and paste in your Landing Page URL. Paste it in again on another line, this time adding a suffix of /signin-oidc so that your URI looks something like this. https://*.azurewebsites.net/signin-oidc Click the Save button at the top of the screen.","title":"Registering your landing page"},{"location":"saas/labs/lab2-create-landing-page/#exercise-browse-to-your-landing-page","text":"Using the App Service URL to you created, https://<prefix>.azurewebsites.net , browse to that web page. Authenticate when prompted. You should see a message that reads, \" Token URL parameter cannot be empty .\" This is good! You are seeing this message because you aren't coming to the landing page through the Azure portal and no marketplace purchase token is being passed. To finish your configuration, we need to configure Partner Center to be aware of the landing page.","title":"Exercise: Browse to your landing page"},{"location":"saas/labs/lab2-create-landing-page/#exercise-update-your-offer-in-partner-center-and-publish-it","text":"Now that you have deployed your application, you can configure the Technical configuration section of Partner Center. Open your offer in Partner Center. Navigate to the Technical configuration tab.","title":"Exercise: Update Your Offer in Partner Center and Publish It"},{"location":"saas/labs/lab2-create-landing-page/#technical-configuration","text":"For Landing page URL , enter the URL of your new landing page. For Connection webhook , enter the URL of your new landing page. This is not the correct value for the webhook, but we haven't published a webhook yet and this will act as a placeholder for now. Enter the Azure Active Directory tenant ID you've deployed your landing page to. For Azure Active Directory application ID , enter the Application (client) ID of the saas-workshop-single-tenant App registration. Click the Save draft button. Click the Review and publish button. The Status of all sections in your offer should be green. Click the Publish button at the bottom of the screen. You will be directed to the top of the Offer overview, where you may watch the publication process as it occurs. You must refresh the page to see status updates. You only want to publish as far as the Publisher signoff section. When the test links appear under that section, DO NOT press the Go Live button. You will need to hit refresh for awhile as your offer goes through the publish stages.","title":"Technical configuration"},{"location":"saas/labs/lab2-create-landing-page/#publishing-time","text":"This section exists to let you know that it will take some time before your offer is finished publishing. This is the end of the lab for now as it will take some time for the offer to complete publishing to the Publisher signoff stage. To check your offers' publication status, go to the offer's Overview page. Look for links under the Publisher signoff section as shown below. Refresh the Overview page to get updates on your offer during the publication process. Note: If you are in a live workshop event, please raise your hand in Microsoft Teams to indicate you are done with the lab to this point. You will be coming back to finish the rest of Lab 2 later in the workshop.","title":"Publishing Time"},{"location":"saas/labs/lab2-create-landing-page/#exercise-buy-your-offer-and-check-your-landing-page","text":"In Partner Center, after the offer is in Publisher preview stage, you may subscribe to it. After the initial purchase, you will then be routed to the landing page for the offer.","title":"Exercise: Buy Your Offer and Check Your Landing Page"},{"location":"saas/labs/lab2-create-landing-page/#subscribing-to-your-offer","text":"Once the Publisher signoff section has links under it, still DO NOT press the Go live button. Instead, this state is where you will test the purchase and functionality of your SaaS application. Under the Publisher signoff section of the Offer overview page, click the Azure portal preview link. If you receive the message, \"Could not create the marketplace item\" or a \"404\" message, wait another several minutes and try again. The offer is simply still being created. Preview creation can take up to 45 minutes in some cases.","title":"Subscribing to your offer"},{"location":"saas/labs/lab2-create-landing-page/#purchasing-the-saas-offer","text":"Once you can click the Azure portal preview link in Partner Center, do so. You will see a form to fill out to purchase your SaaS Offer. Move on to the next section. You are now acting in the role of the customer. Click Get it Now . On the next screen you can fill it out and subscribe to the subscription you are making. For the resource group, create a new one named saas-workshop-purchases . Give your SaaS offer a name. Consider SaaSWorkshop01 . Click the Review + subscribe button at the bottom of the page. Click the Subscribe button at the bottom of the page. Your subscription is being provisioned. Once it is complete, you will see a Configure account now button on the screen. Click the Configure account now button. You are taken to the landing page where you can see details about the subscription you are buying. Note the marketplace purchase token in the query string. Congratulations! You have finished this lab. If you are in a live class setting, please raise your hand in Microsoft Teams to indicate you are done with the lab.","title":"Purchasing the SaaS offer"},{"location":"saas/labs/lab3-install-pub-portal/","text":"Lab 3: Installing a Publisher Portal # This is a quick lab in which you will create one app registration and deploy a small website used by the publisher for activating customer subscriptions. After you have the new website installed, the customer can use their landing page to request subscription activation and use the publisher portal to activate the subscription. Exercise: Create an app registration # In this exercise, you will create a single-tenant app registration for the internal Publisher Portal application. This allows accounts you designate within your own tenant to access the application. Log in to the Azure portal. In the top-of-center command window in the portal, type \"app reg\" and select the item \"App registrations\" that appears. You will see a list of current app registrations. At the top of the page, click the + New registration link. You are taken to the Register an application page . Use saas-workshop-publisher as the name of this app registration. At the bottom of the page, click the Register button. Add a secret # Now you will add a secret to the app registration. Make sure to copy and paste the secret value somewhere you can access it later. Click into the saas-workshop-publisher application registration. In the left-hand menu, find the Manage menu and click the Certificates and secrets link. Create a new client secret. Give it a description. Choose an expiration date. The 6-month default should be fine. Copy the Value of the secret and paste it somewhere you can easily access it later. Exercise: Configure appsettings.json # Now you configure the appsettings.json file for the Publisher Portal application so you can publish it. AzureAD section # In Visual Studio, open the appsetting.json file in the PublisherPortal project. Replace YOUR_DOMAIN with the same value you use in the appsettings.json file for the LandingPage project. Replace TENANT_ID with the Tenant ID of the tenant you are working in. To find the Tenant ID, do the following. Type Tenant into the command bar at the top of the Azure portal and select Tenant properties . Find the Tenant ID field and copy the value into the appsettings.json file. Replace CLIENT_ID with the Application (client) ID of the app registration you created in the above exercise. Replace CLIENT_SECRET with the secret you created in the above exercise. MarketplaceApi section # For the MarketplaceApi section, you may copy and paste the section from the LandingPage project's appsettings.json file. It is an exact copy. Exercise: Create an App Service and publish profile for the Publisher Portal application # In this section, you'll create an App Service for your new portal so you can publish it in the next step. Right click the project in Visual Studio and select Publish . Select Azure as your target and then click the Next button. Select Azure App Service (Windows) and then click the Next button. Click the green + button to create a new App Service and the App Service creation dialog appears. Enter SaaSWorkshopPublisherPortal with a number suffix as the name of the app service. Set the Resource Group to saas-workshop . Set the App service plan to the one you created earlier, likely named SaaSWorkshopAppServicePlan . Click the Create button to create the App Service and be taken back to the Publish dialog. Select your new App Service instance. Click the Next button. Select the Publish option to create a publish profile. Click the Finish button. Exercise: Publish the Publisher Portal application # Now that you are back to the publish dialog, just click the Publish button in the upper-right of the page to publish your website. This may take a few moments for the site to publish. You can monitor publish progress in Visual Studio's output window. The page will launch, but shows an error message. You aren't quite done configuring the publisher portal application. Update the application registration # In the command bar at the top of the Azure portal, search for and select App Services . Click on the App Service you've just created, SaaSWorkshopPublisherPortal with a number suffix. On the overview screen in Visual Studio, the URL for the site should be in the Hosting section. Copy it into your paste buffer. In the command bar at the top of the Azure portal, search for and select App registrations . Click on the saas-workshop-publisher app registration. In the left-hand menu click the Authentication link. Click on Add a platform under Platform configurations . Select Web tile under Configure platforms . Paste in your publisher portal application URL under Redirect URIs and click Configure . In the Web > Redirect URIs section, click Add URI . Paste your publisher portal application URL in again on another line, this time adding a suffix of /signin-oidc so that your URI looks something like this. https://*.azurewebsites.net/signin-oidc Click the Save button at the top of the screen. Using the App Service URL https://<prefix>.azurewebsites.net , browse to that web page. After authenticating you will see all the subscriptions to your offers. If you completed Lab 2, there should be at least one purchased subscription. If you haven't completed Lab 2 by subscribing to your offer, please go do so now. Exercise: As a customer, request subscription activation # This exercise puts you in the place of the customer, and you will request your subscription be activated by the publisher. In the command text box at the top of the Azure portal, type \"SaaS\" and select SaaS from the dropdown. This takes you to the SaaS management page where you can monitor and manage all your SaaS offers. Click the SaaS offer you subscribed to in Lab 2. Note that it is the Pending Configuration state. The publisher has not provisioned your account yet. Click the Configure account now button. This takes you to the offer's landing page. Under the Available Customer Actions section, click the link for Notify publisher to activate account . This emulates sending a notice to your publisher that you want to activate your subscription. Exercise: As the publisher, activate the customer's subscription # This exercise puts you back in the role of the publisher, and you will activate the customer's subscription. Open the publisher portal website. Find and click on the subscription that needs to be activated. Notice the SaasSubscriptionStatus field is in the PendingFulfillmentStart state. Scroll down to the Publisher Actions section. Click the Activate this subscription link. Notice the status immediately changes to Subscribed . Exercise: See the activation on the client side # Go back to the landing page for the offer and note the Subscription State now equals Subscribed . Go back to the SaaS management screen and find your subscription. It likely still reads Pending configuration . This page caches the state of the subscriptions and updates every few minutes. Try refreshing the page occasionally until it reads Subscribed . Congratulations! You have finished this lab. If you are in a live class setting, please raise your hand in Microsoft Teams to indicate you are done with the lab.","title":"Lab 3: Installing a Publisher Portal"},{"location":"saas/labs/lab3-install-pub-portal/#lab-3-installing-a-publisher-portal","text":"This is a quick lab in which you will create one app registration and deploy a small website used by the publisher for activating customer subscriptions. After you have the new website installed, the customer can use their landing page to request subscription activation and use the publisher portal to activate the subscription.","title":"Lab 3: Installing a Publisher Portal"},{"location":"saas/labs/lab3-install-pub-portal/#exercise-create-an-app-registration","text":"In this exercise, you will create a single-tenant app registration for the internal Publisher Portal application. This allows accounts you designate within your own tenant to access the application. Log in to the Azure portal. In the top-of-center command window in the portal, type \"app reg\" and select the item \"App registrations\" that appears. You will see a list of current app registrations. At the top of the page, click the + New registration link. You are taken to the Register an application page . Use saas-workshop-publisher as the name of this app registration. At the bottom of the page, click the Register button.","title":"Exercise: Create an app registration"},{"location":"saas/labs/lab3-install-pub-portal/#add-a-secret","text":"Now you will add a secret to the app registration. Make sure to copy and paste the secret value somewhere you can access it later. Click into the saas-workshop-publisher application registration. In the left-hand menu, find the Manage menu and click the Certificates and secrets link. Create a new client secret. Give it a description. Choose an expiration date. The 6-month default should be fine. Copy the Value of the secret and paste it somewhere you can easily access it later.","title":"Add a secret"},{"location":"saas/labs/lab3-install-pub-portal/#exercise-configure-appsettingsjson","text":"Now you configure the appsettings.json file for the Publisher Portal application so you can publish it.","title":"Exercise: Configure appsettings.json"},{"location":"saas/labs/lab3-install-pub-portal/#azuread-section","text":"In Visual Studio, open the appsetting.json file in the PublisherPortal project. Replace YOUR_DOMAIN with the same value you use in the appsettings.json file for the LandingPage project. Replace TENANT_ID with the Tenant ID of the tenant you are working in. To find the Tenant ID, do the following. Type Tenant into the command bar at the top of the Azure portal and select Tenant properties . Find the Tenant ID field and copy the value into the appsettings.json file. Replace CLIENT_ID with the Application (client) ID of the app registration you created in the above exercise. Replace CLIENT_SECRET with the secret you created in the above exercise.","title":"AzureAD section"},{"location":"saas/labs/lab3-install-pub-portal/#marketplaceapi-section","text":"For the MarketplaceApi section, you may copy and paste the section from the LandingPage project's appsettings.json file. It is an exact copy.","title":"MarketplaceApi section"},{"location":"saas/labs/lab3-install-pub-portal/#exercise-create-an-app-service-and-publish-profile-for-the-publisher-portal-application","text":"In this section, you'll create an App Service for your new portal so you can publish it in the next step. Right click the project in Visual Studio and select Publish . Select Azure as your target and then click the Next button. Select Azure App Service (Windows) and then click the Next button. Click the green + button to create a new App Service and the App Service creation dialog appears. Enter SaaSWorkshopPublisherPortal with a number suffix as the name of the app service. Set the Resource Group to saas-workshop . Set the App service plan to the one you created earlier, likely named SaaSWorkshopAppServicePlan . Click the Create button to create the App Service and be taken back to the Publish dialog. Select your new App Service instance. Click the Next button. Select the Publish option to create a publish profile. Click the Finish button.","title":"Exercise: Create an App Service and publish profile for the Publisher Portal application"},{"location":"saas/labs/lab3-install-pub-portal/#exercise-publish-the-publisher-portal-application","text":"Now that you are back to the publish dialog, just click the Publish button in the upper-right of the page to publish your website. This may take a few moments for the site to publish. You can monitor publish progress in Visual Studio's output window. The page will launch, but shows an error message. You aren't quite done configuring the publisher portal application.","title":"Exercise: Publish the Publisher Portal application"},{"location":"saas/labs/lab3-install-pub-portal/#update-the-application-registration","text":"In the command bar at the top of the Azure portal, search for and select App Services . Click on the App Service you've just created, SaaSWorkshopPublisherPortal with a number suffix. On the overview screen in Visual Studio, the URL for the site should be in the Hosting section. Copy it into your paste buffer. In the command bar at the top of the Azure portal, search for and select App registrations . Click on the saas-workshop-publisher app registration. In the left-hand menu click the Authentication link. Click on Add a platform under Platform configurations . Select Web tile under Configure platforms . Paste in your publisher portal application URL under Redirect URIs and click Configure . In the Web > Redirect URIs section, click Add URI . Paste your publisher portal application URL in again on another line, this time adding a suffix of /signin-oidc so that your URI looks something like this. https://*.azurewebsites.net/signin-oidc Click the Save button at the top of the screen. Using the App Service URL https://<prefix>.azurewebsites.net , browse to that web page. After authenticating you will see all the subscriptions to your offers. If you completed Lab 2, there should be at least one purchased subscription. If you haven't completed Lab 2 by subscribing to your offer, please go do so now.","title":"Update the application registration"},{"location":"saas/labs/lab3-install-pub-portal/#exercise-as-a-customer-request-subscription-activation","text":"This exercise puts you in the place of the customer, and you will request your subscription be activated by the publisher. In the command text box at the top of the Azure portal, type \"SaaS\" and select SaaS from the dropdown. This takes you to the SaaS management page where you can monitor and manage all your SaaS offers. Click the SaaS offer you subscribed to in Lab 2. Note that it is the Pending Configuration state. The publisher has not provisioned your account yet. Click the Configure account now button. This takes you to the offer's landing page. Under the Available Customer Actions section, click the link for Notify publisher to activate account . This emulates sending a notice to your publisher that you want to activate your subscription.","title":"Exercise: As a customer, request subscription activation"},{"location":"saas/labs/lab3-install-pub-portal/#exercise-as-the-publisher-activate-the-customers-subscription","text":"This exercise puts you back in the role of the publisher, and you will activate the customer's subscription. Open the publisher portal website. Find and click on the subscription that needs to be activated. Notice the SaasSubscriptionStatus field is in the PendingFulfillmentStart state. Scroll down to the Publisher Actions section. Click the Activate this subscription link. Notice the status immediately changes to Subscribed .","title":"Exercise: As the publisher, activate the customer's subscription"},{"location":"saas/labs/lab3-install-pub-portal/#exercise-see-the-activation-on-the-client-side","text":"Go back to the landing page for the offer and note the Subscription State now equals Subscribed . Go back to the SaaS management screen and find your subscription. It likely still reads Pending configuration . This page caches the state of the subscriptions and updates every few minutes. Try refreshing the page occasionally until it reads Subscribed . Congratulations! You have finished this lab. If you are in a live class setting, please raise your hand in Microsoft Teams to indicate you are done with the lab.","title":"Exercise: See the activation on the client side"},{"location":"saas/labs/lab4-create-webhook/","text":"Lab 4: Deploying and Monitoring a Webhook # In this lab, you will build on what you accomplished in previous labs. You will create a SaaS offer webhook and integrate it with your Partner Center SaaS offer configuration, enabling your webhook to respond to subscription change events. Completion of this lab is required for the following labs in the series to work properly. The webhook in your Visual Studio solution is an Azure Function. There is no need to change the code in the webhook function at this time. Looking through the webhook code you'll find that it simply prints the REST payload to the log. You will monitor this log to see the payload when the webhook is called. Exercise: Create a Publish Profile # In Visual Studio, right click the SaaSFunctions project and select Publish . For the target, select Azure and click Next . Select Azure Function App (Windows) and click Next . Select the right subscription in the dropdown. To publish, you will need to create a new Function App. Above and to the right of the Function Apps tree at the bottom of the dialog, click the + button to add a new Function App. In the Name field, enter SaaSWorkshopFunction followed by a number to make it a unique name. Select the right subscription. Select the `saas-workshop`` Resource Group. Stick with Plan Type: Consumption. Function Apps require the use of a Data Storage account. To the right of the Azure Storage field is a New... link. Click it. On the Azure storage dialog, click the OK button. Back on the Function App (windows) dialog, click the Create button. The App Service deployment will run for a little while. On the Publish dialog, click the Next button. On Select the Publish option and click the Finish button. You have create an App Service, App Service Plan, storage account, and a publish profile. Now you will use the purlish profile to publish the function application itself. Exercise: Publish the Function App # At the top right of the publish screen, click the Publish button. It will take a moment to publish the function application. You can watch progress in Visual Studio's Output window. Exercise: Getting the webhook URI # You need the webhook URI to add to your Technical Configuration in Partner Center. The Function Application contains only one function and you need the URI of that one function. Open the Azure portal. Find and click on the Azure function in the Azure portal. It is inside your saas-workshop resource group. In the left-hand menu find the Functions link and click it. You see a single function named Webhook . Click that function. Near the top of the screen, click Get Function URL and you are presented with a dialog. Copy the full path to this function into your copy/paste buffer. Exercise: Publishing the webhook in Partner Center # Now you will re-publish your offer, this time with a valid webhook URL. In Partner Center, on the Technical configuration tab, find the Connection webhook field. Replace the previous value for the Connection webhook with the URL of the function application Click Save Draft . Review and publish your offer. It should pass validation (all sections are green) so you can publish. Click the Publish button. The offer must be in the Partner Center's preview stage for the final exercise of this lab to work. At no point should you click the Go live button. Publication Time # This is where you must wait for your offer to be re-published. Of course, there is a waiting period for the offer to be re-published. The good news is that it is usually much faster after the first time. Note: If you are in a live workshop event, please raise your hand in Microsoft Teams to indicate you are done with the lab to this point. You will be coming back to finish the rest of the lab later, perhaps on your own after the workshop. Exercise: Preparing to monitor the function's log # To see the function's output, we will monitor its log on Azure to see the output it will print to the log. Application Insights must be enabled on the function to support this. Open Azure portal and find the Function App. Click it. Scroll down in the left-hand menu until you find the Monitoring section. In the Monitoring section, find the Log stream link and click it. You are presented with a message to configure Application Insights. Click the Configure button. Under Create new resource enter SaaSWorkshopFunction-ai . Choose an appropriate location. Click the OK button at the bottom of the screen. Application insights will install. In the upper breadcrumb navigation, click the function SaaSWorkshopFunction which takes you back to the Log monitoring screen. This should open what looks like a terminal window and you will see \"Connected!\" at the top of the window. You are now watching the function application's log. There will be occasional keep-alive calls to the function that can be ignored. You can click the Clear button at the top of the screen to clear the text at ay time. Exercise: Invoking the Webhook # In a previous lab, you purchased a SaaS offer. That offer is in the Subscribed state, so the customer can unsubscribe from the offer. That's what you will do to invoke the webhook and see it's output. Unsubscribe from the offer # Open a new tab to the Azure portal. In the command bar at the top type SaaS and click the SaaS service that is appears. Find the offer you purchased earlier and click it. At the top of the page, click and confirm Cancel subscription . Fill in the required information to unsubscribe from the offer. Click the Cancel subscription button. You will get a message in the upper right of your window stating that cancellation of the subscription is in progress. See the Unsubscribe event # Go back to your function's Log tab. You will likely have time to hit the Clear button to clear the screen. It can take a few minutes for the Unsubscribe event to invoke the webhook. Don't forget that your offer must be in the Publisher signoff stage for the webhook to be fully published so it will be invoked. Just wait for the Unsubscribe event to show up in the Log window and print the payload to the screen. Exercise: Running the entire SaaS subscription workflow # There is no need to do this to consider yourself done with this lab, but you now have all the elements in place needed to manage a SaaS offer subscription purchase. To exercise all steps of the process do the following. Purchase the SaaS offer either through Partner Center or as a private offer in the Azure Portal. Go to the landing page to activate the subscription. Use the Publisher Portal to activate the subscription, changing its state to Subscribed . Cancel the subscription from the Subscribed subscription through the SaaS management tool in the Azure portal. Watch the webhook function get called with the full payload of the unsubscribed event. Congratulations! You have finished this lab. If you are in a live class setting, please raise your hand in Microsoft Teams to indicate you are done with the lab.","title":"Lab 4: Deploying and Monitoring a Webhook"},{"location":"saas/labs/lab4-create-webhook/#lab-4-deploying-and-monitoring-a-webhook","text":"In this lab, you will build on what you accomplished in previous labs. You will create a SaaS offer webhook and integrate it with your Partner Center SaaS offer configuration, enabling your webhook to respond to subscription change events. Completion of this lab is required for the following labs in the series to work properly. The webhook in your Visual Studio solution is an Azure Function. There is no need to change the code in the webhook function at this time. Looking through the webhook code you'll find that it simply prints the REST payload to the log. You will monitor this log to see the payload when the webhook is called.","title":"Lab 4: Deploying and Monitoring a Webhook"},{"location":"saas/labs/lab4-create-webhook/#exercise-create-a-publish-profile","text":"In Visual Studio, right click the SaaSFunctions project and select Publish . For the target, select Azure and click Next . Select Azure Function App (Windows) and click Next . Select the right subscription in the dropdown. To publish, you will need to create a new Function App. Above and to the right of the Function Apps tree at the bottom of the dialog, click the + button to add a new Function App. In the Name field, enter SaaSWorkshopFunction followed by a number to make it a unique name. Select the right subscription. Select the `saas-workshop`` Resource Group. Stick with Plan Type: Consumption. Function Apps require the use of a Data Storage account. To the right of the Azure Storage field is a New... link. Click it. On the Azure storage dialog, click the OK button. Back on the Function App (windows) dialog, click the Create button. The App Service deployment will run for a little while. On the Publish dialog, click the Next button. On Select the Publish option and click the Finish button. You have create an App Service, App Service Plan, storage account, and a publish profile. Now you will use the purlish profile to publish the function application itself.","title":"Exercise: Create a Publish Profile"},{"location":"saas/labs/lab4-create-webhook/#exercise-publish-the-function-app","text":"At the top right of the publish screen, click the Publish button. It will take a moment to publish the function application. You can watch progress in Visual Studio's Output window.","title":"Exercise: Publish the Function App"},{"location":"saas/labs/lab4-create-webhook/#exercise-getting-the-webhook-uri","text":"You need the webhook URI to add to your Technical Configuration in Partner Center. The Function Application contains only one function and you need the URI of that one function. Open the Azure portal. Find and click on the Azure function in the Azure portal. It is inside your saas-workshop resource group. In the left-hand menu find the Functions link and click it. You see a single function named Webhook . Click that function. Near the top of the screen, click Get Function URL and you are presented with a dialog. Copy the full path to this function into your copy/paste buffer.","title":"Exercise: Getting the webhook URI"},{"location":"saas/labs/lab4-create-webhook/#exercise-publishing-the-webhook-in-partner-center","text":"Now you will re-publish your offer, this time with a valid webhook URL. In Partner Center, on the Technical configuration tab, find the Connection webhook field. Replace the previous value for the Connection webhook with the URL of the function application Click Save Draft . Review and publish your offer. It should pass validation (all sections are green) so you can publish. Click the Publish button. The offer must be in the Partner Center's preview stage for the final exercise of this lab to work. At no point should you click the Go live button.","title":"Exercise: Publishing the webhook in Partner Center"},{"location":"saas/labs/lab4-create-webhook/#publication-time","text":"This is where you must wait for your offer to be re-published. Of course, there is a waiting period for the offer to be re-published. The good news is that it is usually much faster after the first time. Note: If you are in a live workshop event, please raise your hand in Microsoft Teams to indicate you are done with the lab to this point. You will be coming back to finish the rest of the lab later, perhaps on your own after the workshop.","title":"Publication Time"},{"location":"saas/labs/lab4-create-webhook/#exercise-preparing-to-monitor-the-functions-log","text":"To see the function's output, we will monitor its log on Azure to see the output it will print to the log. Application Insights must be enabled on the function to support this. Open Azure portal and find the Function App. Click it. Scroll down in the left-hand menu until you find the Monitoring section. In the Monitoring section, find the Log stream link and click it. You are presented with a message to configure Application Insights. Click the Configure button. Under Create new resource enter SaaSWorkshopFunction-ai . Choose an appropriate location. Click the OK button at the bottom of the screen. Application insights will install. In the upper breadcrumb navigation, click the function SaaSWorkshopFunction which takes you back to the Log monitoring screen. This should open what looks like a terminal window and you will see \"Connected!\" at the top of the window. You are now watching the function application's log. There will be occasional keep-alive calls to the function that can be ignored. You can click the Clear button at the top of the screen to clear the text at ay time.","title":"Exercise: Preparing to monitor the function's log"},{"location":"saas/labs/lab4-create-webhook/#exercise-invoking-the-webhook","text":"In a previous lab, you purchased a SaaS offer. That offer is in the Subscribed state, so the customer can unsubscribe from the offer. That's what you will do to invoke the webhook and see it's output.","title":"Exercise: Invoking the Webhook"},{"location":"saas/labs/lab4-create-webhook/#unsubscribe-from-the-offer","text":"Open a new tab to the Azure portal. In the command bar at the top type SaaS and click the SaaS service that is appears. Find the offer you purchased earlier and click it. At the top of the page, click and confirm Cancel subscription . Fill in the required information to unsubscribe from the offer. Click the Cancel subscription button. You will get a message in the upper right of your window stating that cancellation of the subscription is in progress.","title":"Unsubscribe from the offer"},{"location":"saas/labs/lab4-create-webhook/#see-the-unsubscribe-event","text":"Go back to your function's Log tab. You will likely have time to hit the Clear button to clear the screen. It can take a few minutes for the Unsubscribe event to invoke the webhook. Don't forget that your offer must be in the Publisher signoff stage for the webhook to be fully published so it will be invoked. Just wait for the Unsubscribe event to show up in the Log window and print the payload to the screen.","title":"See the Unsubscribe event"},{"location":"saas/labs/lab4-create-webhook/#exercise-running-the-entire-saas-subscription-workflow","text":"There is no need to do this to consider yourself done with this lab, but you now have all the elements in place needed to manage a SaaS offer subscription purchase. To exercise all steps of the process do the following. Purchase the SaaS offer either through Partner Center or as a private offer in the Azure Portal. Go to the landing page to activate the subscription. Use the Publisher Portal to activate the subscription, changing its state to Subscribed . Cancel the subscription from the Subscribed subscription through the SaaS management tool in the Azure portal. Watch the webhook function get called with the full payload of the unsubscribed event. Congratulations! You have finished this lab. If you are in a live class setting, please raise your hand in Microsoft Teams to indicate you are done with the lab.","title":"Exercise: Running the entire SaaS subscription workflow"},{"location":"saas/labs/lab5-implementing-meter-billing/","text":"Lab 5: Implementing Meter billing using postman # In this lab, you will build on what you have accomplished in previous labs. You will trigger a meter usage event using Postman tool. You can use any API testing tool but for this lab we will be using Postman. Prerequisites # Postman tool Published a SaaS offer with a customer meter dimension on a plan to preview stage. App registration information which is used in the technical configuration of the offer Exercise: Getting the access token # Open Postman tool Click + new tab Change the request type from GET to POST Enter the below URL into Enter request URL textbox https://login.microsoftonline.com/{{tenantId}}/oauth2/v2.0/token (replace the {{tenantId}} with saas-workshop-single-tenant tenant/directory Id) For Body, click on x-www-form-urlencoded radiobutton and enter the below key value pairs KEY VALUE grant_type client_credentials client_id {{clientId}} (replace the {{clientId}} with saas-workshop-single-tenant client/application Id) client_secret {{clientSecret}} (replace the {{clientSecret}} with saas-workshop-single-tenant secret) resource 20e940b3-4c77-4b0b-9a53-9e16a1b010a7 Click Send You should see a json response with access token like below. { \"token_type\": \"Bearer\", \"expires_in\": \"3599\", \"ext_expires_in\": \"3599\", \"expires_on\": \"1645893398\", \"not_before\": \"1645889498\", \"resource\": \"20e940b3-4c77-4b0b-9a53-9e16a1b010a7\", \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ik1yNS1BVWliZkJpaTdOZDFqQmViYXhib1hXMCIsImtpZCI6Ik1yNS1BVWliZkJpaTdOZDFqQmViYXhib1hXMCJ9.eyJhdWQiOiI2MmQ5NGY2Yy1kNTk5LTQ4OWItYTc5Ny0zZTEwZTQyZmJlMjIiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9hNDk5NDQ0YS0zMTBlLTRmOTAtOTI4Yy1kNzA2MDYzYmYzZTkvIiwiaWF0IjoxNjQ1ODg5NDk4LCJuYmYiOjE2NDU4ODk0OTgsImV4cCI6MTY0NTg5MzM5OCwiYWlvIjoiRTJaZ1lHaVFuOWgwVm5sM3BjKzg3R016SFN0MUFBPT0iLCJhcHBpZCI6IjhjYzMyZTU1LWI5OWYtNDY3YS1iMDM0LTMxMjgzZmJjODY2NyIsImFwcGlkYWNyI\" } Great! Copy the value of the access_token from the response as we will be using this in our next exercise. Exercise: Invoking the Meter billing API usage event # On the Postman tool Click + new tab Change the request type from GET to POST Enter the below URL into Enter request URL textbox https://marketplaceapi.microsoft.com/api/usageEvent?api-version=2018-08-31 For Headers, enter the below key value pairs KEY VALUE Content-Type application/json authorization {{bearerToken}} (replace the {{bearerToken}} with \"Bearer \" + access_token value copied from the first exercise) For Body, click on raw radiobutton and enter the below json { \"resourceId\": \"{{CustomerSaaSSubscriptionId}}\", // Replace {{CustomerSaaSSubscriptionId}} with an active subscritpion Id from your [publisher portal](../lab3-install-pub-portal#exercise-as-a-customer-request-subscription-activation) which is subscribed to plan with dimension) \"quantity\": 1.0, // quantity of the usage you want to bill aganist this customer , we can leave it 1 for testing \"dimension\": \"persmsId\", // DimensionId from the Offer plan created in [lab1](../lab1-create-pc-offer#for-marketplace-metering-service-dimensions) \"effectiveStartTime\": \"{{eventtime}}\", // ( replace {{eventtime}} with a UTC time from now and until 24 hours back ex: '2022-02-26T17:17:31' ) \"planId\": \"gold-plan-id\" // PlanId from the Offer plan created in [lab1](../lab1-create-pc-offer#create-the-plan) } 1.Click Send 1. You should see the below response { \"usageEventId\": \"e91feebc-50dc-403b-a32b-93c24cc54ebb\", ***\"status\": \"Accepted\"***, \"messageTime\": \"2022-02-26T19:51:51.2516464Z\", \"resourceId\": \"7b853439-4fdf-4170-c542-f19217e11383\", \"resourceUri\": \"/subscriptions/bf7adf-hjhj7y-jhjkh887-khkjh/resourceGroups/sb-s/providers/Microsoft.SaaS/resources/saas\", \"quantity\": 1.0, \"dimension\": \"persmsId\", \"effectiveStartTime\": \"2022-02-26T17:17:31\", \"planId\": \"gold-plan-id\" } 1.This confirms a usage has been repoted to Microsoft to bill the customer aganist that feature usage. Congratulations! You have finished this lab. If you are in a live class setting, please raise your hand in Microsoft Teams to indicate you are done with the lab.","title":"Lab 5: Implementing Meter billing using postman"},{"location":"saas/labs/lab5-implementing-meter-billing/#lab-5-implementing-meter-billing-using-postman","text":"In this lab, you will build on what you have accomplished in previous labs. You will trigger a meter usage event using Postman tool. You can use any API testing tool but for this lab we will be using Postman.","title":"Lab 5: Implementing Meter billing using postman"},{"location":"saas/labs/lab5-implementing-meter-billing/#prerequisites","text":"Postman tool Published a SaaS offer with a customer meter dimension on a plan to preview stage. App registration information which is used in the technical configuration of the offer","title":"Prerequisites"},{"location":"saas/labs/lab5-implementing-meter-billing/#exercise-getting-the-access-token","text":"Open Postman tool Click + new tab Change the request type from GET to POST Enter the below URL into Enter request URL textbox https://login.microsoftonline.com/{{tenantId}}/oauth2/v2.0/token (replace the {{tenantId}} with saas-workshop-single-tenant tenant/directory Id) For Body, click on x-www-form-urlencoded radiobutton and enter the below key value pairs KEY VALUE grant_type client_credentials client_id {{clientId}} (replace the {{clientId}} with saas-workshop-single-tenant client/application Id) client_secret {{clientSecret}} (replace the {{clientSecret}} with saas-workshop-single-tenant secret) resource 20e940b3-4c77-4b0b-9a53-9e16a1b010a7 Click Send You should see a json response with access token like below. { \"token_type\": \"Bearer\", \"expires_in\": \"3599\", \"ext_expires_in\": \"3599\", \"expires_on\": \"1645893398\", \"not_before\": \"1645889498\", \"resource\": \"20e940b3-4c77-4b0b-9a53-9e16a1b010a7\", \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ik1yNS1BVWliZkJpaTdOZDFqQmViYXhib1hXMCIsImtpZCI6Ik1yNS1BVWliZkJpaTdOZDFqQmViYXhib1hXMCJ9.eyJhdWQiOiI2MmQ5NGY2Yy1kNTk5LTQ4OWItYTc5Ny0zZTEwZTQyZmJlMjIiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC9hNDk5NDQ0YS0zMTBlLTRmOTAtOTI4Yy1kNzA2MDYzYmYzZTkvIiwiaWF0IjoxNjQ1ODg5NDk4LCJuYmYiOjE2NDU4ODk0OTgsImV4cCI6MTY0NTg5MzM5OCwiYWlvIjoiRTJaZ1lHaVFuOWgwVm5sM3BjKzg3R016SFN0MUFBPT0iLCJhcHBpZCI6IjhjYzMyZTU1LWI5OWYtNDY3YS1iMDM0LTMxMjgzZmJjODY2NyIsImFwcGlkYWNyI\" } Great! Copy the value of the access_token from the response as we will be using this in our next exercise.","title":"Exercise: Getting the access token"},{"location":"saas/labs/lab5-implementing-meter-billing/#exercise-invoking-the-meter-billing-api-usage-event","text":"On the Postman tool Click + new tab Change the request type from GET to POST Enter the below URL into Enter request URL textbox https://marketplaceapi.microsoft.com/api/usageEvent?api-version=2018-08-31 For Headers, enter the below key value pairs KEY VALUE Content-Type application/json authorization {{bearerToken}} (replace the {{bearerToken}} with \"Bearer \" + access_token value copied from the first exercise) For Body, click on raw radiobutton and enter the below json { \"resourceId\": \"{{CustomerSaaSSubscriptionId}}\", // Replace {{CustomerSaaSSubscriptionId}} with an active subscritpion Id from your [publisher portal](../lab3-install-pub-portal#exercise-as-a-customer-request-subscription-activation) which is subscribed to plan with dimension) \"quantity\": 1.0, // quantity of the usage you want to bill aganist this customer , we can leave it 1 for testing \"dimension\": \"persmsId\", // DimensionId from the Offer plan created in [lab1](../lab1-create-pc-offer#for-marketplace-metering-service-dimensions) \"effectiveStartTime\": \"{{eventtime}}\", // ( replace {{eventtime}} with a UTC time from now and until 24 hours back ex: '2022-02-26T17:17:31' ) \"planId\": \"gold-plan-id\" // PlanId from the Offer plan created in [lab1](../lab1-create-pc-offer#create-the-plan) } 1.Click Send 1. You should see the below response { \"usageEventId\": \"e91feebc-50dc-403b-a32b-93c24cc54ebb\", ***\"status\": \"Accepted\"***, \"messageTime\": \"2022-02-26T19:51:51.2516464Z\", \"resourceId\": \"7b853439-4fdf-4170-c542-f19217e11383\", \"resourceUri\": \"/subscriptions/bf7adf-hjhj7y-jhjkh887-khkjh/resourceGroups/sb-s/providers/Microsoft.SaaS/resources/saas\", \"quantity\": 1.0, \"dimension\": \"persmsId\", \"effectiveStartTime\": \"2022-02-26T17:17:31\", \"planId\": \"gold-plan-id\" } 1.This confirms a usage has been repoted to Microsoft to bill the customer aganist that feature usage. Congratulations! You have finished this lab. If you are in a live class setting, please raise your hand in Microsoft Teams to indicate you are done with the lab.","title":"Exercise: Invoking the Meter billing API usage event"},{"location":"saas-accelerator/","text":"This series of video modules and hands-on labs is designed to help you understand, install, use, and customize the SaaS Accelerator project. The SaaS Accelerator provides a fully functional community-led SaaS reference implementation for those interested in publishing transactable SaaS offers in Microsoft's marketplace in hours instead of days. Let us know what you need in this content library. This course is designed to help you speed your time to publish your SaaS offer to the Microsoft commercial marketplace using the SaaS Accelerator . Get your hands dirty with the hands-on labs . A SaaS Accelerator Hands-on Tour - The Basics # Video This introduction to the accelerator demonstrates the SaaS Accelerator's core capabilities showing why it may be a good choice for your marketplace SaaS offer. In three short demos, this video shows its fundamental capabilities. You'll see the landing page, the publisher's subscription management portal, and the customer's subscription management capabilities in action! SaaS Accelerator Architecture # Video | PDF This quick video covers the overall architecture of the SaaS Accelerator. The architecture is straightforward and is explained in plain language appropriate for those with any level of experience with Azure. Installing the SaaS Accelerator With the Install Script # Video | PDF Installing the SaaS Accelerator is simple. This video walks you through from beginning to end the steps necessary to get the SaaS Accelerator up and running. This video will get you up and running with the SaaS Accelerator in no time at all! You will need to copy and paste some PowerShell script from here . Invoking Metered Billing with the SaaS Accelerator # Video We look at the metered billing capabilities of the SaaS Accelerator for the Azure Marketplace. This video shows how to manually invoke metered billing events from the SaaS Accelerator without needing to integrate your solution with the SaaS Metering APIs. Custom Landing Page Fields with the SaaS Accelerator # Video In addition to showing your subscribers information about their subscription when they arrive at your landing page, you may also want to capture some information from them. This is possible using custom fields on the landing page and this short video shows you how to use them. Configuring Email in the SaaS Accelerator # Video You will likely want to receive email when a subscription changes state. For example, when a someone unsubscribes from your offer. This video shows how to configure the email setting within the SaaS Accelerator and get those notifications coming right to your inbox. Hands-on labs # The following hands-on labs build upon each other. Completing them will get a fully functional SaaS Accelerator offer published and working for a test environment. Prerequisites # Azure subscription that can create resources A Partner Center Account Labs # Preparing Partner Center Installing the Accelerator Using the Accelerator","title":"Mastering the SaaS Accelerator"},{"location":"saas-accelerator/#a-saas-accelerator-hands-on-tour-the-basics","text":"Video This introduction to the accelerator demonstrates the SaaS Accelerator's core capabilities showing why it may be a good choice for your marketplace SaaS offer. In three short demos, this video shows its fundamental capabilities. You'll see the landing page, the publisher's subscription management portal, and the customer's subscription management capabilities in action!","title":"A SaaS Accelerator Hands-on Tour - The Basics"},{"location":"saas-accelerator/#saas-accelerator-architecture","text":"Video | PDF This quick video covers the overall architecture of the SaaS Accelerator. The architecture is straightforward and is explained in plain language appropriate for those with any level of experience with Azure.","title":"SaaS Accelerator Architecture"},{"location":"saas-accelerator/#installing-the-saas-accelerator-with-the-install-script","text":"Video | PDF Installing the SaaS Accelerator is simple. This video walks you through from beginning to end the steps necessary to get the SaaS Accelerator up and running. This video will get you up and running with the SaaS Accelerator in no time at all! You will need to copy and paste some PowerShell script from here .","title":"Installing the SaaS Accelerator With the Install Script"},{"location":"saas-accelerator/#invoking-metered-billing-with-the-saas-accelerator","text":"Video We look at the metered billing capabilities of the SaaS Accelerator for the Azure Marketplace. This video shows how to manually invoke metered billing events from the SaaS Accelerator without needing to integrate your solution with the SaaS Metering APIs.","title":"Invoking Metered Billing with the SaaS Accelerator"},{"location":"saas-accelerator/#custom-landing-page-fields-with-the-saas-accelerator","text":"Video In addition to showing your subscribers information about their subscription when they arrive at your landing page, you may also want to capture some information from them. This is possible using custom fields on the landing page and this short video shows you how to use them.","title":"Custom Landing Page Fields with the SaaS Accelerator"},{"location":"saas-accelerator/#configuring-email-in-the-saas-accelerator","text":"Video You will likely want to receive email when a subscription changes state. For example, when a someone unsubscribes from your offer. This video shows how to configure the email setting within the SaaS Accelerator and get those notifications coming right to your inbox.","title":"Configuring Email in the SaaS Accelerator"},{"location":"saas-accelerator/#hands-on-labs","text":"The following hands-on labs build upon each other. Completing them will get a fully functional SaaS Accelerator offer published and working for a test environment.","title":"Hands-on labs"},{"location":"saas-accelerator/#prerequisites","text":"Azure subscription that can create resources A Partner Center Account","title":"Prerequisites"},{"location":"saas-accelerator/#labs","text":"Preparing Partner Center Installing the Accelerator Using the Accelerator","title":"Labs"},{"location":"saas-accelerator/labs/lab1-partner-center/","text":"Lab 1: Creating a SaaS Offer in Partner Center # In this lab you will use your Partner Center account to create a test SaaS offer with a single plan. This offer will be used for development and testing purposes. This lab will familiarize you with Partner Center and prepare an offer you will publish in the next lab. Completion of this lab is required for the following labs in the series to work properly. Exercise: Create a New SaaS Offer Create a new SaaS offer Offer setup Properties Offer listing Preview audience Technical configuration Plan overview Exercise: Create a Plan Create the plan Plan Listing Pricing and availability Exercise: Resell through CSPs Exercise: Review and Publish You will need the following to complete this lab. A Partner Center account An Azure account and access to the Azure portal Exercise: Create a New SaaS Offer # In this exercise, you will create a new SaaS offer in Partner Center and fill in the information needed to publish it. Create a new SaaS offer # From the Home page of Partner Center click the Commercial Marketplace button. Click the + New offer button and at the dropdown and select Software as a Service . Give your new offer an Offer ID and Offer alias . Although you are free to use whatever values you like, we will be using the following in this lab for reference. Offer ID: saas-accelerator Offer alias SaaS Accelerator Offer setup # Leave all information at the top of this page as is and scroll down to the Customer leads section of the page. Customer leads # Here, you will attach your offer to an Azure Data Storage table which will act as a connected Customer Relationship Management system (CRM) for your offer. Create the Azure Storage account # This is the first time you're using the Azure portal for this class. It is recommended that you install all the resources you'll create in this class into the same Resource Group, just to keep things tidy within your Azure subscription. Open a new tab for the Azure portal and log in. Create a Resource Group named saas-accelerator . Although you may use a different name, all labs will refer to the Resource Group with this name. In the saas-accelerator Resource Group, create a standard Azure Storage account. This will be your CRM database, so name it accordingly to distinguish it from future storage accounts that will be created in this Resource Group. Once the storage account is created, browse to the storage account's overview page. In the left-hand menu, find the Security + networking section. In that section, find and click on the Access keys link. At the top of the page, click the Show keys link, and you see the connection strings for the database. Copy a connection string to your copy/paste buffer. Configure Customer Leads in Partner Center # Go back to the Partner Center tab in your browser. Select the Connect link. From the Lead destination dropdown, select Azure Table . Enter your Contact email and paste in your Storage account connection string . Click the Validate link to ensure your connection string is valid. Click Connect . For each page, you must click the Save draft at the bottom of the page to move on. Click Save draft at the bottom of the page. Properties # Navigate to the Properties section. Categories # You must select at least one category for your offer. Click the + Categories link. In the left dropdown, select Developer Tools . In the right dropdown, select Developer Service . Legal # Scroll down to the Legal section. Select Use the Standard Contract for Microsoft\u2019s commercial marketplace? checkbox Click Accept . Click the Save draft button. Offer listing # In the the Offer listing section, for Search results summary enter SaaS Workshop summary . For Description , here is some text you may choose to copy and paste into the text box. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat cupiditat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. In Getting started instructions paste the following text. Click the configure account button after the subscription is created. In the Privacy policy link , enter the public link to the privacy policy for your company if you know it. If not, follow this link to Microsoft's privacy policy and use that URL. In the Support contact section, enter your contact information. For the Support link field enter the support or homepage of your website. For the Engineering contact section, enter your contact information. for the Supporting documents section, upload the PDF document provided in the items directory of lab1 . This document is named \" WellArchitectedFramework.pdf .\" You must give the document a name. For the Marketplace media section you'll upload 2 images. For the 216X216 logo image, upload the PNG provided in the ./items directory of lab1 . This PNG is named \" Contoso-Logo-216x216.png .\" For the 1280X720 screenshot image, upload the PNG provided in the ./items directory of lab1 . This PNG is named \" Screenshots-1280x720.png .\" Add a title to the screenshot image. Click the Save draft button and correct any errors that be shown before moving on. Preview audience # In the Preview audience section, enter the email address you use for your Azure subscription. This is the email address you will use to purchase your offer later. Enter a Description . Click Save draft . Technical configuration # Skip this section for this first lab. You will come back to it in lab 2. Plan overview # In this section, you will create a single plan that costs $0. This plan will be used for testing purposes. The creation of this plan is covered in the next exercise. Exercise: Create a Plan # In this exercise, you will create a plan that costs $0 to purchase. This plan will be used to test the offer in later labs. Create the plan # Navigate to the Plan overview page. At the top of the page click the + Create new plan button. Give the new plan a Plan ID and Plan name . These values can be whatever you like, but we will refer to them a follows throughout these labs. Plan ID: gold-plan-id Plan name: Gold Plan Click the Create button and your new plan is created. The Plan has several components to it, all of which must be completed. Plan Listing # The Plan name should read \"Gold Plan.\" The summary requires text to describe the plan. In this case, you may use the following placeholder text if you would like. Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur. 1. Click Save draft . Pricing and availability # For Markets: Select the Edit markets link. Choose at least one market within which to sell your plan. This will likely be the same country that hosts your Azure region. Click Save . For pricing mode: Keep it Flat rate . Leave Billing term as Monthly . Enter 0 for the cost per month. Leave the rest of the plan as is and click Save draft . Exercise: Resell through CSPs # Open the left-hand menu item. Select \"No partners in the CSP program.\" Click the Save draft button at the bottom of the screen. Exercise: Review and Publish # In this short exercise, you will check your work by performing the first action of the publication process. You will submit your offer for review to see if it is ready to be published. Open your offer's overview page. In the upper right corner of the page, click the link for Review and publish . Looking to the right side of the page, notice that some sections have a green circle and at least one is gray. The gray sections are not yet complete, preventing you from taking the next step of publishing your offer. The Technical configuration section of the offer will not pass review. This is okay for now as we need to fill out the Technical configuration tab and you can't do that until we have a landing page. All other sections should be green. Go back to all sections that appear with a gray circle and complete those sections. Ensure all sections pass except Technical configuration , which will be addressed in the next lab. Congratulations! You have finished this lab. If you are in a live class setting, please raise your hand in Microsoft Teams to indicate you are done with the lab.","title":"Lab 1: Creating a SaaS Offer in Partner Center"},{"location":"saas-accelerator/labs/lab1-partner-center/#lab-1-creating-a-saas-offer-in-partner-center","text":"In this lab you will use your Partner Center account to create a test SaaS offer with a single plan. This offer will be used for development and testing purposes. This lab will familiarize you with Partner Center and prepare an offer you will publish in the next lab. Completion of this lab is required for the following labs in the series to work properly. Exercise: Create a New SaaS Offer Create a new SaaS offer Offer setup Properties Offer listing Preview audience Technical configuration Plan overview Exercise: Create a Plan Create the plan Plan Listing Pricing and availability Exercise: Resell through CSPs Exercise: Review and Publish You will need the following to complete this lab. A Partner Center account An Azure account and access to the Azure portal","title":"Lab 1: Creating a SaaS Offer in Partner Center"},{"location":"saas-accelerator/labs/lab1-partner-center/#exercise-create-a-new-saas-offer","text":"In this exercise, you will create a new SaaS offer in Partner Center and fill in the information needed to publish it.","title":"Exercise: Create a New SaaS Offer"},{"location":"saas-accelerator/labs/lab1-partner-center/#create-a-new-saas-offer","text":"From the Home page of Partner Center click the Commercial Marketplace button. Click the + New offer button and at the dropdown and select Software as a Service . Give your new offer an Offer ID and Offer alias . Although you are free to use whatever values you like, we will be using the following in this lab for reference. Offer ID: saas-accelerator Offer alias SaaS Accelerator","title":"Create a new SaaS offer"},{"location":"saas-accelerator/labs/lab1-partner-center/#offer-setup","text":"Leave all information at the top of this page as is and scroll down to the Customer leads section of the page.","title":"Offer setup"},{"location":"saas-accelerator/labs/lab1-partner-center/#customer-leads","text":"Here, you will attach your offer to an Azure Data Storage table which will act as a connected Customer Relationship Management system (CRM) for your offer.","title":"Customer leads"},{"location":"saas-accelerator/labs/lab1-partner-center/#create-the-azure-storage-account","text":"This is the first time you're using the Azure portal for this class. It is recommended that you install all the resources you'll create in this class into the same Resource Group, just to keep things tidy within your Azure subscription. Open a new tab for the Azure portal and log in. Create a Resource Group named saas-accelerator . Although you may use a different name, all labs will refer to the Resource Group with this name. In the saas-accelerator Resource Group, create a standard Azure Storage account. This will be your CRM database, so name it accordingly to distinguish it from future storage accounts that will be created in this Resource Group. Once the storage account is created, browse to the storage account's overview page. In the left-hand menu, find the Security + networking section. In that section, find and click on the Access keys link. At the top of the page, click the Show keys link, and you see the connection strings for the database. Copy a connection string to your copy/paste buffer.","title":"Create the Azure Storage account"},{"location":"saas-accelerator/labs/lab1-partner-center/#configure-customer-leads-in-partner-center","text":"Go back to the Partner Center tab in your browser. Select the Connect link. From the Lead destination dropdown, select Azure Table . Enter your Contact email and paste in your Storage account connection string . Click the Validate link to ensure your connection string is valid. Click Connect . For each page, you must click the Save draft at the bottom of the page to move on. Click Save draft at the bottom of the page.","title":"Configure Customer Leads in Partner Center"},{"location":"saas-accelerator/labs/lab1-partner-center/#properties","text":"Navigate to the Properties section.","title":"Properties"},{"location":"saas-accelerator/labs/lab1-partner-center/#categories","text":"You must select at least one category for your offer. Click the + Categories link. In the left dropdown, select Developer Tools . In the right dropdown, select Developer Service .","title":"Categories"},{"location":"saas-accelerator/labs/lab1-partner-center/#legal","text":"Scroll down to the Legal section. Select Use the Standard Contract for Microsoft\u2019s commercial marketplace? checkbox Click Accept . Click the Save draft button.","title":"Legal"},{"location":"saas-accelerator/labs/lab1-partner-center/#offer-listing","text":"In the the Offer listing section, for Search results summary enter SaaS Workshop summary . For Description , here is some text you may choose to copy and paste into the text box. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat cupiditat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. In Getting started instructions paste the following text. Click the configure account button after the subscription is created. In the Privacy policy link , enter the public link to the privacy policy for your company if you know it. If not, follow this link to Microsoft's privacy policy and use that URL. In the Support contact section, enter your contact information. For the Support link field enter the support or homepage of your website. For the Engineering contact section, enter your contact information. for the Supporting documents section, upload the PDF document provided in the items directory of lab1 . This document is named \" WellArchitectedFramework.pdf .\" You must give the document a name. For the Marketplace media section you'll upload 2 images. For the 216X216 logo image, upload the PNG provided in the ./items directory of lab1 . This PNG is named \" Contoso-Logo-216x216.png .\" For the 1280X720 screenshot image, upload the PNG provided in the ./items directory of lab1 . This PNG is named \" Screenshots-1280x720.png .\" Add a title to the screenshot image. Click the Save draft button and correct any errors that be shown before moving on.","title":"Offer listing"},{"location":"saas-accelerator/labs/lab1-partner-center/#preview-audience","text":"In the Preview audience section, enter the email address you use for your Azure subscription. This is the email address you will use to purchase your offer later. Enter a Description . Click Save draft .","title":"Preview audience"},{"location":"saas-accelerator/labs/lab1-partner-center/#technical-configuration","text":"Skip this section for this first lab. You will come back to it in lab 2.","title":"Technical configuration"},{"location":"saas-accelerator/labs/lab1-partner-center/#plan-overview","text":"In this section, you will create a single plan that costs $0. This plan will be used for testing purposes. The creation of this plan is covered in the next exercise.","title":"Plan overview"},{"location":"saas-accelerator/labs/lab1-partner-center/#exercise-create-a-plan","text":"In this exercise, you will create a plan that costs $0 to purchase. This plan will be used to test the offer in later labs.","title":"Exercise: Create a Plan"},{"location":"saas-accelerator/labs/lab1-partner-center/#create-the-plan","text":"Navigate to the Plan overview page. At the top of the page click the + Create new plan button. Give the new plan a Plan ID and Plan name . These values can be whatever you like, but we will refer to them a follows throughout these labs. Plan ID: gold-plan-id Plan name: Gold Plan Click the Create button and your new plan is created. The Plan has several components to it, all of which must be completed.","title":"Create the plan"},{"location":"saas-accelerator/labs/lab1-partner-center/#plan-listing","text":"The Plan name should read \"Gold Plan.\" The summary requires text to describe the plan. In this case, you may use the following placeholder text if you would like. Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur. 1. Click Save draft .","title":"Plan Listing"},{"location":"saas-accelerator/labs/lab1-partner-center/#pricing-and-availability","text":"For Markets: Select the Edit markets link. Choose at least one market within which to sell your plan. This will likely be the same country that hosts your Azure region. Click Save . For pricing mode: Keep it Flat rate . Leave Billing term as Monthly . Enter 0 for the cost per month. Leave the rest of the plan as is and click Save draft .","title":"Pricing and availability"},{"location":"saas-accelerator/labs/lab1-partner-center/#exercise-resell-through-csps","text":"Open the left-hand menu item. Select \"No partners in the CSP program.\" Click the Save draft button at the bottom of the screen.","title":"Exercise: Resell through CSPs"},{"location":"saas-accelerator/labs/lab1-partner-center/#exercise-review-and-publish","text":"In this short exercise, you will check your work by performing the first action of the publication process. You will submit your offer for review to see if it is ready to be published. Open your offer's overview page. In the upper right corner of the page, click the link for Review and publish . Looking to the right side of the page, notice that some sections have a green circle and at least one is gray. The gray sections are not yet complete, preventing you from taking the next step of publishing your offer. The Technical configuration section of the offer will not pass review. This is okay for now as we need to fill out the Technical configuration tab and you can't do that until we have a landing page. All other sections should be green. Go back to all sections that appear with a gray circle and complete those sections. Ensure all sections pass except Technical configuration , which will be addressed in the next lab. Congratulations! You have finished this lab. If you are in a live class setting, please raise your hand in Microsoft Teams to indicate you are done with the lab.","title":"Exercise: Review and Publish"},{"location":"saas-accelerator/labs/lab2-install/","text":"Lab 2: Installing the SaaS Accelerator # This lab takes you through a very quick installation process for the SaaS Accelerator using the Azure portal Cloud Shell. Once complete, you will have installed the SaaS Accelerator and published your offer in Partner Center. Completion of this lab is required for the following labs in the series to work properly. Exercise: Create an install document Exercise: Opening the cloud shell Exercise: Running the install script Exercise: Verify web applications Exercise: Partner Center Technical Configuration Exercise: Create an install document # Open your favorite text editor and paste the following PowersShell script into a text file. wget https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.sh; ` chmod +x dotnet-install.sh; ` ./dotnet-install.sh; ` $ENV:PATH=\"$HOME/.dotnet:$ENV:PATH\"; ` git clone https://github.com/Azure/Commercial-Marketplace-SaaS-Accelerator.git -b 5.0.0 --depth 1; ` cd ./Commercial-Marketplace-SaaS-Accelerator/deployment/Templates; ` Connect-AzureAD -Confirm; ` .\\Deploy.ps1 ` -WebAppNamePrefix \"marketplacesaasgithub-SOME-UNIQUE-STRING\" ` -SQLServerName \"marketplacesaasgithub-SOME-UNIQUE-STRING\" ` -SQLAdminLogin \"adminlogin\" ` -SQLAdminLoginPassword \"a_very_PASSWORD_2_SymB0L@s\" ` -PublisherAdminUsers \"user@email.com\" ` -ResourceGroupForDeployment \"MarketplaceSaasGitHub\" ` -Location \"East US\" ` -PathToARMTemplate \".\\deploy.json\" ` -TenantID \"xxxx-xxx-xxx-xxx-xxxx\" -AzureSubscriptionID \"xxx-xx-xx-xx-xxxx\" ``` ### Defined values In your text editor, replace each of the below values. They are described below. | Parameter value | Description and notes | |---|---| | **AzureSubscriptionID** | The identity of the subscription to use when installing the accelerator. [Click here](https://docs.microsoft.com/en-us/azure/azure-portal/get-subscription-tenant-id#find-your-azure-subscription) to learn how to find your subscription ID. | | **ResourceGroupForDeployment** | The name of the resource group you want to deploy the SaaS solution into. For the purposes of this lab, consider using `saas-accelerator-workshop`. | | **SQLAdminLogin** | The admin username for the SQL Server that will be installed. Do NOT use name \"admin\" as it is not allowed and the deployment script will fail. | | **SQLAdminLoginPassword** | The password for the SQL Server instance that will be installed. Make this password secure and at **least 12 characters long** so the deployment script doesn't fail. Do not use hyphens. | | **SQLServerName** | The name of the SQL Server instance that will be deployed. The name can only contain lowercase letters. | | **TenantID** | The identity of the tenant to be installed into. [Click here](https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/active-directory-how-to-find-tenant#find-tenant-id-through-the-azure-portal) to learn how to find your tenant ID. | | **WebAppNamePrefix** | A string that will be prefixed to the name of all resources that are created in your deployment resource group. This can be as short as three letters. Use lowercase alphanumeric characters only. | [See here](https://github.com/Azure/Commercial-Marketplace-SaaS-Accelerator/blob/main/docs/Installation-Instructions.md#parameters) for explanations of all parameters including optional ones. ## Exercise: Opening the cloud shell In the Azure portal, click the button next to the command bar as shown in the image below. ![Command shell](../images/01.png) This opens the the PowerShell cloud shell, which is a command line that runs directly in Azure. Note the cloud shell is ready to use once you see a blinking cursor. ## Exercise: Running the install script 1. Go back to your PowerShell script in your text editor. The command should be completed and ready to run. 1. Copy the entire command into your copy/paste buffer. 1. Go back to the Azure portal in your browser and **right click** on the command shell window. 1. Select **Paste as plain text**. 1. If the script doesn't start running automatically, hit **Enter**. The script will take several minutes to run. It may reach a point where it seems nothing is happening, but just wait through the entire install. It typically takes eight minutes or so. ### Install script errors If you see errors in the output of the script, cancel the run of the script by typing **CTRL+C**. 1. Fix the errors in your install script. 1. Change the `RESOURCE_GROUP` and `WEB_NAME_PREFIX` to new values to prevent collisions. 1. In the cloud shell, do the following. ```bash # go back to home directory cd ~ # delete the repository directory that was created rm -rf ./Commercial-Marketplace-SaaS-Accelerator/ ``` 1. Run the revised script. ### Successful install When the script completes successfully, it will print the values you need for the Technical Configuration tab in Partner Center. It will look something like the following. Copy this information to a note or file so you can retrieve it in case you close the browser window. ```text Add The following URL in PartnerCenter SaaS Technical Configuration->Landing Page section https://PREFIX-portal.azurewebsites.net/ Add The following URL in PartnerCenter SaaS Technical Configuration->Connection Webhook section https://PREFIX-portal.azurewebsites.net/api/AzureWebhook Add The following TenantID in PartnerCenter SaaS Technical Configuration Tenant ID e6c97eb2-054c-4b5d-9a30-a064766a9e8f Add The following ApplicationID in PartnerCenter SaaS Technical Configuration->AAD Application ID section bc830358-8c71-4699-b5e6-ea617ac7b5ef Exercise: Verify web applications # Now you'll verify the two web application are up and running. The landing page # In the SaaS Accelerator's resource group, find the App service for the landing page and click it. It is the one named PREFIX-portal . In the upper right corner is the URL of the web app. Click the URL. You should be taken to a web page and receive no errors. The publisher portal # In the SaaS Accelerator's resource group, find the App service for the landing page and click it. It is the one named PREFIX-admin . In the upper right corner is the URL of the web app. Click the URL. You should be taken to a web page and receive no errors. If you are prompted to log in, do so. Exercise: Partner Center Technical Configuration # Open Partner Center and browse to the Technical configuration page of your offer. Enter the values into the appropriate text fields as per the instructions from the end of the installation script that you copied earlier in this lab. Click Save Draft . Click Review and publish . Publish your offer. Publication will take a while. Only after publication completes can you do the next lab. Congratulations! You have finished this lab. If you are in a live class setting, please raise your hand in Microsoft Teams to indicate you are done with the lab. To watch the publication process, refresh the offer's Overview page occasionally. Once your offer reaches the Publisher preview stage, you are ready for the next lab. Do NOT press the Go live button.","title":"Lab 2: Installing the SaaS Accelerator"},{"location":"saas-accelerator/labs/lab2-install/#lab-2-installing-the-saas-accelerator","text":"This lab takes you through a very quick installation process for the SaaS Accelerator using the Azure portal Cloud Shell. Once complete, you will have installed the SaaS Accelerator and published your offer in Partner Center. Completion of this lab is required for the following labs in the series to work properly. Exercise: Create an install document Exercise: Opening the cloud shell Exercise: Running the install script Exercise: Verify web applications Exercise: Partner Center Technical Configuration","title":"Lab 2: Installing the SaaS Accelerator"},{"location":"saas-accelerator/labs/lab2-install/#exercise-create-an-install-document","text":"Open your favorite text editor and paste the following PowersShell script into a text file. wget https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.sh; ` chmod +x dotnet-install.sh; ` ./dotnet-install.sh; ` $ENV:PATH=\"$HOME/.dotnet:$ENV:PATH\"; ` git clone https://github.com/Azure/Commercial-Marketplace-SaaS-Accelerator.git -b 5.0.0 --depth 1; ` cd ./Commercial-Marketplace-SaaS-Accelerator/deployment/Templates; ` Connect-AzureAD -Confirm; ` .\\Deploy.ps1 ` -WebAppNamePrefix \"marketplacesaasgithub-SOME-UNIQUE-STRING\" ` -SQLServerName \"marketplacesaasgithub-SOME-UNIQUE-STRING\" ` -SQLAdminLogin \"adminlogin\" ` -SQLAdminLoginPassword \"a_very_PASSWORD_2_SymB0L@s\" ` -PublisherAdminUsers \"user@email.com\" ` -ResourceGroupForDeployment \"MarketplaceSaasGitHub\" ` -Location \"East US\" ` -PathToARMTemplate \".\\deploy.json\" ` -TenantID \"xxxx-xxx-xxx-xxx-xxxx\" -AzureSubscriptionID \"xxx-xx-xx-xx-xxxx\" ``` ### Defined values In your text editor, replace each of the below values. They are described below. | Parameter value | Description and notes | |---|---| | **AzureSubscriptionID** | The identity of the subscription to use when installing the accelerator. [Click here](https://docs.microsoft.com/en-us/azure/azure-portal/get-subscription-tenant-id#find-your-azure-subscription) to learn how to find your subscription ID. | | **ResourceGroupForDeployment** | The name of the resource group you want to deploy the SaaS solution into. For the purposes of this lab, consider using `saas-accelerator-workshop`. | | **SQLAdminLogin** | The admin username for the SQL Server that will be installed. Do NOT use name \"admin\" as it is not allowed and the deployment script will fail. | | **SQLAdminLoginPassword** | The password for the SQL Server instance that will be installed. Make this password secure and at **least 12 characters long** so the deployment script doesn't fail. Do not use hyphens. | | **SQLServerName** | The name of the SQL Server instance that will be deployed. The name can only contain lowercase letters. | | **TenantID** | The identity of the tenant to be installed into. [Click here](https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/active-directory-how-to-find-tenant#find-tenant-id-through-the-azure-portal) to learn how to find your tenant ID. | | **WebAppNamePrefix** | A string that will be prefixed to the name of all resources that are created in your deployment resource group. This can be as short as three letters. Use lowercase alphanumeric characters only. | [See here](https://github.com/Azure/Commercial-Marketplace-SaaS-Accelerator/blob/main/docs/Installation-Instructions.md#parameters) for explanations of all parameters including optional ones. ## Exercise: Opening the cloud shell In the Azure portal, click the button next to the command bar as shown in the image below. ![Command shell](../images/01.png) This opens the the PowerShell cloud shell, which is a command line that runs directly in Azure. Note the cloud shell is ready to use once you see a blinking cursor. ## Exercise: Running the install script 1. Go back to your PowerShell script in your text editor. The command should be completed and ready to run. 1. Copy the entire command into your copy/paste buffer. 1. Go back to the Azure portal in your browser and **right click** on the command shell window. 1. Select **Paste as plain text**. 1. If the script doesn't start running automatically, hit **Enter**. The script will take several minutes to run. It may reach a point where it seems nothing is happening, but just wait through the entire install. It typically takes eight minutes or so. ### Install script errors If you see errors in the output of the script, cancel the run of the script by typing **CTRL+C**. 1. Fix the errors in your install script. 1. Change the `RESOURCE_GROUP` and `WEB_NAME_PREFIX` to new values to prevent collisions. 1. In the cloud shell, do the following. ```bash # go back to home directory cd ~ # delete the repository directory that was created rm -rf ./Commercial-Marketplace-SaaS-Accelerator/ ``` 1. Run the revised script. ### Successful install When the script completes successfully, it will print the values you need for the Technical Configuration tab in Partner Center. It will look something like the following. Copy this information to a note or file so you can retrieve it in case you close the browser window. ```text Add The following URL in PartnerCenter SaaS Technical Configuration->Landing Page section https://PREFIX-portal.azurewebsites.net/ Add The following URL in PartnerCenter SaaS Technical Configuration->Connection Webhook section https://PREFIX-portal.azurewebsites.net/api/AzureWebhook Add The following TenantID in PartnerCenter SaaS Technical Configuration Tenant ID e6c97eb2-054c-4b5d-9a30-a064766a9e8f Add The following ApplicationID in PartnerCenter SaaS Technical Configuration->AAD Application ID section bc830358-8c71-4699-b5e6-ea617ac7b5ef","title":"Exercise: Create an install document"},{"location":"saas-accelerator/labs/lab2-install/#exercise-verify-web-applications","text":"Now you'll verify the two web application are up and running.","title":"Exercise: Verify web applications"},{"location":"saas-accelerator/labs/lab2-install/#the-landing-page","text":"In the SaaS Accelerator's resource group, find the App service for the landing page and click it. It is the one named PREFIX-portal . In the upper right corner is the URL of the web app. Click the URL. You should be taken to a web page and receive no errors.","title":"The landing page"},{"location":"saas-accelerator/labs/lab2-install/#the-publisher-portal","text":"In the SaaS Accelerator's resource group, find the App service for the landing page and click it. It is the one named PREFIX-admin . In the upper right corner is the URL of the web app. Click the URL. You should be taken to a web page and receive no errors. If you are prompted to log in, do so.","title":"The publisher portal"},{"location":"saas-accelerator/labs/lab2-install/#exercise-partner-center-technical-configuration","text":"Open Partner Center and browse to the Technical configuration page of your offer. Enter the values into the appropriate text fields as per the instructions from the end of the installation script that you copied earlier in this lab. Click Save Draft . Click Review and publish . Publish your offer. Publication will take a while. Only after publication completes can you do the next lab. Congratulations! You have finished this lab. If you are in a live class setting, please raise your hand in Microsoft Teams to indicate you are done with the lab. To watch the publication process, refresh the offer's Overview page occasionally. Once your offer reaches the Publisher preview stage, you are ready for the next lab. Do NOT press the Go live button.","title":"Exercise: Partner Center Technical Configuration"},{"location":"saas-accelerator/labs/lab3-tour/","text":"Lab 3: Using the SaaS Accelerator # In this lab, you will familiarize you with the SaaS Accelerator, both from the customer and publisher points of view. The goal is to become comfortable with the SaaS Accelerator's landing page and publisher portal, so you (as a publisher) can monitor and manage your SaaS offer subscriptions. Exercise: Customer purchase 1 Exercise: The first landing page Exercise: Customer purchase 2 Exercise: The second landing page Exercise: The publisher activates a subscription Explore for a few minutes Exercise: Customer purchase 1 # As a customer, you will be purchasing the offer. Here, you will do so from within Partner Center. You can do this from the Overview page of your offer under the Publisher signoff stage. Open Partner Center to your offer's Overview page. Find the link under the Publisher signoff stage. Click the Azure portal preview link. A new tab opens in your browser. Login if prompted. Click the Set up + subscribe button. Create a new resource group named saas-accelerator-purchases . Under SaaS details , name your subscription Subscription01 . Click the Review + subscribe button at the bottom of the page. Click the Subscribe button at the bottom of the page. The SaaS subscription is created. This may take a minute or two. Once the SaaS subscription has been created, you can move on to the following steps. Exercise: The first landing page # In this exercise, you will visit the offer's landing page, provided by the SaaS Accelerator. Click the Configure account now button. Login and allow the read permissions. This is Azure AD SSO asking for your permission to read account details. Click Accept to allow the application access to your basic account information. You should now see a page with your subscription details on it. Note that Status is currently PendingFulfillmentStart . In the lower right corner, click the activate button. The landing page as a subscription tracker # Remember you are acting in the role of the customer. Perhaps you have more than one subscription with this publisher. Click the Go to subscriptions list button in the lower right corner. You have one subscription PendingActivation by the publisher. Exercise: Customer purchase 2 # As a customer, you will be purchasing the offer. Here, you will do so from within the Azure portal as you would in a typical buying experience. Open the Azure portal. In the left menu, click the bit + Create a resource link. Under the search text box, click the See more in Marketplace link. At the top of the screen, you'll see the text, You have private products available. View private products . Click the View private products link. Find the SaaS Accelerator 1 offer and click it. Click the Set up + subscribe button. Select the resource group you created earlier, saas-accelerator-purchases . Under SaaS details , name your subscription Subscription02 . Click the Review + subscribe button at the bottom of the page. Click the Subscribe button at the bottom of the page. The SaaS subscription is being created. This may take a minute or two. Once the SaaS subscription has been created, you can move on to the following steps. Exercise: The second landing page # In this exercise, you will visit the offer's landing page, provided by the SaaS Accelerator. Click the Configure account now button and log in if needed. Click the Activate button. Click the Go to subscriptions list button in the lower right corner. You have two subscriptions, one in PendingActivation and another in PendingFulfillmentStart . Exercise: The publisher activates a subscription # Now you are going to the play the role of the publisher and activate the customer's subscriptions. The publisher portal # In the SaaS Accelerator's resource group, find the App service for the landing page and click it. It is the one named PREFIX-admin . In the upper right corner is the URL of the web app. Click the URL. You should be taken to a web page and receive no errors. If you are prompted to log in, do so. Click the Subscriptions tile. You can see the two subscriptions awaiting activation. For the Subscription01 subscription, click the menu under Action and select Activate . Note the status. Click the Activate button. Click the Go to the subscription list button and see the new state of the subscription. Explore for a few minutes # We encourage you to explore for a few minutes to play with the other capabilities of the SaaS Accelerator. First, there is the landing page, which also provides subscription visibility for the subscriber. Then there is the publisher portal, which allows monitoring and management of subscriptions. Here are some things you might try. Look at the status of each subscription via its landing page. Get there from the SaaS blade in the Azure portal. Cancel, or Unsubscribe , a subscription from within the publisher portal. Look at the other ways to navigate the publisher portal and see subscriptions and offers. Congratulations! You have finished this lab. If you are in a live class setting, please raise your hand in Microsoft Teams to indicate you are done with the lab.","title":"Lab 3: Using the SaaS Accelerator"},{"location":"saas-accelerator/labs/lab3-tour/#lab-3-using-the-saas-accelerator","text":"In this lab, you will familiarize you with the SaaS Accelerator, both from the customer and publisher points of view. The goal is to become comfortable with the SaaS Accelerator's landing page and publisher portal, so you (as a publisher) can monitor and manage your SaaS offer subscriptions. Exercise: Customer purchase 1 Exercise: The first landing page Exercise: Customer purchase 2 Exercise: The second landing page Exercise: The publisher activates a subscription Explore for a few minutes","title":"Lab 3: Using the SaaS Accelerator"},{"location":"saas-accelerator/labs/lab3-tour/#exercise-customer-purchase-1","text":"As a customer, you will be purchasing the offer. Here, you will do so from within Partner Center. You can do this from the Overview page of your offer under the Publisher signoff stage. Open Partner Center to your offer's Overview page. Find the link under the Publisher signoff stage. Click the Azure portal preview link. A new tab opens in your browser. Login if prompted. Click the Set up + subscribe button. Create a new resource group named saas-accelerator-purchases . Under SaaS details , name your subscription Subscription01 . Click the Review + subscribe button at the bottom of the page. Click the Subscribe button at the bottom of the page. The SaaS subscription is created. This may take a minute or two. Once the SaaS subscription has been created, you can move on to the following steps.","title":"Exercise: Customer purchase 1"},{"location":"saas-accelerator/labs/lab3-tour/#exercise-the-first-landing-page","text":"In this exercise, you will visit the offer's landing page, provided by the SaaS Accelerator. Click the Configure account now button. Login and allow the read permissions. This is Azure AD SSO asking for your permission to read account details. Click Accept to allow the application access to your basic account information. You should now see a page with your subscription details on it. Note that Status is currently PendingFulfillmentStart . In the lower right corner, click the activate button.","title":"Exercise: The first landing page"},{"location":"saas-accelerator/labs/lab3-tour/#the-landing-page-as-a-subscription-tracker","text":"Remember you are acting in the role of the customer. Perhaps you have more than one subscription with this publisher. Click the Go to subscriptions list button in the lower right corner. You have one subscription PendingActivation by the publisher.","title":"The landing page as a subscription tracker"},{"location":"saas-accelerator/labs/lab3-tour/#exercise-customer-purchase-2","text":"As a customer, you will be purchasing the offer. Here, you will do so from within the Azure portal as you would in a typical buying experience. Open the Azure portal. In the left menu, click the bit + Create a resource link. Under the search text box, click the See more in Marketplace link. At the top of the screen, you'll see the text, You have private products available. View private products . Click the View private products link. Find the SaaS Accelerator 1 offer and click it. Click the Set up + subscribe button. Select the resource group you created earlier, saas-accelerator-purchases . Under SaaS details , name your subscription Subscription02 . Click the Review + subscribe button at the bottom of the page. Click the Subscribe button at the bottom of the page. The SaaS subscription is being created. This may take a minute or two. Once the SaaS subscription has been created, you can move on to the following steps.","title":"Exercise: Customer purchase 2"},{"location":"saas-accelerator/labs/lab3-tour/#exercise-the-second-landing-page","text":"In this exercise, you will visit the offer's landing page, provided by the SaaS Accelerator. Click the Configure account now button and log in if needed. Click the Activate button. Click the Go to subscriptions list button in the lower right corner. You have two subscriptions, one in PendingActivation and another in PendingFulfillmentStart .","title":"Exercise: The second landing page"},{"location":"saas-accelerator/labs/lab3-tour/#exercise-the-publisher-activates-a-subscription","text":"Now you are going to the play the role of the publisher and activate the customer's subscriptions.","title":"Exercise: The publisher activates a subscription"},{"location":"saas-accelerator/labs/lab3-tour/#the-publisher-portal","text":"In the SaaS Accelerator's resource group, find the App service for the landing page and click it. It is the one named PREFIX-admin . In the upper right corner is the URL of the web app. Click the URL. You should be taken to a web page and receive no errors. If you are prompted to log in, do so. Click the Subscriptions tile. You can see the two subscriptions awaiting activation. For the Subscription01 subscription, click the menu under Action and select Activate . Note the status. Click the Activate button. Click the Go to the subscription list button and see the new state of the subscription.","title":"The publisher portal"},{"location":"saas-accelerator/labs/lab3-tour/#explore-for-a-few-minutes","text":"We encourage you to explore for a few minutes to play with the other capabilities of the SaaS Accelerator. First, there is the landing page, which also provides subscription visibility for the subscriber. Then there is the publisher portal, which allows monitoring and management of subscriptions. Here are some things you might try. Look at the status of each subscription via its landing page. Get there from the SaaS blade in the Azure portal. Cancel, or Unsubscribe , a subscription from within the publisher portal. Look at the other ways to navigate the publisher portal and see subscriptions and offers. Congratulations! You have finished this lab. If you are in a live class setting, please raise your hand in Microsoft Teams to indicate you are done with the lab.","title":"Explore for a few minutes"},{"location":"vm/","text":"The content in this course is from a live hands-on workshop. These demo-heavy modules take you all the way from creating a new virtual machine in Azure through publishing a custom virtual machine offer to the Microsoft commercial marketplace. If you are looking to publish a new virtual machine offer, this series will get you from beginner to advanced in a short time. Let us know what you need in this content library. Get your hands dirty with the hands-on labs . Neelavarsha Duddanahalli Kumar Mahesh and Julio Colon are the creators of this course. Creating Virtual Machine Offers Overview # Video This introductory module takes you from start to finish in creating and publishing virtual machine offers in the Microsoft commercial marketplace. Get an overview of the process from beginning to end before embarking on the more technical details in later modules. Partner Center Overview # Video Learn about creating your offers in Partner Center, including private plans, CRM integration, and more. Creating an Offer in Partner Center (Demo) # Video See how to create an offer in Partner Center to include creating the offer, configuring a basic CRM integration, specifying offer properties, listing details, and resell with CSP settings. This video does not go into the specifics of creating the Virtual Machine plans for the offer, which will be seen in a later demo. Creating and Customizing a Virtual Machine (Demo) # Video Learn how to not only create a Virtual Machine, but how to customize it by adding scripts or applications. This is a required step in creating your Virtual Machine offer so that the Virtual Machine itself has your intellectual property installed on it. Generalizing and Capturing a Virtual Machine Image # Video Learn what it means to generalize and capture a Virtual Machine so it can be made available in your offer. The examples provided in this overview pertain to both Windows and Linux machines. Generalizing and Capturing a Virtual Machine Image (Demo) # Video See how to capture both a Linux and Windows Virtual Machine for use in your marketplace offer. This demo is done with a Linux machine, but the difference for Windows is explained along the way. Most actions taken are applicable to both machine types and this module gives you what you need to know to generalize and capture both machine types. Publish Your Virtual Machine Offer with Partner Center (Demo) # Video This demonstration takes you through creating a plan for your Virtual Machine offer, associating the correct image to the plan, and setting other configuration options on your Virtual Machine. After completing the plan configuration you get to see the offer published. Securing Your Virtual Machine # Video Learn about things you can do to secure your Virtual Machine offer and the image used to create it. There are plenty of techniques you can use to harden your Virtual Machine against attackers and this video will take you through several. Virtual Machine Automation with Packer Overview # Video Learn about the Packer tool that enables automating many of the tasks you\u2019ve seen done by hand up until now. Packer gives you the power to create virtual machines, install software, create images, and more. Virtual Machine Automation with Packer (Demo) # Video See how the Packer tool gives you the power to automate many of the tasks needed to created Virtual Machine images for your Virtual Machine offer. This walkthrough using VS Code and the command line leaves you with the tools you need to begin your own automation. The Virtual Machine Offer Certification Process # Video This quick lecture walks through the Virtual Machine offer certification process and details common reasons why certification may fail for a newly submitted virtual machine offer. This video can save you loads of time by helping you avoid common mistakes or misunderstandings. Virtual Machine Certification Test Tool (Demo) # Video There is a tool one can use to help prepare their Virtual Machine image for certification. The Virtual Machine image certification tool is exercised in this video, and we get to see how to set it up and use it to gain confidence that a Virtual Machine image will not be rejected during certification. Purchasing the Virtual Machine Offer # Video The offer is now complete and ready to test in Partner Center. In this video, experience buying the completed Virtual Machine offer from the point of view of the customer. Hands-on labs # The following hands-on labs build upon each other. They take you through the complete process of creating and publishing a virtual machine offer in the Microsoft commercial marketplace. Clone this repository to your local machine. You will need some artifacts from the lab folders to complete the labs. Prerequisites # An Azure Subscription to create resources An active Partner Center Account (Please ensure you have enrolled into the Marketplace Offers program) Visual Studio Code or other text editor Labs # Partner Center Setup VM Creation Generalize and Capture Image Publish the Offer Purchase your Offer","title":"Mastering Virtual Machine Offers"},{"location":"vm/#creating-virtual-machine-offers-overview","text":"Video This introductory module takes you from start to finish in creating and publishing virtual machine offers in the Microsoft commercial marketplace. Get an overview of the process from beginning to end before embarking on the more technical details in later modules.","title":"Creating Virtual Machine Offers Overview"},{"location":"vm/#partner-center-overview","text":"Video Learn about creating your offers in Partner Center, including private plans, CRM integration, and more.","title":"Partner Center Overview"},{"location":"vm/#creating-an-offer-in-partner-center-demo","text":"Video See how to create an offer in Partner Center to include creating the offer, configuring a basic CRM integration, specifying offer properties, listing details, and resell with CSP settings. This video does not go into the specifics of creating the Virtual Machine plans for the offer, which will be seen in a later demo.","title":"Creating an Offer in Partner Center (Demo)"},{"location":"vm/#creating-and-customizing-a-virtual-machine-demo","text":"Video Learn how to not only create a Virtual Machine, but how to customize it by adding scripts or applications. This is a required step in creating your Virtual Machine offer so that the Virtual Machine itself has your intellectual property installed on it.","title":"Creating and Customizing a Virtual Machine (Demo)"},{"location":"vm/#generalizing-and-capturing-a-virtual-machine-image","text":"Video Learn what it means to generalize and capture a Virtual Machine so it can be made available in your offer. The examples provided in this overview pertain to both Windows and Linux machines.","title":"Generalizing and Capturing a Virtual Machine Image"},{"location":"vm/#generalizing-and-capturing-a-virtual-machine-image-demo","text":"Video See how to capture both a Linux and Windows Virtual Machine for use in your marketplace offer. This demo is done with a Linux machine, but the difference for Windows is explained along the way. Most actions taken are applicable to both machine types and this module gives you what you need to know to generalize and capture both machine types.","title":"Generalizing and Capturing a Virtual Machine Image (Demo)"},{"location":"vm/#publish-your-virtual-machine-offer-with-partner-center-demo","text":"Video This demonstration takes you through creating a plan for your Virtual Machine offer, associating the correct image to the plan, and setting other configuration options on your Virtual Machine. After completing the plan configuration you get to see the offer published.","title":"Publish Your Virtual Machine Offer with Partner Center (Demo)"},{"location":"vm/#securing-your-virtual-machine","text":"Video Learn about things you can do to secure your Virtual Machine offer and the image used to create it. There are plenty of techniques you can use to harden your Virtual Machine against attackers and this video will take you through several.","title":"Securing Your Virtual Machine"},{"location":"vm/#virtual-machine-automation-with-packer-overview","text":"Video Learn about the Packer tool that enables automating many of the tasks you\u2019ve seen done by hand up until now. Packer gives you the power to create virtual machines, install software, create images, and more.","title":"Virtual Machine Automation with Packer Overview"},{"location":"vm/#virtual-machine-automation-with-packer-demo","text":"Video See how the Packer tool gives you the power to automate many of the tasks needed to created Virtual Machine images for your Virtual Machine offer. This walkthrough using VS Code and the command line leaves you with the tools you need to begin your own automation.","title":"Virtual Machine Automation with Packer (Demo)"},{"location":"vm/#the-virtual-machine-offer-certification-process","text":"Video This quick lecture walks through the Virtual Machine offer certification process and details common reasons why certification may fail for a newly submitted virtual machine offer. This video can save you loads of time by helping you avoid common mistakes or misunderstandings.","title":"The Virtual Machine Offer Certification Process"},{"location":"vm/#virtual-machine-certification-test-tool-demo","text":"Video There is a tool one can use to help prepare their Virtual Machine image for certification. The Virtual Machine image certification tool is exercised in this video, and we get to see how to set it up and use it to gain confidence that a Virtual Machine image will not be rejected during certification.","title":"Virtual Machine Certification Test Tool (Demo)"},{"location":"vm/#purchasing-the-virtual-machine-offer","text":"Video The offer is now complete and ready to test in Partner Center. In this video, experience buying the completed Virtual Machine offer from the point of view of the customer.","title":"Purchasing the Virtual Machine Offer"},{"location":"vm/#hands-on-labs","text":"The following hands-on labs build upon each other. They take you through the complete process of creating and publishing a virtual machine offer in the Microsoft commercial marketplace. Clone this repository to your local machine. You will need some artifacts from the lab folders to complete the labs.","title":"Hands-on labs"},{"location":"vm/#prerequisites","text":"An Azure Subscription to create resources An active Partner Center Account (Please ensure you have enrolled into the Marketplace Offers program) Visual Studio Code or other text editor","title":"Prerequisites"},{"location":"vm/#labs","text":"Partner Center Setup VM Creation Generalize and Capture Image Publish the Offer Purchase your Offer","title":"Labs"},{"location":"vm/Labs/lab1-partner-center-setup/","text":"Note: This lab is part of a series of labs for Mastering the Virtual Machine Offers Workshop. You should finish this lab before moving on to the next sections. Prerequisites before starting this lab Create a new Virtual Machine Offer Offer Setup Properties Offer listing Preview audience Technical configuration Plan overview Resell through CSPs Review and Publish Prerequisites before starting this lab # Partner Center Account with enrollment in the commercial marketplace program Access to the Azure Portal on the same tenant as is on Partner Center (Same tenancy is required to ensure you can publish images out of Azure Compute Galleries, more on this in the later modules). Create a new Virtual Machine Offer # In this section you will be creating a brand new VM Offer from scratch. This will be used for publishing the offer once the rest of your labs are completed. The following steps will create an offer on your Partner Center Portal. On the Homepage of Partner Center, look for Marketplace Offers and click that tile. If you have disabled Workspaces, then it will be visible as Commercial Marketplace. Click the + New Offer button and select Azure Virtual Machine from the dropdown. You will now have to enter a unique Offer ID and an Offer Alias. For the purpose of uniformity for this lab, we will set a unique string to identify resources, like so, Offer ID: vmworkshop-YOUR_UNIQUE_STRING Offer Alias: VM Workshop YOUR_UNIQUE_STRING Replace the variable YOUR_UNIQUE_STRING with a name unique to your organization Once the offer is created, navigate to the Offer Setup page by clicking on that tab on the left Offer Setup # Offer Setup page will direct you with ways to change your offer alias as well as enable Test Drive. For the purpose of this lab, we will leave everything as is and only configure the Customer leads section. Customer leads # Here, you will attach your offer to an Azure Data Storage table which will act as a connected Customer Relationship Management system (CRM) for your offer. Create the Azure Storage account # This is the first time you're using the Azure portal for this class. It is recommended that you install all the resources you'll create in this class into the same Resource Group, just to keep things tidy within your Azure subscription. Open a new tab for the Azure portal and log in. Create a Resource Group named vmworkshop-YOUR_UNIQUE_STRING . Please note that this is the same unique string you added while creating the offer. In the vmworkshop-YOUR_UNIQUE_STRING Resource Group, create a standard Azure Storage account. This will be your CRM database, so name it vmworkshopsayouruniquestring . Note all characters are lower case for naming a storage account. Once the storage account is created, browse to the storage account's overview page. In the left-hand menu, find the Security + networking section. In that section, find and click on the Access keys link. At the top of the page, click the Show keys link, and you see the connection strings for the database. Copy a connection string to your copy/paste buffer. Configure Customer Leads in Partner Center # Go back to the Partner Center tab in your browser. Select the Connect link. From the Lead destination dropdown, select Azure Table . Enter your Contact email and paste in your Storage account connection string . Click the Validate link to ensure your connection string is valid. Click Connect . For each page, you must click the Save draft at the bottom of the page to move on. Click Save draft at the bottom of the page. Properties # You will now navigate to the Properties page by selecting the Properties tab on the left. Categories # You must select at least one category for your offer. Virtual machine offers always appear under the Compute category in Azure Marketplace. For this lab we will be selecting the below configurations. Click the + Categories link. In the left dropdown, select Compute . In the right dropdown, select Application Infrastructure . Legal # We will be using the Microsoft Standard Contract for this lab. You may choose differently when you are publishing to the prod environment. Scroll down to the Legal section. Select Use the Standard Contract for Microsoft\u2019s commercial marketplace? checkbox Click Accept . Click the Save draft button. Offer listing # Navigate to the Offer listing page. In the the Offer listing section, for Search results summary enter VM Workshop summary . For Short Description and Description , here is some text you may choose to copy and paste into the text box. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat cupiditat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. In the Privacy policy link , enter the public link to the privacy policy for your company if you know it. If not, follow this link to Microsoft's privacy policy and use that URL. >Please note that using Microsoft's privacy policy is only for the purpose of this lab and should not be used for your production offer. In the Customer Support links section, enter Azure support website information (Optional) In the Partner Support Contact section, enter your contact information. In the Engineering Contact section, enter your engineering contact information. In the Cloud Solution Provider Program Contact section, enter the appropriate contact information (Optional) For the Marketplace media section you'll upload 2 images. For the 216X216 logo image, upload the PNG provided in the ./items directory of lab1 . This PNG is named \" Contoso-Logo-216x216.png .\" For the 1280X720 screenshot image, upload the PNG provided in the ./items directory of lab1 . This PNG is named \" Screenshots-1280x720.png .\" Add a screenshot image caption. Click the Save draft button and correct any errors that be shown before moving on. Preview audience # In the Preview audience section, enter your Azure subscription Id. Enter a Description (Optional). Click Save draft . Technical configuration # Skip this section for this first lab. Plan overview # Skip this section for this lab. Resell through CSPs # Finally navigate to the Resell through CSPs tab. Select \"No partners in the CSP program.\" Click the Save draft button at the bottom of the screen. Review and Publish # In this short exercise, you will check your work by performing the first action of the publication process. You will submit your offer for review to see if it is ready to be published. Open your offer's overview page. In the upper right corner of the page, click the link for Review and publish . Looking to the right side of the page, notice that some sections have a green circle and at least one is gray. The gray sections are not yet complete, preventing you from taking the next step of publishing your offer. The Plan overview section of the offer will not pass review. This is okay for now as we need to fill out the Plan overview tab and you can't do that until we have a VM image. All other sections should be green. Go back to all sections that appear with a gray circle and complete those sections with the guidance provided above. Ensure all sections pass except Plan overview , which will be addressed in the next lab. Congratulations! You have now finished this lab. If you are in a live class setting, please raise your hand (even if virtually) to indicate you are done with the lab.","title":"Lab 1 - Partner Center Setup for a Virtual Machine Offer"},{"location":"vm/Labs/lab1-partner-center-setup/#prerequisites-before-starting-this-lab","text":"Partner Center Account with enrollment in the commercial marketplace program Access to the Azure Portal on the same tenant as is on Partner Center (Same tenancy is required to ensure you can publish images out of Azure Compute Galleries, more on this in the later modules).","title":"Prerequisites before starting this lab"},{"location":"vm/Labs/lab1-partner-center-setup/#create-a-new-virtual-machine-offer","text":"In this section you will be creating a brand new VM Offer from scratch. This will be used for publishing the offer once the rest of your labs are completed. The following steps will create an offer on your Partner Center Portal. On the Homepage of Partner Center, look for Marketplace Offers and click that tile. If you have disabled Workspaces, then it will be visible as Commercial Marketplace. Click the + New Offer button and select Azure Virtual Machine from the dropdown. You will now have to enter a unique Offer ID and an Offer Alias. For the purpose of uniformity for this lab, we will set a unique string to identify resources, like so, Offer ID: vmworkshop-YOUR_UNIQUE_STRING Offer Alias: VM Workshop YOUR_UNIQUE_STRING Replace the variable YOUR_UNIQUE_STRING with a name unique to your organization Once the offer is created, navigate to the Offer Setup page by clicking on that tab on the left","title":"Create a new Virtual Machine Offer"},{"location":"vm/Labs/lab1-partner-center-setup/#offer-setup","text":"Offer Setup page will direct you with ways to change your offer alias as well as enable Test Drive. For the purpose of this lab, we will leave everything as is and only configure the Customer leads section.","title":"Offer Setup"},{"location":"vm/Labs/lab1-partner-center-setup/#customer-leads","text":"Here, you will attach your offer to an Azure Data Storage table which will act as a connected Customer Relationship Management system (CRM) for your offer.","title":"Customer leads"},{"location":"vm/Labs/lab1-partner-center-setup/#create-the-azure-storage-account","text":"This is the first time you're using the Azure portal for this class. It is recommended that you install all the resources you'll create in this class into the same Resource Group, just to keep things tidy within your Azure subscription. Open a new tab for the Azure portal and log in. Create a Resource Group named vmworkshop-YOUR_UNIQUE_STRING . Please note that this is the same unique string you added while creating the offer. In the vmworkshop-YOUR_UNIQUE_STRING Resource Group, create a standard Azure Storage account. This will be your CRM database, so name it vmworkshopsayouruniquestring . Note all characters are lower case for naming a storage account. Once the storage account is created, browse to the storage account's overview page. In the left-hand menu, find the Security + networking section. In that section, find and click on the Access keys link. At the top of the page, click the Show keys link, and you see the connection strings for the database. Copy a connection string to your copy/paste buffer.","title":"Create the Azure Storage account"},{"location":"vm/Labs/lab1-partner-center-setup/#configure-customer-leads-in-partner-center","text":"Go back to the Partner Center tab in your browser. Select the Connect link. From the Lead destination dropdown, select Azure Table . Enter your Contact email and paste in your Storage account connection string . Click the Validate link to ensure your connection string is valid. Click Connect . For each page, you must click the Save draft at the bottom of the page to move on. Click Save draft at the bottom of the page.","title":"Configure Customer Leads in Partner Center"},{"location":"vm/Labs/lab1-partner-center-setup/#properties","text":"You will now navigate to the Properties page by selecting the Properties tab on the left.","title":"Properties"},{"location":"vm/Labs/lab1-partner-center-setup/#categories","text":"You must select at least one category for your offer. Virtual machine offers always appear under the Compute category in Azure Marketplace. For this lab we will be selecting the below configurations. Click the + Categories link. In the left dropdown, select Compute . In the right dropdown, select Application Infrastructure .","title":"Categories"},{"location":"vm/Labs/lab1-partner-center-setup/#legal","text":"We will be using the Microsoft Standard Contract for this lab. You may choose differently when you are publishing to the prod environment. Scroll down to the Legal section. Select Use the Standard Contract for Microsoft\u2019s commercial marketplace? checkbox Click Accept . Click the Save draft button.","title":"Legal"},{"location":"vm/Labs/lab1-partner-center-setup/#offer-listing","text":"Navigate to the Offer listing page. In the the Offer listing section, for Search results summary enter VM Workshop summary . For Short Description and Description , here is some text you may choose to copy and paste into the text box. Quis aute iure reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint obcaecat cupiditat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. In the Privacy policy link , enter the public link to the privacy policy for your company if you know it. If not, follow this link to Microsoft's privacy policy and use that URL. >Please note that using Microsoft's privacy policy is only for the purpose of this lab and should not be used for your production offer. In the Customer Support links section, enter Azure support website information (Optional) In the Partner Support Contact section, enter your contact information. In the Engineering Contact section, enter your engineering contact information. In the Cloud Solution Provider Program Contact section, enter the appropriate contact information (Optional) For the Marketplace media section you'll upload 2 images. For the 216X216 logo image, upload the PNG provided in the ./items directory of lab1 . This PNG is named \" Contoso-Logo-216x216.png .\" For the 1280X720 screenshot image, upload the PNG provided in the ./items directory of lab1 . This PNG is named \" Screenshots-1280x720.png .\" Add a screenshot image caption. Click the Save draft button and correct any errors that be shown before moving on.","title":"Offer listing"},{"location":"vm/Labs/lab1-partner-center-setup/#preview-audience","text":"In the Preview audience section, enter your Azure subscription Id. Enter a Description (Optional). Click Save draft .","title":"Preview audience"},{"location":"vm/Labs/lab1-partner-center-setup/#technical-configuration","text":"Skip this section for this first lab.","title":"Technical configuration"},{"location":"vm/Labs/lab1-partner-center-setup/#plan-overview","text":"Skip this section for this lab.","title":"Plan overview"},{"location":"vm/Labs/lab1-partner-center-setup/#resell-through-csps","text":"Finally navigate to the Resell through CSPs tab. Select \"No partners in the CSP program.\" Click the Save draft button at the bottom of the screen.","title":"Resell through CSPs"},{"location":"vm/Labs/lab1-partner-center-setup/#review-and-publish","text":"In this short exercise, you will check your work by performing the first action of the publication process. You will submit your offer for review to see if it is ready to be published. Open your offer's overview page. In the upper right corner of the page, click the link for Review and publish . Looking to the right side of the page, notice that some sections have a green circle and at least one is gray. The gray sections are not yet complete, preventing you from taking the next step of publishing your offer. The Plan overview section of the offer will not pass review. This is okay for now as we need to fill out the Plan overview tab and you can't do that until we have a VM image. All other sections should be green. Go back to all sections that appear with a gray circle and complete those sections with the guidance provided above. Ensure all sections pass except Plan overview , which will be addressed in the next lab. Congratulations! You have now finished this lab. If you are in a live class setting, please raise your hand (even if virtually) to indicate you are done with the lab.","title":"Review and Publish"},{"location":"vm/Labs/lab2-vm-creation/","text":"Note: This lab has 2 modules and you may choose ANY ONE of the two to proceed further. Your choice of Lab will have an effect on future modules, so ensure to work with the right lab before moving forward. Prerequisites before starting these labs Lab 2.a: Create a Windows Virtual Machine Lab 2.b: Create a Linux Virtual Machine Prerequisites before starting these labs # Access to the Azure Portal on the same tenant as is on Partner Center Have an Azure Subscription in order to create and pay for usage of created resources Lab 2.a: Create a Windows Virtual Machine # In this lab you will create a Windows based Virtual Machine. If you choose to go with this lab, you will have to choose the same base image labs for the next sections as well. Lab 2.b: Create a Linux Virtual Machine # In this lab you will create a Linux based Virtual Machine. If you choose to go with this lab, you will have to choose the same base image labs for the next sections as well. You will configure the size, availability considerations as well as use a post deployment script to install a web server within the same server.","title":"Lab 2 - Create a Virtual Machine"},{"location":"vm/Labs/lab2-vm-creation/#prerequisites-before-starting-these-labs","text":"Access to the Azure Portal on the same tenant as is on Partner Center Have an Azure Subscription in order to create and pay for usage of created resources","title":"Prerequisites before starting these labs"},{"location":"vm/Labs/lab2-vm-creation/#lab-2a-create-a-windows-virtual-machine","text":"In this lab you will create a Windows based Virtual Machine. If you choose to go with this lab, you will have to choose the same base image labs for the next sections as well.","title":"Lab 2.a: Create a Windows Virtual Machine"},{"location":"vm/Labs/lab2-vm-creation/#lab-2b-create-a-linux-virtual-machine","text":"In this lab you will create a Linux based Virtual Machine. If you choose to go with this lab, you will have to choose the same base image labs for the next sections as well. You will configure the size, availability considerations as well as use a post deployment script to install a web server within the same server.","title":"Lab 2.b: Create a Linux Virtual Machine"},{"location":"vm/Labs/lab2-vm-creation/lab2.a-create-a-windows-virtual-machine/","text":"Note: This lab is part of a series of labs for Mastering the Virtual Machine Offers Workshop. You should finish this lab as well as prior ones before moving on to the next sections. Upload Post Deployment Script Create a Virtual Machine Basics Disks Networking Management Advanced Review + create Post VM Creation Exercise Windows Update Manually Upload Post Deployment Script # Clone the repository to access files in scripts folder Navigate to the Homepage of Azure Portal Use the Search bar to search for Storage Accounts and hit enter. Select the vmworkshopsayouruniquestring Storage account we created in the previous lab. In the left pane, look for Data Storage and select Containers Click on + Container to create a new container Enter script as the new container name Select Blob for Public access level Click Create at the bottom of the page Open the new container, select Upload and upload the cloned script named custom_extension_windows.ps1 If you open this script in VS Code or Notepad, you will see that it is running commands to install a web server and update the Virtual machine Create a Virtual Machine # Navigate to the Homepage of Azure Portal Click on the + Create a resource button underneath Azure services Use the Search bar to search for Virtual Machines and hit enter. Select the Virtual Machine offered by Microsoft Azure Service and click on Create At this point you will be taken to the Virtual Machine service with several blades for configuration. Basics # Project Details # Select the Subscription from the dropdown menu to select which subscription will pay for the VM and other resource usage To create a new Resource Group, click on Create New and name your resource group as vmworkshop-rg-YOUR_UNIQUE_STRING . Please make sure to follow the same convention for ease of access and understanding. Note that all the resources we create for the labs will reside within this new resource group Instance Details # Name your Virtual Machine vmworkshop-YOUR_UNIQUE_STRING Select the Region you are in from the dropdown menu Under Availability options, select No infrastructure redundancy required Select Standard Security type For Image, click on See all images and select Windows Server 2019 Datacenter - Gen1 . Configure the generation from the Configure VM Generation link below if necessary. For size, click on See all sizes and select Standard_B2ms . This is sufficient to run this lab and will cost around $60/month, but regardless we will stop this virtual machine as soon as we generalize and capture the VM, so usage should be very low. Administrator Account # Enter the username of your choice Enter a strong password of your choice Confirm the strong password Inbound Port Rules # Select the Allowed selected ports radio button for Public inbound ports For Select Inbound ports Select HTTP, RDP as well as HTTPS Leave the rest as is and Click Next : Disks > Disks # Disk Options # For OS Disk Type, select Standard HDD (locally-redundant storage Leave the rest of the fields as is on the page and click on Next : Networking > Networking # Network interface # For Virtual network, Subnet, Public IP keep the default values as is. This will create a new VM, Subnet and Public IP with the default variable names Ensure Select inbound ports has HTTP, RDP and HTTPS checked Leave the rest as is and click on Next : Management > Management # Do not change anything in this section and simply click on Next : Advanced > Advanced # Extensions # Click on Select an extension to install From the display card, select Custom Script Extension and click on Next For Script file, browse for the vmworkshopsayouruniquestring storage account, select script and look for the custom_extension_windows.ps1 Block blob and select it. Lastly click Select at the bottom of the page. [If you dont see storage account, please make sure it is in the same region as the VM which is being created] Now click Create under the Configure Custom Script Extension blade Select Review + create button at the bottom of the Advanced blade Review + create # In this blade, you should ensure that you receive the Validation Passed message at the top. If for any reason you receive a Validation failed message, you should go back and review the fields in red. Lastly take a look at the configurations you have selected and click Create Post VM Creation Exercise # At this point your deployment will start and show an in progress status. Once the deployment is complete, select Go to resource Copy Public IP Address from the created VM and paste it into a browser of your choice. This will show a public facing IP on the internet with a custom Welcome screen. Once you see the custom welcome screen, you know that the post deployment script has done its job. Windows Update Manually # In this module, we will remote into the vm and install an update manually. 1. On your Azure Portal , navigate to the VM you just created. Click on Connect from the tabs on the left under Settings. 1. In the RDP blade, select Download RDP file . This will download a copy to your local machine. Double-click the downloaded RDP file. 1. It will open a popup asking if you recognize the publisher. Click on Connect . 1. When asked for credentials, make sure to input the username and password you created for the VM. 1. Accept the certificate and click Yes when prompted. 1. Voila! You are now inside the VM. 1. Once the system is setup, search for Check for Updates in the VM and install all available updates > Note: Update all the shown updates before going further. Failure to do so will render your publish process on Partner center with errors Congratulations! You have now finished this lab. If you are in a live class setting, please raise your hand (even if virtually) to indicate you are done with the lab.","title":"Lab 2.a - Create a Windows Virtual Machine"},{"location":"vm/Labs/lab2-vm-creation/lab2.a-create-a-windows-virtual-machine/#upload-post-deployment-script","text":"Clone the repository to access files in scripts folder Navigate to the Homepage of Azure Portal Use the Search bar to search for Storage Accounts and hit enter. Select the vmworkshopsayouruniquestring Storage account we created in the previous lab. In the left pane, look for Data Storage and select Containers Click on + Container to create a new container Enter script as the new container name Select Blob for Public access level Click Create at the bottom of the page Open the new container, select Upload and upload the cloned script named custom_extension_windows.ps1 If you open this script in VS Code or Notepad, you will see that it is running commands to install a web server and update the Virtual machine","title":"Upload Post Deployment Script"},{"location":"vm/Labs/lab2-vm-creation/lab2.a-create-a-windows-virtual-machine/#create-a-virtual-machine","text":"Navigate to the Homepage of Azure Portal Click on the + Create a resource button underneath Azure services Use the Search bar to search for Virtual Machines and hit enter. Select the Virtual Machine offered by Microsoft Azure Service and click on Create At this point you will be taken to the Virtual Machine service with several blades for configuration.","title":"Create a Virtual Machine"},{"location":"vm/Labs/lab2-vm-creation/lab2.a-create-a-windows-virtual-machine/#basics","text":"","title":"Basics"},{"location":"vm/Labs/lab2-vm-creation/lab2.a-create-a-windows-virtual-machine/#project-details","text":"Select the Subscription from the dropdown menu to select which subscription will pay for the VM and other resource usage To create a new Resource Group, click on Create New and name your resource group as vmworkshop-rg-YOUR_UNIQUE_STRING . Please make sure to follow the same convention for ease of access and understanding. Note that all the resources we create for the labs will reside within this new resource group","title":"Project Details"},{"location":"vm/Labs/lab2-vm-creation/lab2.a-create-a-windows-virtual-machine/#instance-details","text":"Name your Virtual Machine vmworkshop-YOUR_UNIQUE_STRING Select the Region you are in from the dropdown menu Under Availability options, select No infrastructure redundancy required Select Standard Security type For Image, click on See all images and select Windows Server 2019 Datacenter - Gen1 . Configure the generation from the Configure VM Generation link below if necessary. For size, click on See all sizes and select Standard_B2ms . This is sufficient to run this lab and will cost around $60/month, but regardless we will stop this virtual machine as soon as we generalize and capture the VM, so usage should be very low.","title":"Instance Details"},{"location":"vm/Labs/lab2-vm-creation/lab2.a-create-a-windows-virtual-machine/#administrator-account","text":"Enter the username of your choice Enter a strong password of your choice Confirm the strong password","title":"Administrator Account"},{"location":"vm/Labs/lab2-vm-creation/lab2.a-create-a-windows-virtual-machine/#inbound-port-rules","text":"Select the Allowed selected ports radio button for Public inbound ports For Select Inbound ports Select HTTP, RDP as well as HTTPS Leave the rest as is and Click Next : Disks >","title":"Inbound Port Rules"},{"location":"vm/Labs/lab2-vm-creation/lab2.a-create-a-windows-virtual-machine/#disks","text":"","title":"Disks"},{"location":"vm/Labs/lab2-vm-creation/lab2.a-create-a-windows-virtual-machine/#disk-options","text":"For OS Disk Type, select Standard HDD (locally-redundant storage Leave the rest of the fields as is on the page and click on Next : Networking >","title":"Disk Options"},{"location":"vm/Labs/lab2-vm-creation/lab2.a-create-a-windows-virtual-machine/#networking","text":"","title":"Networking"},{"location":"vm/Labs/lab2-vm-creation/lab2.a-create-a-windows-virtual-machine/#network-interface","text":"For Virtual network, Subnet, Public IP keep the default values as is. This will create a new VM, Subnet and Public IP with the default variable names Ensure Select inbound ports has HTTP, RDP and HTTPS checked Leave the rest as is and click on Next : Management >","title":"Network interface"},{"location":"vm/Labs/lab2-vm-creation/lab2.a-create-a-windows-virtual-machine/#management","text":"Do not change anything in this section and simply click on Next : Advanced >","title":"Management"},{"location":"vm/Labs/lab2-vm-creation/lab2.a-create-a-windows-virtual-machine/#advanced","text":"","title":"Advanced"},{"location":"vm/Labs/lab2-vm-creation/lab2.a-create-a-windows-virtual-machine/#extensions","text":"Click on Select an extension to install From the display card, select Custom Script Extension and click on Next For Script file, browse for the vmworkshopsayouruniquestring storage account, select script and look for the custom_extension_windows.ps1 Block blob and select it. Lastly click Select at the bottom of the page. [If you dont see storage account, please make sure it is in the same region as the VM which is being created] Now click Create under the Configure Custom Script Extension blade Select Review + create button at the bottom of the Advanced blade","title":"Extensions"},{"location":"vm/Labs/lab2-vm-creation/lab2.a-create-a-windows-virtual-machine/#review-create","text":"In this blade, you should ensure that you receive the Validation Passed message at the top. If for any reason you receive a Validation failed message, you should go back and review the fields in red. Lastly take a look at the configurations you have selected and click Create","title":"Review + create"},{"location":"vm/Labs/lab2-vm-creation/lab2.a-create-a-windows-virtual-machine/#post-vm-creation-exercise","text":"At this point your deployment will start and show an in progress status. Once the deployment is complete, select Go to resource Copy Public IP Address from the created VM and paste it into a browser of your choice. This will show a public facing IP on the internet with a custom Welcome screen. Once you see the custom welcome screen, you know that the post deployment script has done its job.","title":"Post VM Creation Exercise"},{"location":"vm/Labs/lab2-vm-creation/lab2.a-create-a-windows-virtual-machine/#windows-update-manually","text":"In this module, we will remote into the vm and install an update manually. 1. On your Azure Portal , navigate to the VM you just created. Click on Connect from the tabs on the left under Settings. 1. In the RDP blade, select Download RDP file . This will download a copy to your local machine. Double-click the downloaded RDP file. 1. It will open a popup asking if you recognize the publisher. Click on Connect . 1. When asked for credentials, make sure to input the username and password you created for the VM. 1. Accept the certificate and click Yes when prompted. 1. Voila! You are now inside the VM. 1. Once the system is setup, search for Check for Updates in the VM and install all available updates > Note: Update all the shown updates before going further. Failure to do so will render your publish process on Partner center with errors Congratulations! You have now finished this lab. If you are in a live class setting, please raise your hand (even if virtually) to indicate you are done with the lab.","title":"Windows Update Manually"},{"location":"vm/Labs/lab2-vm-creation/lab2.b-create-a-linux-virtual-machine/","text":"Note: This lab is part of a series of labs for Mastering the Virtual Machine Offers Workshop. You should finish this lab as well as prior ones before moving on to the next sections. Upload Post Deployment Script Create a Virtual Machine Basics Disks Networking Management Advanced Review + create Generate New Keypair Post VM Creation Exercise Upload Post Deployment Script # Clone the repository to access files in scripts folder Navigate to the Homepage of Azure Portal Use the Search bar to search for Storage Accounts and hit enter. Select the vmworkshopsayouruniquestring Storage account we created in the previous lab. In the left pane, look for Data Storage and select Containers Click on + Container to create a new container Enter script as the new container name Select Blob for Public access level Click Create at the bottom of the page Open the new container, select Upload and upload the cloned script named custom_extension_linux.sh If you open this script in VS Code or Notepad, you will see that it is running commands to install a web server and update the Virtual machine Create a Virtual Machine # Navigate to the Homepage of Azure Portal Click on the + Create a resource button underneath Azure services Use the Search bar to search for Virtual Machine and hit enter. Select the Virtual Machine offered by Microsoft Azure Service and click on Create At this point you will be taken to the Virtual Machine service with several blades for configuration. Basics # Project Details # Select the Subscription from the dropdown menu to select which subscription will pay for the VM and other resource usage To create a new Resource Group, click on Create New and name your resource group as vmworkshop-rg-YOUR_UNIQUE_STRING . Please make sure to follow the same convention for ease of access and understanding. Note that all the resources we create for the labs will reside within this new resource group Instance Details # Name your Virtual Machine vmworkshop-YOUR_UNIQUE_STRING Select the Region you are in from the dropdown menu Under Availability options, select No infrastructure redundancy required Select Standard Security type For Image, click on See all images and select Ubuntu Server 20.04 LTS - Gen2 . Configure the generation from the Configure VM Generation link below if necessary. For size, click on See all sizes and select Standard_B2ms . This is sufficient to run this lab and will cost around $60/month, but regardless we will stop this virtual machine as soon as we generalize and capture the VM, so usage should be very low. Administrator Account # Select SSH public key as authentication type Enter the username of your choice Select Generate a new key pair from the dropdown for SSH public key source Eneter the name of your Key pair Inbound Port Rules # Select the Allow selected ports radio button for Public inbound ports For Select Inbound ports Select HTTP as well as SSH Leave the rest as is and Click Next : Disks > Disks # Disk Options # For OS Disk Type, select Standard HDD (locally-redundant storage) Leave the rest of the fields as is on the page and click on Next : Networking > Networking # Network interface # For Virtual network, Subnet, Public IP keep the default values as is. This will create a new VM, Subnet and Public IP with the default variable names Ensure Select inbound ports has HTTP and SSH checked Leave the rest as is and click on Next : Management > Management # Do not change anything in this section and simply click on Next : Advanced > Advanced # We may use the Advanced blade to customize the VM in two ways. Firstly using Custom Script Extensions and secondly using cloud init. In this module we will demonstrate both, but you should choose to do only once since both paths will essentially do the same flow of changes. OPTION A. Using cloud init # Navigate to the custom data and cloud init section Copy the code from the custom_extension_linux.sh script in this repository and paste it as is (or) OPTION B. Using Extensions # Click on Select an extension to install From the display card, select Custom Script For Linux and click on Next For Script file, browse for the vmworkshopsayouruniquestring storage account, select script and look for the custom_extension_linux.sh Block blob and select it. [If you dont see storage account, please make sure it is in the same region as the VM which is being created] Under command, modify it to sh custom_extension_linux.sh Select Review + create button at the bottom of the Advanced blade Review + create # In this blade, you should ensure that you receive the Validation Passed message at the top. If for any reason you receive a Validation failed message, you should go back and review the fields in red. Lastly take a look at the configurations you have selected and click Create Generate New Keypair # A popup will show on the screen to indicate creation of a new Key pair Select Download private key and create resource and save it Post VM Creation Exercise # At this point your deployment will start and show an in progress status. Once the deployment is complete, select Go to resource Copy Public IP Address from the created VM and paste it into a browser of your choice. This will show a public facing IP on the internet with a custom Welcome screen. Once you see the custom welcome screen, you know that the post deployment script has done its job. Congratulations! You have now finished this lab. If you are in a live class setting, please raise your hand (even if virtually) to indicate you are done with the lab.","title":"Lab 2.b - Create a Linux Virtual Machine"},{"location":"vm/Labs/lab2-vm-creation/lab2.b-create-a-linux-virtual-machine/#upload-post-deployment-script","text":"Clone the repository to access files in scripts folder Navigate to the Homepage of Azure Portal Use the Search bar to search for Storage Accounts and hit enter. Select the vmworkshopsayouruniquestring Storage account we created in the previous lab. In the left pane, look for Data Storage and select Containers Click on + Container to create a new container Enter script as the new container name Select Blob for Public access level Click Create at the bottom of the page Open the new container, select Upload and upload the cloned script named custom_extension_linux.sh If you open this script in VS Code or Notepad, you will see that it is running commands to install a web server and update the Virtual machine","title":"Upload Post Deployment Script"},{"location":"vm/Labs/lab2-vm-creation/lab2.b-create-a-linux-virtual-machine/#create-a-virtual-machine","text":"Navigate to the Homepage of Azure Portal Click on the + Create a resource button underneath Azure services Use the Search bar to search for Virtual Machine and hit enter. Select the Virtual Machine offered by Microsoft Azure Service and click on Create At this point you will be taken to the Virtual Machine service with several blades for configuration.","title":"Create a Virtual Machine"},{"location":"vm/Labs/lab2-vm-creation/lab2.b-create-a-linux-virtual-machine/#basics","text":"","title":"Basics"},{"location":"vm/Labs/lab2-vm-creation/lab2.b-create-a-linux-virtual-machine/#project-details","text":"Select the Subscription from the dropdown menu to select which subscription will pay for the VM and other resource usage To create a new Resource Group, click on Create New and name your resource group as vmworkshop-rg-YOUR_UNIQUE_STRING . Please make sure to follow the same convention for ease of access and understanding. Note that all the resources we create for the labs will reside within this new resource group","title":"Project Details"},{"location":"vm/Labs/lab2-vm-creation/lab2.b-create-a-linux-virtual-machine/#instance-details","text":"Name your Virtual Machine vmworkshop-YOUR_UNIQUE_STRING Select the Region you are in from the dropdown menu Under Availability options, select No infrastructure redundancy required Select Standard Security type For Image, click on See all images and select Ubuntu Server 20.04 LTS - Gen2 . Configure the generation from the Configure VM Generation link below if necessary. For size, click on See all sizes and select Standard_B2ms . This is sufficient to run this lab and will cost around $60/month, but regardless we will stop this virtual machine as soon as we generalize and capture the VM, so usage should be very low.","title":"Instance Details"},{"location":"vm/Labs/lab2-vm-creation/lab2.b-create-a-linux-virtual-machine/#administrator-account","text":"Select SSH public key as authentication type Enter the username of your choice Select Generate a new key pair from the dropdown for SSH public key source Eneter the name of your Key pair","title":"Administrator Account"},{"location":"vm/Labs/lab2-vm-creation/lab2.b-create-a-linux-virtual-machine/#inbound-port-rules","text":"Select the Allow selected ports radio button for Public inbound ports For Select Inbound ports Select HTTP as well as SSH Leave the rest as is and Click Next : Disks >","title":"Inbound Port Rules"},{"location":"vm/Labs/lab2-vm-creation/lab2.b-create-a-linux-virtual-machine/#disks","text":"","title":"Disks"},{"location":"vm/Labs/lab2-vm-creation/lab2.b-create-a-linux-virtual-machine/#disk-options","text":"For OS Disk Type, select Standard HDD (locally-redundant storage) Leave the rest of the fields as is on the page and click on Next : Networking >","title":"Disk Options"},{"location":"vm/Labs/lab2-vm-creation/lab2.b-create-a-linux-virtual-machine/#networking","text":"","title":"Networking"},{"location":"vm/Labs/lab2-vm-creation/lab2.b-create-a-linux-virtual-machine/#network-interface","text":"For Virtual network, Subnet, Public IP keep the default values as is. This will create a new VM, Subnet and Public IP with the default variable names Ensure Select inbound ports has HTTP and SSH checked Leave the rest as is and click on Next : Management >","title":"Network interface"},{"location":"vm/Labs/lab2-vm-creation/lab2.b-create-a-linux-virtual-machine/#management","text":"Do not change anything in this section and simply click on Next : Advanced >","title":"Management"},{"location":"vm/Labs/lab2-vm-creation/lab2.b-create-a-linux-virtual-machine/#advanced","text":"We may use the Advanced blade to customize the VM in two ways. Firstly using Custom Script Extensions and secondly using cloud init. In this module we will demonstrate both, but you should choose to do only once since both paths will essentially do the same flow of changes.","title":"Advanced"},{"location":"vm/Labs/lab2-vm-creation/lab2.b-create-a-linux-virtual-machine/#option-a-using-cloud-init","text":"Navigate to the custom data and cloud init section Copy the code from the custom_extension_linux.sh script in this repository and paste it as is (or)","title":"OPTION A. Using cloud init"},{"location":"vm/Labs/lab2-vm-creation/lab2.b-create-a-linux-virtual-machine/#option-b-using-extensions","text":"Click on Select an extension to install From the display card, select Custom Script For Linux and click on Next For Script file, browse for the vmworkshopsayouruniquestring storage account, select script and look for the custom_extension_linux.sh Block blob and select it. [If you dont see storage account, please make sure it is in the same region as the VM which is being created] Under command, modify it to sh custom_extension_linux.sh Select Review + create button at the bottom of the Advanced blade","title":"OPTION B. Using Extensions"},{"location":"vm/Labs/lab2-vm-creation/lab2.b-create-a-linux-virtual-machine/#review-create","text":"In this blade, you should ensure that you receive the Validation Passed message at the top. If for any reason you receive a Validation failed message, you should go back and review the fields in red. Lastly take a look at the configurations you have selected and click Create","title":"Review + create"},{"location":"vm/Labs/lab2-vm-creation/lab2.b-create-a-linux-virtual-machine/#generate-new-keypair","text":"A popup will show on the screen to indicate creation of a new Key pair Select Download private key and create resource and save it","title":"Generate New Keypair"},{"location":"vm/Labs/lab2-vm-creation/lab2.b-create-a-linux-virtual-machine/#post-vm-creation-exercise","text":"At this point your deployment will start and show an in progress status. Once the deployment is complete, select Go to resource Copy Public IP Address from the created VM and paste it into a browser of your choice. This will show a public facing IP on the internet with a custom Welcome screen. Once you see the custom welcome screen, you know that the post deployment script has done its job. Congratulations! You have now finished this lab. If you are in a live class setting, please raise your hand (even if virtually) to indicate you are done with the lab.","title":"Post VM Creation Exercise"},{"location":"vm/Labs/lab3-generalize-and-capture-image/","text":"Note: This lab has 2 modules and you should choose the appropriate lab based on your previous selection. Prerequisites before starting these labs Lab 3.a: Create a Windows Virtual Machine Lab 3.b: Create a Linux Virtual Machine Prerequisites before starting these labs # Access to the Azure Portal on the same tenant as is on Partner Center Have an Azure Subscription in order to create and pay for usage of created resources Lab 3.a: Create a Windows Virtual Machine # In this lab you will generalize and capture the Windows based Virtual Machine you created in the previous lab. Lab 3.b: Create a Linux Virtual Machine # In this lab you will generalize and capture the Linux based Virtual Machine you created in the previous lab.","title":"Lab 3 - Generalize and Capture Image"},{"location":"vm/Labs/lab3-generalize-and-capture-image/#prerequisites-before-starting-these-labs","text":"Access to the Azure Portal on the same tenant as is on Partner Center Have an Azure Subscription in order to create and pay for usage of created resources","title":"Prerequisites before starting these labs"},{"location":"vm/Labs/lab3-generalize-and-capture-image/#lab-3a-create-a-windows-virtual-machine","text":"In this lab you will generalize and capture the Windows based Virtual Machine you created in the previous lab.","title":"Lab 3.a: Create a Windows Virtual Machine"},{"location":"vm/Labs/lab3-generalize-and-capture-image/#lab-3b-create-a-linux-virtual-machine","text":"In this lab you will generalize and capture the Linux based Virtual Machine you created in the previous lab.","title":"Lab 3.b: Create a Linux Virtual Machine"},{"location":"vm/Labs/lab3-generalize-and-capture-image/lab3.a-generalize-and-capture-windows-image/","text":"Note: This lab is part of a series of labs for Mastering the Virtual Machine Offers Workshop. You should finish this lab as well as prior ones before moving on to the next sections. Generalize and Capture Remote into the Virtual Machine Generalize the Virtual Machine Capture the Image Create an Image Post Image Creation Exercise Generalize and Capture # In this module, we will remote into the vm and generalize the Virtual machine Remote into the Virtual Machine # On your Azure Portal , navigate to the VM you just created. Click on Connect from the tabs on the left under Settings. In the RDP blade, select Download RDP file . This will download a copy to your local machine. Double-click the downloaded RDP file. It will open a popup asking if you recognize the publisher. Click on Connect . When asked for credentials, make sure to input the username and password you created for the VM. Accept the certificate and click Yes when prompted. Voila! You are now inside the VM. At this point we want to ensure that the VM doesn't have any pending updates. Search for Check for Updates and install any updates if there are any pending. Generalize the Virtual Machine # Open File Explorer inside the VM and navigate to C:\\Windows\\System32\\Sysprep Run the sysprep application Check the Generalize checkbox under System cleanup actions From the Shutdown options dropdown, select Shutdown and click OK At this point, your VM will process these commands and in a few minutes will close the application on its own. Please note that the VM should NOT be restarted once it is generalized. Capture the Image # In this module, we will capture an image from the Generalized VM and store it in a Compute Gallery. We will also define Image definitions within the Compute Gallery for organization. Navigate to the VM on Azure Portal You will see that the VM has been stopped under VM Status Click on Capture from the options available on top Create an Image # Select a subscription from the dropdown menu For Resource Group, select the same resource group we created earlier vmworkshop-rg-YOUR_UNIQUE_STRING . Under Instance details, select the Yes, share it to a gallery as a VM image version radio button Under Gallery Details, select Create new and give it a name For Operating system state, select the Generalized radio button Click the Create new for Target VM image definition and give your definition a name and click OK Give your image a version name of 0.0.1 Lastly click Review + Create at the bottom. Once validation has passed, click Create . Post Image Creation Exercise # In this exercise we will verify that the image is created and ready to be used. 1. In your Azure Portal , search for Compute Gallery using the search bar and select your new Compute Gallery 1. Click on the definition you created 1. You should now see the version number of the image created as well as verify the Provisioning State is Succeeded and Replication Status is Completed . Congratulations! You have now finished this lab. If you are in a live class setting, please raise your hand (even if virtually) to indicate you are done with the lab.","title":"Lab 3.a - Generalize and capture a Windows Image"},{"location":"vm/Labs/lab3-generalize-and-capture-image/lab3.a-generalize-and-capture-windows-image/#generalize-and-capture","text":"In this module, we will remote into the vm and generalize the Virtual machine","title":"Generalize and Capture"},{"location":"vm/Labs/lab3-generalize-and-capture-image/lab3.a-generalize-and-capture-windows-image/#remote-into-the-virtual-machine","text":"On your Azure Portal , navigate to the VM you just created. Click on Connect from the tabs on the left under Settings. In the RDP blade, select Download RDP file . This will download a copy to your local machine. Double-click the downloaded RDP file. It will open a popup asking if you recognize the publisher. Click on Connect . When asked for credentials, make sure to input the username and password you created for the VM. Accept the certificate and click Yes when prompted. Voila! You are now inside the VM. At this point we want to ensure that the VM doesn't have any pending updates. Search for Check for Updates and install any updates if there are any pending.","title":"Remote into the Virtual Machine"},{"location":"vm/Labs/lab3-generalize-and-capture-image/lab3.a-generalize-and-capture-windows-image/#generalize-the-virtual-machine","text":"Open File Explorer inside the VM and navigate to C:\\Windows\\System32\\Sysprep Run the sysprep application Check the Generalize checkbox under System cleanup actions From the Shutdown options dropdown, select Shutdown and click OK At this point, your VM will process these commands and in a few minutes will close the application on its own. Please note that the VM should NOT be restarted once it is generalized.","title":"Generalize the Virtual Machine"},{"location":"vm/Labs/lab3-generalize-and-capture-image/lab3.a-generalize-and-capture-windows-image/#capture-the-image","text":"In this module, we will capture an image from the Generalized VM and store it in a Compute Gallery. We will also define Image definitions within the Compute Gallery for organization. Navigate to the VM on Azure Portal You will see that the VM has been stopped under VM Status Click on Capture from the options available on top","title":"Capture the Image"},{"location":"vm/Labs/lab3-generalize-and-capture-image/lab3.a-generalize-and-capture-windows-image/#create-an-image","text":"Select a subscription from the dropdown menu For Resource Group, select the same resource group we created earlier vmworkshop-rg-YOUR_UNIQUE_STRING . Under Instance details, select the Yes, share it to a gallery as a VM image version radio button Under Gallery Details, select Create new and give it a name For Operating system state, select the Generalized radio button Click the Create new for Target VM image definition and give your definition a name and click OK Give your image a version name of 0.0.1 Lastly click Review + Create at the bottom. Once validation has passed, click Create .","title":"Create an Image"},{"location":"vm/Labs/lab3-generalize-and-capture-image/lab3.a-generalize-and-capture-windows-image/#post-image-creation-exercise","text":"In this exercise we will verify that the image is created and ready to be used. 1. In your Azure Portal , search for Compute Gallery using the search bar and select your new Compute Gallery 1. Click on the definition you created 1. You should now see the version number of the image created as well as verify the Provisioning State is Succeeded and Replication Status is Completed . Congratulations! You have now finished this lab. If you are in a live class setting, please raise your hand (even if virtually) to indicate you are done with the lab.","title":"Post Image Creation Exercise"},{"location":"vm/Labs/lab3-generalize-and-capture-image/lab3.b-generalize-and-capture-linux-image/","text":"Note: This lab is part of a series of labs for Mastering the Virtual Machine Offers Workshop. You should finish this lab as well as prior ones before moving on to the next sections. Generalize and Capture SSH into the Virtual Machine Generalize the VM Stop Virtual Machine Capture the Image Create an Image Post Image Creation Exercise Generalize and Capture # In this module, we will ssh into the vm and generalize the Virtual machine SSH into the Virtual Machine # On your Azure Portal , navigate to the VM you just created. Click on Connect from the tabs on the left under Settings. In the SSH blade, paste the local path where the downloaded private key resides into the Private key path textbox. This will generate the command to ssh into the VM below. Copy this command. Example: when you paste [C:\\Users\\CurrentUser\\Downloads\\vm_key.pem] into textbox 3, command ssh -i [C:\\Users\\CurrentUser\\Downloads\\vm_key.pem] [user]@[ip] will be generated at textbox 4. Open command prompt locally and paste this copied command and press enter. Type in yes when prompted to authenticate the host. Generalize the VM # In the SSH window, enter this command sudo waagent -deprovision+user Type Y to continue (you can add the -force parameter to the previous command to avoid the confirmation step). After the command completes, enter Exit to close the SSH client. Stop Virtual Machine # In the Azure portal, navigate to your VM in your resource group (RG) and de-allocate the VM (Stop). Your VM is now generalized and you can create a new VM using this VM disk. Capture the Image # In this module, we will capture an image from the Generalized VM and store it in a Compute Gallery. We will also define Image definitions within the Compute Gallery for organization. Navigate to the VM on Azure Portal . You will see that the VM has been stopped under VM Status Click on Capture from the options available on top Create an Image # Select a subscription from the dropdown menu For Resource Group, select the same resource group we created earlier vmworkshop-rg-YOUR_UNIQUE_STRING . Under Instance details, select the Yes, share it to a gallery as a VM image version radio button Under Gallery Details, select Create new and give it a name For Operating system state, select the Generalized radio button Click the Create new for Target VM image definition and give your definition a name and click OK Give your image a version name of 0.0.1 Lastly click Review + Create at the bottom. Once validation has passed, click Create . Post Image Creation Exercise # In this exercise we will verify that the image is created and ready to be used. 1. In your Azure Portal , search for Compute Gallery using the search bar and select your new Compute Gallery 1. Click on the definition you created 1. You should now see the version number of the image created as well as verify the Provisioning State is Succeeded and Replication Status is Completed . Congratulations! You have now finished this lab. If you are in a live class setting, please raise your hand (even if virtually) to indicate you are done with the lab.","title":"Lab 3.b - Generalize and capture a Linux Image"},{"location":"vm/Labs/lab3-generalize-and-capture-image/lab3.b-generalize-and-capture-linux-image/#generalize-and-capture","text":"In this module, we will ssh into the vm and generalize the Virtual machine","title":"Generalize and Capture"},{"location":"vm/Labs/lab3-generalize-and-capture-image/lab3.b-generalize-and-capture-linux-image/#ssh-into-the-virtual-machine","text":"On your Azure Portal , navigate to the VM you just created. Click on Connect from the tabs on the left under Settings. In the SSH blade, paste the local path where the downloaded private key resides into the Private key path textbox. This will generate the command to ssh into the VM below. Copy this command. Example: when you paste [C:\\Users\\CurrentUser\\Downloads\\vm_key.pem] into textbox 3, command ssh -i [C:\\Users\\CurrentUser\\Downloads\\vm_key.pem] [user]@[ip] will be generated at textbox 4. Open command prompt locally and paste this copied command and press enter. Type in yes when prompted to authenticate the host.","title":"SSH into the Virtual Machine"},{"location":"vm/Labs/lab3-generalize-and-capture-image/lab3.b-generalize-and-capture-linux-image/#generalize-the-vm","text":"In the SSH window, enter this command sudo waagent -deprovision+user Type Y to continue (you can add the -force parameter to the previous command to avoid the confirmation step). After the command completes, enter Exit to close the SSH client.","title":"Generalize the VM"},{"location":"vm/Labs/lab3-generalize-and-capture-image/lab3.b-generalize-and-capture-linux-image/#stop-virtual-machine","text":"In the Azure portal, navigate to your VM in your resource group (RG) and de-allocate the VM (Stop). Your VM is now generalized and you can create a new VM using this VM disk.","title":"Stop Virtual Machine"},{"location":"vm/Labs/lab3-generalize-and-capture-image/lab3.b-generalize-and-capture-linux-image/#capture-the-image","text":"In this module, we will capture an image from the Generalized VM and store it in a Compute Gallery. We will also define Image definitions within the Compute Gallery for organization. Navigate to the VM on Azure Portal . You will see that the VM has been stopped under VM Status Click on Capture from the options available on top","title":"Capture the Image"},{"location":"vm/Labs/lab3-generalize-and-capture-image/lab3.b-generalize-and-capture-linux-image/#create-an-image","text":"Select a subscription from the dropdown menu For Resource Group, select the same resource group we created earlier vmworkshop-rg-YOUR_UNIQUE_STRING . Under Instance details, select the Yes, share it to a gallery as a VM image version radio button Under Gallery Details, select Create new and give it a name For Operating system state, select the Generalized radio button Click the Create new for Target VM image definition and give your definition a name and click OK Give your image a version name of 0.0.1 Lastly click Review + Create at the bottom. Once validation has passed, click Create .","title":"Create an Image"},{"location":"vm/Labs/lab3-generalize-and-capture-image/lab3.b-generalize-and-capture-linux-image/#post-image-creation-exercise","text":"In this exercise we will verify that the image is created and ready to be used. 1. In your Azure Portal , search for Compute Gallery using the search bar and select your new Compute Gallery 1. Click on the definition you created 1. You should now see the version number of the image created as well as verify the Provisioning State is Succeeded and Replication Status is Completed . Congratulations! You have now finished this lab. If you are in a live class setting, please raise your hand (even if virtually) to indicate you are done with the lab.","title":"Post Image Creation Exercise"},{"location":"vm/Labs/lab4-publish-your-vm-offer/","text":"Note: This lab is part of a series of labs for Mastering the Virtual Machine Offers Workshop. You should finish prior ones before moving on to the next sections. Plan Overview Permissions for Shared Image Gallery Create a plan on Partner center Review and Publish Plan Overview # In this lab, we will complete the rest of the required setup on Partner Center to publish our offer. At this point, the only section that should need completion is Plan Overview. If you have any other sections pending completion, please refer to the previous labs. Permissions for Shared Image Gallery # If your Partner Center account is the owner of the subscription hosting Azure Compute Gallery, nothing further is needed for permissions. If you are not the owner of the subscription that created the shared image gallery, you will need to assign appropriate permissions in order to share the image on Partner Center. Follow the below steps: 1. Go to the Azure Compute Gallery. 1. Select Access control (IAM) on the left panel. 1. Select Add, then Add role assignment. 1. The add role assignment window is shown. For Role, select Owner. 1. For Assign access to, select User, group, or service principal. 1. For Select, enter the Azure email of the person who will publish the image. Select Save. Create a plan on Partner center # Go to your Partner center account inside the Draft VM offer. Select the Plan overview section and click on New Plan . Give your plan a unique Plan Id and Plan name and hit Create. In the Plan listing tab, give your plan a name, description and summary. Open the Pricing and avaialbility tab next. Add the required market in the Edit Market section. Next select the Free plan under Price input options Switch the plan visibility to Private and put in your Tenant and Subscription Id and click on Save Draft Go to the Technical Configuration tab next and select the Operating System family based on your OS type Select the Vendor and OS friendly name . Select D2 Standard v3 from Recommended VM sizes . Select the appropriate properties depending on if you used extensions/cloud init Select the image type, Gen1/Gen2 based on the base image you selected in the VM Creation Lab Lastly add the image by putting a version number and selecting the image from the created image gallery. Review and Publish # Finally click on Review and publish . Youshould now see green checkmarks against all the sections and you are now ready to publish. Click on Publish at the bottom to start the publishing process. Congratulations! You have now finished this lab. If you are in a live class setting, please raise your hand (even if virtually) to indicate you are done with the lab.","title":"Lab 4 - Publish your VM Offer"},{"location":"vm/Labs/lab4-publish-your-vm-offer/#plan-overview","text":"In this lab, we will complete the rest of the required setup on Partner Center to publish our offer. At this point, the only section that should need completion is Plan Overview. If you have any other sections pending completion, please refer to the previous labs.","title":"Plan Overview"},{"location":"vm/Labs/lab4-publish-your-vm-offer/#permissions-for-shared-image-gallery","text":"If your Partner Center account is the owner of the subscription hosting Azure Compute Gallery, nothing further is needed for permissions. If you are not the owner of the subscription that created the shared image gallery, you will need to assign appropriate permissions in order to share the image on Partner Center. Follow the below steps: 1. Go to the Azure Compute Gallery. 1. Select Access control (IAM) on the left panel. 1. Select Add, then Add role assignment. 1. The add role assignment window is shown. For Role, select Owner. 1. For Assign access to, select User, group, or service principal. 1. For Select, enter the Azure email of the person who will publish the image. Select Save.","title":"Permissions for Shared Image Gallery"},{"location":"vm/Labs/lab4-publish-your-vm-offer/#create-a-plan-on-partner-center","text":"Go to your Partner center account inside the Draft VM offer. Select the Plan overview section and click on New Plan . Give your plan a unique Plan Id and Plan name and hit Create. In the Plan listing tab, give your plan a name, description and summary. Open the Pricing and avaialbility tab next. Add the required market in the Edit Market section. Next select the Free plan under Price input options Switch the plan visibility to Private and put in your Tenant and Subscription Id and click on Save Draft Go to the Technical Configuration tab next and select the Operating System family based on your OS type Select the Vendor and OS friendly name . Select D2 Standard v3 from Recommended VM sizes . Select the appropriate properties depending on if you used extensions/cloud init Select the image type, Gen1/Gen2 based on the base image you selected in the VM Creation Lab Lastly add the image by putting a version number and selecting the image from the created image gallery.","title":"Create a plan on Partner center"},{"location":"vm/Labs/lab4-publish-your-vm-offer/#review-and-publish","text":"Finally click on Review and publish . Youshould now see green checkmarks against all the sections and you are now ready to publish. Click on Publish at the bottom to start the publishing process. Congratulations! You have now finished this lab. If you are in a live class setting, please raise your hand (even if virtually) to indicate you are done with the lab.","title":"Review and Publish"},{"location":"vm/Labs/lab5-purchase-your-offer/","text":"Note: This lab is part of a series of labs for Mastering the Virtual Machine Offers Workshop. You should finish this lab before moving on to the next sections. Prerequisites before starting this lab Purchase your Offer Prerequisites before starting this lab # Access to the Azure Portal on the same tenant as is on Partner Center An active Azure Subscription to pay for resource creation Purchase your Offer # Navigate to the offer link shown on Partner Center in the Offer Overview page Select the plan you want to purchase from the drop down list and click Create Under the Basics tab, configure the Subscription, Resource Group, Virtual Machine name and size based on your requirements (you may leave it default) Switch over to Disks tab and select Standard HDD for OS Disk Type. Leave the rest default and click on Review + create at the bottom ONce validation has passed, reverify the configuration details and click Create . This will start the deployment of your VM based on the plan selected. Once deployment has succeeded, navigate to the resource group that hosts the new vm and copt the Public IP of the Virtual Machine. Open a new tab and paste the copied Public IP. You will now see the deployed server page with the customized message you added in the Post Deployment script during VM creation. Congratulations! You have now successfully completed this lab as well as purchased the offer the you created. You can now explore and create new images based on production requirements If you are in a live class setting, please raise your hand (even if virtually) to indicate you are done with the lab.","title":"Lab 5 - Purchase your Offer"},{"location":"vm/Labs/lab5-purchase-your-offer/#prerequisites-before-starting-this-lab","text":"Access to the Azure Portal on the same tenant as is on Partner Center An active Azure Subscription to pay for resource creation","title":"Prerequisites before starting this lab"},{"location":"vm/Labs/lab5-purchase-your-offer/#purchase-your-offer","text":"Navigate to the offer link shown on Partner Center in the Offer Overview page Select the plan you want to purchase from the drop down list and click Create Under the Basics tab, configure the Subscription, Resource Group, Virtual Machine name and size based on your requirements (you may leave it default) Switch over to Disks tab and select Standard HDD for OS Disk Type. Leave the rest default and click on Review + create at the bottom ONce validation has passed, reverify the configuration details and click Create . This will start the deployment of your VM based on the plan selected. Once deployment has succeeded, navigate to the resource group that hosts the new vm and copt the Public IP of the Virtual Machine. Open a new tab and paste the copied Public IP. You will now see the deployed server page with the customized message you added in the Post Deployment script during VM creation. Congratulations! You have now successfully completed this lab as well as purchased the offer the you created. You can now explore and create new images based on production requirements If you are in a live class setting, please raise your hand (even if virtually) to indicate you are done with the lab.","title":"Purchase your Offer"},{"location":"vm/Packer/","text":"Packer # This module explains how to setup Packer and run a simple deployment of a VM image with a server installed and finally create a VM using the created image. You need to have Packer installed in order to run this exercise. You can find ways to download Packer here : Packer Download Once you have packer downloaded, you can verify the installation by following the steps laid out here: Verify Packer Installation There are detailed steps available to start a Packer implementation on Azure, you will find them here: Microsoft Packer Documentation Step 1: Run the azresource.ps1 script # Run the below command to setup resources .\\az-resource.ps1 The az-resource.ps1 script will create 2 resource groups, a service principal, a shared image gallery and an image definition. The first resource group will be used to save the image version and the second to store temporary resources. You may change the naming conventions in the script to match your requirements. Step 2: Packer Build # Run the below command within the folder where you cloned the Packer script. We will execute the packerlinux.json file. packer build -var location=westus2 -var sig_gallery_resource_group=myResourceGroup -var sig_gallery_name=packergallery -var sig_image_name=packerimagedefn -var sig_image_version=1.0.0 .\\Packer\\packerlinux.json This will start creating the image in the image definition for use.","title":"Packer"},{"location":"vm/Packer/#packer","text":"This module explains how to setup Packer and run a simple deployment of a VM image with a server installed and finally create a VM using the created image. You need to have Packer installed in order to run this exercise. You can find ways to download Packer here : Packer Download Once you have packer downloaded, you can verify the installation by following the steps laid out here: Verify Packer Installation There are detailed steps available to start a Packer implementation on Azure, you will find them here: Microsoft Packer Documentation","title":"Packer"},{"location":"vm/Packer/#step-1-run-the-azresourceps1-script","text":"Run the below command to setup resources .\\az-resource.ps1 The az-resource.ps1 script will create 2 resource groups, a service principal, a shared image gallery and an image definition. The first resource group will be used to save the image version and the second to store temporary resources. You may change the naming conventions in the script to match your requirements.","title":"Step 1: Run the azresource.ps1 script"},{"location":"vm/Packer/#step-2-packer-build","text":"Run the below command within the folder where you cloned the Packer script. We will execute the packerlinux.json file. packer build -var location=westus2 -var sig_gallery_resource_group=myResourceGroup -var sig_gallery_name=packergallery -var sig_image_name=packerimagedefn -var sig_image_version=1.0.0 .\\Packer\\packerlinux.json This will start creating the image in the image definition for use.","title":"Step 2: Packer Build"}]}